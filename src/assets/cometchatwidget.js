/*! For license information please see cometchatwidget.js.LICENSE.txt */
(() => {
  var e,
    t,
    n,
    r,
    o = {
      6418: (e) => {
        window,
          (e.exports = (function (e) {
            var t = {};
            function n(r) {
              if (t[r]) return t[r].exports;
              var o = (t[r] = { i: r, l: !1, exports: {} });
              return (
                e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports
              );
            }
            return (
              (n.m = e),
              (n.c = t),
              (n.d = function (e, t, r) {
                n.o(e, t) ||
                  Object.defineProperty(e, t, { enumerable: !0, get: r });
              }),
              (n.r = function (e) {
                "undefined" != typeof Symbol &&
                  Symbol.toStringTag &&
                  Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module",
                  }),
                  Object.defineProperty(e, "__esModule", { value: !0 });
              }),
              (n.t = function (e, t) {
                if ((1 & t && (e = n(e)), 8 & t)) return e;
                if (4 & t && "object" == typeof e && e && e.__esModule)
                  return e;
                var r = Object.create(null);
                if (
                  (n.r(r),
                  Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e,
                  }),
                  2 & t && "string" != typeof e)
                )
                  for (var o in e)
                    n.d(
                      r,
                      o,
                      function (t) {
                        return e[t];
                      }.bind(null, o)
                    );
                return r;
              }),
              (n.n = function (e) {
                var t =
                  e && e.__esModule
                    ? function () {
                        return e.default;
                      }
                    : function () {
                        return e;
                      };
                return n.d(t, "a", t), t;
              }),
              (n.o = function (e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
              }),
              (n.p = ""),
              n((n.s = 43))
            );
          })([
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r,
                o,
                i,
                s = n(2);
              (t.constants = {
                DEFAULT_STORE: "cometchat",
                MSG_VER_PRE: "store-ver-pre",
                MSG_VER_POST: "store-ver-post",
              }),
                (t.DEFAULT_VALUES = {
                  ZERO: 0,
                  MSGS_LIMIT: 30,
                  MSGS_MAX_LIMIT: 100,
                  USERS_LIMIT: 30,
                  USERS_MAX_LIMIT: 100,
                  GROUPS_LIMIT: 30,
                  GROUPS_MAX_LIMIT: 100,
                  CONVERSATION_MAX_LIMIT: 50,
                  CALL_TIMEOUT: 45,
                  DEFAULT_MSG_ID: 0,
                  DEFAULT_MAX_TYPING_INDICATOR_LIMIT: 5,
                  REGION_DEFAULT: "eu",
                  REGION_DEFAULT_EU: "eu",
                  REGION_DEFAULT_US: "us",
                  REGION_DEFAULT_IN: "in",
                  REGION_DEFAULT_PRIVATE: "private",
                }),
                (t.CALLING_COMPONENT_VERSION = 3),
                ((r = t.GroupType || (t.GroupType = {})).Public = "public"),
                (r.Private = "private"),
                (r.Protected = "protected"),
                (r.Password = "password"),
                (t.GROUP_TYPE = {
                  PUBLIC: "public",
                  PRIVATE: "private",
                  PROTECTED: "password",
                  PASSWORD: "password",
                }),
                ((o = t.GroupMemberScope || (t.GroupMemberScope = {})).Admin =
                  "admin"),
                (o.Moderator = "moderator"),
                (o.Member = "member"),
                (t.GROUP_MEMBER_SCOPE = {
                  ADMIN: "admin",
                  MODERATOR: "moderator",
                  PARTICIPANT: "participant",
                }),
                (t.APPINFO = {
                  platform: "WEB",
                  sdkVersion: "v2.3.4-beta1",
                  apiVersion: "v2.0",
                  sdkVersionWithUnderScore: "2_3_4_beta1",
                }),
                (t.SDKHeader = {
                  platform: "javascript",
                  sdkVersion: "2.3.4-beta1",
                  sdk: "%s@%s",
                }),
                (t.XMPP = {
                  host: "encke.cometchat.com",
                  port: 7443,
                  ws_url: "/ws/",
                  bind_url: "/http-bind/",
                  deafult_password: "CometChat",
                  PUBSUB_CHANNEL: "pubsub",
                  jid_string: "[%s]%s@%s/%s",
                  bare_jid_string: "[%s]%s@%s",
                  username_string: "[%s]%s",
                  muc_jid_string: "[%s]%s@%s.%s",
                  pubsub_global_string: "[%s]global_presence",
                  pubsub_default_string: "[%s]default",
                  pubsub_role_string: "[%s]%s",
                  xmpp_resource: "javascripts_" + new Date().getTime(),
                  CONVERSATION: {
                    TYPE: { CHAT: "chat", GROUP_CHAT: "groupchat" },
                  },
                }),
                (t.ANALYTICS = {
                  analyticsHost: "metrics-%s.cometchat.io",
                  analyticsVersion: "v1",
                }),
                (t.LOCAL_STORE = {
                  COMMON_STORE: "common_store",
                  MESSAGE_LISTENERS_LIST: "message_listeners_list",
                  USERS_STORE: "users_store",
                  MESSAGES_STORE: "messages_store",
                  KEYS_STORE: "keys_store",
                  STORE_STRING: "%s:%s",
                }),
                (t.ResponseConstants = {
                  RESPONSE_KEYS: {
                    KEY_DATA: "data",
                    KEY_META: "meta",
                    KEY_CURSOR: "cursor",
                    KEY_ACTION: "action",
                    KEY_MESSAGE: "message",
                    KEY_ERROR: "error",
                    KEY_ERROR_DETAILS: "details",
                    KEY_ERROR_CODE: "code",
                    KEY_ERROR_MESSAGE: "message",
                    KEY_AUTH_TOKEN: "authToken",
                    KEY_WS_CHANNEL: "wsChannel",
                    KEY_IDENTITY: "identity",
                    KEY_SERVICE: "identity",
                    KEY_ENTITIES: "entities",
                    KEY_ENTITITY: "entity",
                    KEY_ENTITYTYPE: "entityType",
                    KEY_ATTACHMENTS: "attachments",
                    CODE_REQUEST_OK: 200,
                    CODE_BAD_REQUEST: 401,
                    UNREAD_UNDELIVERED_KEYS: {
                      ENTITY: "entity",
                      ENTITY_TYPE: "entityType",
                      ENTITY_Id: "entityId",
                      COUNT: "count",
                    },
                    GROUP_MEMBERS_RESPONSE: {
                      SUCCESS: "success",
                      ERROR: "error",
                      MESSAGE: "message",
                    },
                    KEY_ENTITY_TYPE: { USER: "user", GROUP: "group" },
                  },
                }),
                (t.DELIVERY_RECEIPTS = {
                  RECEIVER_ID: "receiverId",
                  RECEIVER_TYPE: "type",
                  RECIPIENT: "recipient",
                  MESSAGE_ID: "messageId",
                  RECEIVED: "delivered",
                  DELIVERED_AT: "deliveredAt",
                  ID: "id",
                  TIME: "time",
                  DELIVERED_TO_ME_AT: "deliveredToMeAt",
                }),
                (t.READ_RECEIPTS = {
                  RECEIVER_ID: "receiverId",
                  RECEIVER_TYPE: "type",
                  RECIPIENT: "recipient",
                  MESSAGE_ID: "messageId",
                  READ: "read",
                  READ_AT: "readAt",
                  ID: "id",
                  TIME: "time",
                  READ_BY_ME_AT: "readByMeAt",
                }),
                (t.MessageConstatnts = {
                  XMPP_KEYS: {
                    FROM: "from",
                    TO: "to",
                    TYPE: "type",
                    TYPE_USER: "chat",
                    TYPE_GROUP: "groupchat",
                  },
                  TYPE: {
                    TEXT: "text",
                    MEDIA: "media",
                    IMAGE: "image",
                    VIDEO: "video",
                    AUDIO: "audio",
                    FILE: "file",
                    CUSTOM: "custom",
                  },
                  CATEGORY: {
                    MESSAGE: "message",
                    ACTION: "action",
                    CALL: "call",
                    CUSTOM: "custom",
                  },
                  RECEIVER_TYPE: { USER: "user", GROUP: "group" },
                  KEYS: {
                    ATTATCHMENT: "attatchment",
                    ATTATCHMENTS: "attachments",
                    ACTION: "action",
                    TYPE: "type",
                    DATA: "data",
                    ID: "id",
                    MUID: "muid",
                    SENDER: "sender",
                    RECEIVER: "receiver",
                    RECEIVER_ID: "receiverId",
                    CATEGORY: "category",
                    RECEIVER_TYPE: "receiverType",
                    SENT_AT: "sentAt",
                    STATUS: "status",
                    TEXT: "text",
                    URL: "url",
                    METADATA: "metadata",
                    RECEIPTS: "receipts",
                    MY_RECEIPTS: "myReceipt",
                    CUSTOM_DATA: "customData",
                    CUSTOM_SUB_TYPE: "subType",
                    RESOURCE: "resource",
                  },
                  KNOWN_MEDIA_TYPE: {
                    IMAGE: [],
                    VIDEO: [],
                    AUDIO: [],
                    FILE: [],
                  },
                  PAGINATION: {
                    AFFIX: { APPEND: "append", PREPEND: "prepend" },
                    CURSOR_FILEDS: { ID: "id", SENT_AT: "sentAt" },
                    CURSOR_AFFIX_DEFAULT: "prepend",
                    CURSOR_FIELD_DEFAULT: "sentAt",
                    KEYS: {
                      PER_PAGE: "per_page",
                      CURSOR_AFFIX: "cursorAffix",
                      AFFIX: "affix",
                      CURSOR_FIELD: "cursorField",
                      CURSOR_VALUE: "cursorValue",
                      UID: "uid",
                      SENT_AT: "sentAt",
                      ID: "id",
                      CURRENT_PAGE: "page",
                      UNREAD: "unread",
                      HIDE_MESSAGES_FROM_BLOCKED_USER:
                        "hideMessagesFromBlockedUsers",
                      SEARCH_KEY: "searchKey",
                      ONLY_UPDATES: "onlyUpdates",
                      UPDATED_AT: "updatedAt",
                      CATEGORY: "category",
                      CATEGORIES: "categories",
                      TYPE: "type",
                      TYPES: "types",
                      HIDE_REPLIES: "hideReplies",
                    },
                  },
                }),
                (t.ATTACHMENTS_CONSTANTS = {
                  KEYS: {
                    EXTENSION: "extension",
                    MIME_TYPE: "mimeType",
                    NAME: "name",
                    SIZE: "size",
                    URL: "url",
                  },
                }),
                ((i = t.MessageCategory || (t.MessageCategory = {})).ACTION =
                  "action"),
                (i.MESSAGE = "message"),
                (i.CALL = "call"),
                (i.CUSTOM = "custom"),
                (t.TYPING_NOTIFICATION = {
                  RECEIVER_ID: "receiverId",
                  RECEIVER_TYPE: "receiverType",
                  META: "metadata",
                  KEYS: {
                    TYPING_NOTIFICATION: "typingNotification",
                    TIMESTAMP: "timestamp",
                  },
                  ACTIONS: { STARTED: "started", ENDED: "ended" },
                }),
                (t.ActionConstatnts = {
                  ACTION_SUBJECTS: {
                    ACTION_ON: "on",
                    ACTION_BY: "by",
                    ACTION_FOR: "for",
                  },
                  ACTION_ENTITY_TYPE: {
                    GROUP_USER: "groupuser",
                    USER: "user",
                    GROUP: "group",
                    MESSAGE: "message",
                  },
                  ACTION_KEYS: {
                    ACTION_CREATED: "created",
                    ACTION_UPDATED: "updated",
                    ACTION_DELETED: "deleted",
                    ENTITIES: "entities",
                    ENTITY: "entity",
                    ENTITY_TYPE: "entityType",
                    TYPE_MEMBER_JOINED: "joined",
                    TYPE_MEMBER_LEFT: "left",
                    TYPE_MEMBER_KICKED: "kicked",
                    TYPE_MEMBER_BANNED: "banned",
                    TYPE_MEMBER_UNBANNED: "unbanned",
                    TYPE_MEMBER_INVITED: "invited",
                    TYPE_MEMBER_ADDED: "added",
                    ACTION_SCOPE_CHANGED: "scopeChanged",
                    ACTION_TYPE_USER: "user",
                    ACTION_TYPE_GROUP: "group",
                    ACTION_TYPE_GROUP_MEMBER: "groupMember",
                    TYPE_MESSAGE_EDITED: "edited",
                    TYPE_MESSAGE_DELETED: "deleted",
                    ACTION_TYPE_CALL: "call",
                    EXTRAS: "extras",
                    SCOPE: "scope",
                    NEW: "new",
                    OLD: "old",
                  },
                  ActionMessages: {
                    ACTION_GROUP_JOINED_MESSAGE: "%s joined",
                    ACTION_GROUP_LEFT_MESSAGE: "%s left",
                    ACTION_MEMBER_KICKED_MESSAGE: "%s kicked %s",
                    ACTION_MEMBER_BANNED_MESSAGE: "%s banned %s",
                    ACTION_MEMBER_UNBANNED_MESSAGE: "%s unbanned %s",
                    ACTION_MEMBER_INVITED_MESSAGE: "%s banned %s",
                    ACTION_MESSAGE_EDITED_MESSAGE: " Message Edited",
                    ACTION_MESSAGE_DELETED_MESSAGE: "Message Deleted",
                    ACTION_MEMBER_SCOPE_CHANGED: "%s made %s %s",
                    ACTION_MEMBER_ADDED_TO_GROUP: "%s added %s",
                  },
                  ACTION_TYPE: {
                    TYPE_MEMBER_JOINED: "joined",
                    TYPE_MEMBER_LEFT: "left",
                    TYPE_MEMBER_KICKED: "kicked",
                    TYPE_MEMBER_BANNED: "banned",
                    TYPE_MEMBER_UNBANNED: "unbanned",
                    TYPE_MEMBER_INVITED: "invited",
                    TYPE_MEMBER_SCOPE_CHANGED: "scopeChanged",
                    TYPE_MESSAGE: "message",
                    TYPE_MESSAGE_EDITED: "edited",
                    TYPE_MESSAGE_DELETED: "deleted",
                    TYPE_MEMBER_ADDED: "added",
                  },
                  ACTIONS: {
                    MEMBER_ADDED: "added",
                    MEMBER_JOINED: "joined",
                    MEMBER_LEFT: "left",
                    MEMBER_KICKED: "kicked",
                    MEMBER_BANNED: "banned",
                    MEMBER_UNBANNED: "unbanned",
                    MEMBER_INVITED: "invited",
                    MEMBER_SCOPE_CHANGED: "scopeChanged",
                    MESSAGE_EDITED: "edited",
                    MESSSAGE_DELETED: "deleted",
                    TYPE_USER: "user",
                    TYPE_GROUP: "group",
                    TYPE_GROUP_MEMBER: "groupMember",
                  },
                }),
                (t.BlockedUsersConstants = {
                  REQUEST_KEYS: {
                    DIRECTIONS: {
                      BOTH: "both",
                      HAS_BLOCKED_ME: "hasBlockedMe",
                      BLOCKED_BY_ME: "blockedByMe",
                    },
                  },
                }),
                (t.CallConstants = {
                  CALL_MODE: {
                    DEFAULT: "DEFAULT",
                    SPOTLIGHT: "SPOTLIGHT",
                    SINGLE: "SINGLE",
                    TILE: "TILE",
                    GRID: "GRID",
                  },
                  CALL_TYPE: { AUDIO: "audio", VIDEO: "video" },
                  RECEIVER_TYPE_GROUP: "group",
                  RECEIVER_TYPE_USER: "user",
                  CALL_KEYS: {
                    CALL_DATA: "data",
                    CALL_ID: "id",
                    CALL_SESSION_ID: "sessionid",
                    CALL_RECEIVER: "receiver",
                    CALL_SENDER: "sender",
                    CALL_RECEIVER_TYPE: "receiverType",
                    CALL_STATUS: "status",
                    CALL_TYPE: "type",
                    CALL_INITIATED_AT: "initiatedAt",
                    CALL_JOINED_AT: "joinedAt",
                    CALL_LEFT_AT: "leftAt",
                    CALL_METADATA: "metadata",
                    CALL_ENTITIES: "entities",
                    CALL_ENTITY_TYPE: "entityType",
                    CALL_ENTITY: "entity",
                    CALL_ENTITY_USER: "user",
                    CALL_ENTITY_GROUP: "group",
                  },
                  CALL_STATUS: {
                    INITIATED: "initiated",
                    ONGOING: "ongoing",
                    UNANSWERED: "unanswered",
                    REJECTED: "rejected",
                    BUSY: "busy",
                    CANCELLED: "cancelled",
                    ENDED: "ended",
                  },
                  AUDIO_INPUT_DEVICES: "audioInputDevices",
                  AUDIO_OUTPUT_DEVICES: "audioOutputDevices",
                  VIDEO_INPUT_DEVICES: "videoInputDevices",
                  POST_MESSAGES: {
                    TYPES: {
                      ACTION_MESSAGE: "cometchat_action_message",
                      HANGUP: "hangup",
                      COMETCHAT_RTC_SETTINGS: "cometchat_rtc_settings",
                    },
                    ACTIONS: {
                      USER_JOINED: "onUserJoined",
                      USER_LEFT: "onUserLeft",
                      USER_LIST_CHANGED: "onUserListChanged",
                      INITIAL_DEVICE_LIST: "initialDeviceList",
                      DEVICE_CHANGE: "onDeviceChange",
                      LOAD: "LOAD",
                      CHANGE_AUDIO_INPUT: "changeAudioInput",
                      CHANGE_AUDIO_OUTPUT: "changeAudioOutput",
                      CHANGE_VIDEO_INPUT: "changeVideoInput",
                      MUTE_AUDIO: "muteAudio",
                      UNMUTE_AUDIO: "unMuteAudio",
                      PAUSE_VIDEO: "pauseVideo",
                      UNPAUSE_VIDEO: "unPauseVideo",
                      SWITCH_MODE: "switchMode",
                      START_SCREENSHARE: "startScreenShare",
                      STOP_SCREENSHARE: "stopScreenShare",
                      END_CALL: "endCall",
                    },
                  },
                  MEDIA_DEVICE: { ID: "id", NAME: "name", ACTIVE: "active" },
                }),
                (t.GroupConstants = {
                  KEYS: {
                    NAME: "name",
                    GUID: "guid",
                    TYPE: "type",
                    PASSWORD: "password",
                    ICON: "icon",
                    DESCRIPTION: "description",
                    OWNER: "owner",
                    METADATA: "metadata",
                    CREATED_AT: "createdAt",
                    UPDATED_AT: "updatedAt",
                    HAS_JOINED: "hasJoined",
                    WS_CHANNEL: "wsChannel",
                    TAGS: "tags",
                  },
                }),
                (t.GroupMemersConstans = {
                  KEYS: {
                    SCOPE: "scope",
                    UID: "uid",
                    GUID: "guid",
                    USER: "user",
                    NAME: "name",
                  },
                }),
                (t.UserConstants = {
                  UID: "uid",
                  NAME: "name",
                  AUTH_TOKEN: "authToken",
                  AVATAR: "avatar",
                  LAST_ACTIVE_AT: "lastActiveAt",
                  LINK: "link",
                  META_DATA: "metadata",
                  ROLE: "role",
                  STATUS: "status",
                  STATUS_MESSAGE: "statusMessage",
                  USER_NAME: "user_name",
                  TAGS: "tags",
                }),
                (t.Errors = {
                  ERROR_IO_EXCEPTION: "ERROR_IO_EXCEPTION",
                  ERROR_JSON_EXCEPTION: "ERROR_JSON_EXCEPTION",
                  ERROR_PASSWORD_MISSING: "ERROR_PASSWORD_MISSING",
                  ERROR_LIMIT_EXCEEDED: "ERROR_LIMIT_EXCEEDED",
                  ERROR_USER_NOT_LOGGED_IN: "ERROR_USER_NOT_LOGGED_IN",
                  ERROR_INVALID_GUID: "ERROR_INVALID_GUID",
                  ERROR_PASSWORD_MISSING_MESSAGE:
                    "Password is mandatory for a password group",
                  ERROR_LIMIT_EXCEEDED_MESSAGE:
                    "Limit Exceeded Max limit of %s",
                  ERROR_USER_NOT_LOGGED_IN_MESSAGE:
                    "Please log in to CometChat before calling this method",
                  ERROR_INVALID_GUID_MESSAGE: "Please provide a valid GUID",
                  ERROR_DEFAULT_MESSAGE: "Something went wrong",
                  ERR_SETTINGS_HASH_OUTDATED: "ERR_SETTINGS_HASH_OUTDATED",
                  ERR_NO_AUTH: "ERR_NO_AUTH",
                  ERR_XMPP_CONFLICT: "conflict",
                }),
                (t.CALL_ERROR = {
                  CALL_ALREADY_INITIATED: {
                    code: "CALL_ALREADY_INITIATED",
                    name: "CALL_ALREADY_INITIATED",
                    message: "There is already call in progress",
                    details: {},
                  },
                  ERROR_IN_CALLING: {
                    code: "CALL_IN_PROGRESS",
                    name: "CALL_ALREADY_INITIATED",
                    message: "There is already call in progress",
                    details: {},
                  },
                  CANNOT_ACCEPT_CALL: {
                    code: "CALL_IN_PROGRESS",
                    name: "CALL_IN_PROGRESS",
                    message: "There is already a call in progress",
                    details: {},
                  },
                  NOT_INITIALIZED: {
                    code: "NOT_INITIALIZED",
                    name: "NOT_INITIALIZED",
                    message:
                      "Please call the CometChat.init() method before calling any other methods related to CometChat.",
                    details: {},
                  },
                  NOT_LOGGED_IN: {
                    code: "NOT_LOGGED_IN",
                    name: "NOT_LOGGED_IN",
                    message: "Please login before starting a call.",
                    details: {},
                  },
                  SESSION_ID_REQUIRED: {
                    code: "SESSION_ID_REQUIRED",
                    name: "SESSION_ID_REQUIRED",
                    message:
                      "Please make sure you are passing correct session id.",
                    details: {},
                  },
                  CALL_SETTINGS_REQUIRED: {
                    code: "CALL_SETTINGS_REQUIRED",
                    name: "CALL_SETTINGS_REQUIRED",
                    message:
                      "Please make sure you are passing the call settings object.",
                    details: {},
                  },
                  JWT_NOT_FOUND: {
                    code: "JWT_NOT_FOUND",
                    name: "JWT_NOT_FOUND",
                    message:
                      "There was some issue while fetching JWT from API.",
                    details: {},
                  },
                }),
                (t.PARAMETER_ERROR = {
                  PARAMETER_REQUIRED: {
                    code: "%s_NOT_PROVIDED",
                    name: "%s_NOT_PROVIDED",
                    message: "please provide the %s.",
                    details: {},
                  },
                }),
                (t.GENERAL_ERROR = {
                  MUST_BE_A_STRING: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be a string.",
                    details: {},
                  },
                  MUST_BE_A_NUMBER: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be a number.",
                    details: {},
                  },
                  MUST_BE_A_OBJECT: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be a object.",
                    details: {},
                  },
                  MUST_BE_AN_ARRAY: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be an array.",
                    details: {},
                  },
                  MUST_BE_A_BOOLEAN: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be a boolean.",
                    details: {},
                  },
                  MUST_BE_A_BLOB: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be a blob.",
                    details: {},
                  },
                  INVALID: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "Invalid %s. Please provide a valid %s.",
                    details: {},
                  },
                  METHOD_COMPULSORY: {
                    code: "%s_IS_COMPULSORY",
                    name: "%s_IS_COMPULSORY",
                    message: "%s is required.",
                    details: {},
                  },
                  LIMIT_EXCEEDED: {
                    code: "ERROR_%s_EXCEEDED",
                    name: "ERROR_%s_EXCEEDED",
                    message: "Limit exceeded max limit of %s.",
                    details: {},
                  },
                  MUST_BE_A_POSITIVE_NUMBER: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s should be a postive integer greater than 0.",
                    details: {},
                  },
                  INVALID_MEDIA_FILE: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message:
                      "The message type does not match the file's mime type.",
                    details: {},
                  },
                  EMPTY_STRING: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s cannot be empty.",
                    details: {},
                  },
                  MISSING_KEY: {
                    code: "MISSING_KEY",
                    name: "MISSING_KEY",
                    message: "The key %s is missing from the %s object.",
                    details: {},
                  },
                  EMPTY_ARRAY: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message:
                      "The parameter %s should be an array and it cannot be empty.",
                    details: {},
                  },
                  INVALID_SEARCH_KEYWORD: {
                    code: "INVALID_SEARCH_KEYWORD",
                    name: "INVALID_SEARCH_KEYWORD",
                    message:
                      "Invalid search keyword. Please provide a valid search keyword.",
                    details: {},
                  },
                  INVALID_GROUP_PROPERTY: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message:
                      "Invalid %s provided for the group. Please provide a valid %s.",
                    details: {},
                  },
                  INVALID_USER_PROPERTY: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message:
                      "Invalid %s provided for a user. Please provide a valid %s.",
                    details: {},
                  },
                  PARAMETER_MUST_BE_A_NUMBER: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s method accepts parameter as a number.",
                    details: {},
                  },
                  PARAMETER_MUST_BE_AN_ARRAY: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s method accepts parameter as an array.",
                    details: {},
                  },
                  PARAMETER_MUST_BE_A_BOOLEAN: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s method accepts parameter as a boolean.",
                    details: {},
                  },
                  PARAMETER_MUST_BE_A_POSITIVE_NUMBER: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message:
                      "%s method accepts parameter to be a positive number greater than 0.",
                    details: {},
                  },
                  PARAMETER_MUST_BE_A_STRING: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s method accepts parameter as a string.",
                    details: {},
                  },
                  PARAMETER_COMPULSORY: {
                    code: "%s_IS_COMPULSORY",
                    name: "%s_IS_COMPULSORY",
                    message: "%s cannot be blank. Please provide a valid %s.",
                    details: {},
                  },
                  PASSWORD_COMPULSORY: {
                    code: "%s_IS_COMPULSORY",
                    name: "%s_IS_COMPULSORY",
                    message: "Password is mandatory for a password group.",
                    details: {},
                  },
                  INVALID_ARRAY: {
                    code: "INVALID_%s",
                    name: "INVALID_%s",
                    message: "%s",
                    details: {},
                  },
                }),
                (t.UserErrors = {
                  INVALID_STATUS: new s.CometChatException({
                    code: "INVALID_STATUS_VALUE",
                    name: "INVALID_STATUS_VALUE",
                    message:
                      "The `status` parameter accepts only `online` or `offline`.",
                    details: "",
                  }),
                  INVALID_DIRECTION: new s.CometChatException({
                    code: "INVALID_DIRECTION_VALUE",
                    name: "INVALID_DIRECTION_VALUE",
                    message:
                      "The `direction` parameter accepts only `both`, `blockeyByMe` or `hasBlockedMe`.",
                    details: "",
                  }),
                  USER_NOT_LOGGED_IN: new s.CometChatException({
                    code: "USER_NOT_LOGGED_IN",
                    name: "USER_NOT_LOGGED_IN",
                    message:
                      "Please log in to CometChat before calling this method.",
                    details: "",
                  }),
                }),
                (t.GroupErrors = {
                  NOT_A_GROUP: new s.CometChatException({
                    code: "NOT_A_GROUP",
                    message: "Please use group class to construct a new group.",
                  }),
                  INVALID_SCOPE: new s.CometChatException({
                    code: "INVALID_SCOPE_VALUE",
                    name: "INVALID_SCOPE_VALUE",
                    message:
                      "Scope can be `admin`, `moderator` or `participant`.",
                    details: "",
                  }),
                  INVALID_GROUP_TYPE: new s.CometChatException({
                    code: "INVALID_GROUP_TYPE",
                    name: "INVALID_GROUP_TYPE",
                    message:
                      "Group type can be `public`, `private`, `protected` or `password`.",
                    details: "",
                  }),
                }),
                (t.ConversationErrors = {
                  INVALID_CONVERSATION_TYPE: {
                    code: "INVALID_CONVERSATION_TYPE",
                    name: "INVALID_CONVERSATION_TYPE",
                    message: "Conversation type can be `user` or `group`.",
                    details: "Please check the value of conversationType.",
                  },
                  CONVERSATION_NOT_FOUND: {
                    code: "CONVERSATION_NOT_FOUND",
                    name: "CONVERSATION_NOT_FOUND",
                    message: "Conversation for %s %s not found.",
                    details:
                      "Please check the value of conversationWith and conversationType.",
                  },
                }),
                (t.ExtensionErrors = {
                  INVALID_EXTENSION: {
                    code: "ERROR_INVALID_EXTENSION",
                    name: "ERROR_INVALID_EXTENSION",
                    message:
                      "The provided extension cannot be null or empty. Please provide a valid extension.",
                    details: {},
                  },
                  EXTENSION_NOT_FOUND: {
                    code: "ERROR_EXTENSION_NOT_FOUND",
                    name: "ERROR_EXTENSION_NOT_FOUND",
                    message: "The provided extension could not be found.",
                    details: {},
                  },
                }),
                (t.MessageErrors = {
                  INVALID_RECEIVER_TYPE: {
                    code: "INVALID_RECEIVER_TYPE",
                    name: "INVALID_RECEIVER_TYPE",
                    message: "Receiver type can be `user` or `group`.",
                    details: "Please check the value of receiverType.",
                  },
                }),
                (t.FeatureRestrictionErrors = {
                  INVALID_FEATURE: {
                    code: "ERROR_INVALID_FEATURE",
                    name: "ERROR_INVALID_FEATURE",
                    message:
                      "The provided feature cannot be null or empty. Please provide a valid feature.",
                    details: {},
                  },
                  FEATURE_NOT_FOUND: {
                    code: "ERROR_FEATURE_NOT_FOUND",
                    name: "ERROR_FEATURE_NOT_FOUND",
                    message: "The provided feature could not be found.",
                    details: {},
                  },
                }),
                (t.PresenceConstatnts = {
                  XMPP_KEYS: {
                    FROM: "from",
                    STATUS: "status",
                    LAST_ACTIVE_AT: "lastActiveAt",
                    TYPE: "type",
                  },
                  STATUS: {
                    ONLINE: "online",
                    AVAILABLE: "available",
                    OFFLINE: "offline",
                    JOINED: "JOINED",
                    LEFT: "LEFT",
                  },
                }),
                (t.APP_SETTINGS = {
                  APP_SETTINGS: "app_settings",
                  KEYS: {
                    CHAT_HOST: "CHAT_HOST",
                    CHAT_USE_SSL: "CHAT_USE_SSL",
                    GROUP_SERVICE: "GROUP_SERVICE",
                    CALL_SERVICE: "CALL_SERVICE",
                    CHAT_WS_PORT: "CHAT_WS_PORT",
                    CHAT_WSS_PORT: "CHAT_WSS_PORT",
                    CHAT_HTTP_BIND_PORT: "CHAT_HTTP_BIND_PORT",
                    CHAT_HTTPS_BIND_PORT: "CHAT_HTTPS_BIND_PORT",
                    ADMIN_API_HOST: "ADMIN_API_HOST",
                    CLIENT_API_HOST: "CLIENT_API_HOST",
                    WEBRTC_HOST: "WEBRTC_HOST",
                    WEBRTC_USE_SSL: "WEBRTC_USE_SSL",
                    WEBRTC_WS_PORT: "WEBRTC_WS_PORT",
                    WEBRTC_WSS_PORT: "WEBRTC_WSS_PORT",
                    WEBRTC_HTTP_BIND_PORT: "WEBRTC_HTTP_BIND_PORT",
                    WEBRTC_HTTPS_BIND_PORT: "WEBRTC_HTTPS_BIND_PORT",
                    EXTENSION_LIST: "extensions",
                    EXTENSION_KEYS: { ID: "id", NAME: "name" },
                    JID_HOST_OVERRIDE: "JID_HOST_OVERRIDE",
                    CHAT_HOST_OVERRIDE: "CHAT_HOST_OVERRIDE",
                    CHAT_HOST_APP_SPECIFIC: "CHAT_HOST_APP_SPECIFIC",
                    MODE: "MODE",
                    DEFAULT_MODE: "DEFAULT",
                    HIGH_VOL_MODE: "HIGH_VOL",
                    FLAKY_MODE: "FLAKY",
                    POLLING_ENABLED: "POLLING_ENABLED",
                    POLLING_INTERVAL: "POLLING_INTERVAL",
                    ANALYTICS_PING_DISABLED: "ANALYTICS_PING_DISABLED",
                    ANALYTICS_HOST: "ANALYTICS_HOST",
                    ANALYTICS_VERSION: "ANALYTICS_VERSION",
                    ANALYTICS_USE_SSL: "ANALYTICS_USE_SSL",
                    SETTINGS_HASH: "settingsHash",
                    SETTINGS_HASH_RECEIVED_AT: "settingsHashReceivedAt",
                    DENY_FALLBACK_TO_POLLING: "DENY_FALLBACK_TO_POLLING",
                  },
                }),
                (t.COMMON_UTILITY_CONSTANTS = {
                  TYPE_CONSTANTS: {
                    BOOLEAN: "boolean",
                    STRING: "string",
                    OBJECT: "object",
                    NUMBER: "number",
                  },
                }),
                (t.CONNECTION_STATUS = {
                  CONNECTED: "connected",
                  CONNECTING: "connecting",
                  DISCONNECTED: "disconnected",
                  FEATURE_THROTTLED: "featureThrottled",
                }),
                (t.SESSION_STORE = { SESSION_ID: "sessionId" }),
                (t.API_ERROR_CODES = {
                  AUTH_ERR_AUTH_TOKEN_NOT_FOUND:
                    "AUTH_ERR_AUTH_TOKEN_NOT_FOUND",
                }),
                (t.PROSODY_API = {
                  DOMAIN_PREFIX: "xmpp",
                  PATH: {
                    ROOM: "room",
                    ROOM_SIZE: "room-size",
                    SESSIONS: "sessions",
                  },
                  RESPONSE: { PARTICIPANTS: "participants" },
                  QUERY_PARAMETERS: { DOMAIN: "domain", ROOM: "room" },
                }),
                (t.ProsodyApiErrors = {
                  INVALID_SESSIONID: {
                    code: "ERROR_INVALID_SESSIONID",
                    name: "ERROR_INVALID_SESSIONID",
                    message:
                      "The provided sessionId cannot be null or empty. Please provide a valid sessionId.",
                    details: "",
                  },
                  INVALID_TYPE: {
                    code: "ERROR_INVALID_TYPE",
                    name: "ERROR_INVALID_TYPE",
                    message:
                      "The provided type cannot be null or empty. Please provide a valid type.",
                    details: "",
                  },
                }),
                (t.JWT_API = {
                  KEYS: { PASSTHROUGH: "passthrough", EXPAND: "expand" },
                });
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(9),
                o = n(0),
                i = n(5),
                s = n(2),
                a = n(17),
                c = n(18),
                u = n(20),
                l = n(3),
                d = n(12);
              function p(e) {
                return (
                  null != e &&
                    ("string" == typeof e && (e = e.trim()),
                    "object" == typeof e &&
                      0 === Object.keys(e).length &&
                      (e = void 0)),
                  ["", 0, "0", !1, null, "null", void 0, "undefined"].includes(
                    e
                  )
                );
              }
              function f(e) {
                for (var t = [], n = 1; n < arguments.length; n++)
                  t[n - 1] = arguments[n];
                return e.split("%s").reduce(function (e, n, r) {
                  return e + n + (t[r] || "");
                }, "");
              }
              (t.getChatHost = function (e) {
                return e[o.APP_SETTINGS.KEYS.CHAT_HOST_OVERRIDE]
                  ? e[o.APP_SETTINGS.KEYS.CHAT_HOST_OVERRIDE]
                  : e[o.APP_SETTINGS.KEYS.CHAT_HOST_APP_SPECIFIC]
                  ? e[o.APP_SETTINGS.KEYS.CHAT_HOST_APP_SPECIFIC]
                  : e[o.APP_SETTINGS.KEYS.CHAT_HOST];
              }),
                (t.getJidHost = function (e) {
                  return e[o.APP_SETTINGS.KEYS.JID_HOST_OVERRIDE]
                    ? e[o.APP_SETTINGS.KEYS.JID_HOST_OVERRIDE]
                    : e[o.APP_SETTINGS.KEYS.CHAT_HOST];
                }),
                (t.isObject = function (e) {
                  return e instanceof Object && e.constructor === Object;
                }),
                (t.isTruthy = function (e) {
                  return [!0, 1, "1", "true", "TRUE"].includes(e);
                }),
                (t.isFalsy = p),
                (t.getOrdinalSuffix = function (e) {
                  var t = e % 10,
                    n = e % 100;
                  return 1 == t && 11 != n
                    ? e + "st"
                    : 2 == t && 12 != n
                    ? e + "nd"
                    : 3 == t && 13 != n
                    ? e + "rd"
                    : e + "th";
                }),
                (t.format = f),
                (t.createUidFromJid = function (e) {
                  return e.substring(
                    e.lastIndexOf("]") + 1,
                    e.lastIndexOf("@")
                  );
                });
              var h = (function () {
                function e() {}
                return (
                  (e.log = function (e, t) {}),
                  (e.error = function (e, t) {}),
                  (e.info = function (e, t) {}),
                  e
                );
              })();
              function E() {
                return new Promise(function (e, t) {
                  i.makeApiCall("appSettings").then(
                    function (t) {
                      r.LocalStorage.getInstance().set("app_settings", t.data),
                        t.data.MODE && l.CometChat.setMode(t.data.MODE),
                        e(t.data);
                    },
                    function (e) {
                      t(new s.CometChatException(e.error));
                    }
                  );
                });
              }
              (t.Logger = h),
                (t.getCurrentTime = function () {
                  return new Date().getTime();
                }),
                (t.getAppSettings = function () {
                  return new Promise(function (e, t) {
                    r.LocalStorage.getInstance()
                      .get(o.APP_SETTINGS.APP_SETTINGS)
                      .then(
                        function (n) {
                          p(n)
                            ? E().then(
                                function (t) {
                                  e(t);
                                },
                                function (e) {
                                  t(e);
                                }
                              )
                            : e(n);
                        },
                        function (e) {
                          t(e);
                        }
                      );
                  });
                }),
                (t.getUpdatedSettings = E),
                (t.isImage = function (e) {
                  var t;
                  return (
                    e.type &&
                      e.type.toLowerCase().includes("image") &&
                      (t = !0),
                    t
                  );
                }),
                (t.isVideo = function (e) {
                  var t;
                  return (
                    e.type &&
                      e.type.toLowerCase().includes("video") &&
                      (t = !0),
                    t
                  );
                }),
                (t.isAudio = function (e) {
                  var t;
                  return (
                    e.type &&
                      e.type.toLowerCase().includes("audio") &&
                      (t = !0),
                    t
                  );
                }),
                (t.validateScope = function (e) {
                  return typeof e !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "SCOPE",
                            "SCOPE",
                            "Scope"
                          )
                        )
                      )
                    : p(e)
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.INVALID),
                            "SCOPE",
                            "SCOPE",
                            "scope",
                            "scope"
                          )
                        )
                      )
                    : e != l.CometChat.GROUP_MEMBER_SCOPE.ADMIN &&
                      e != l.CometChat.GROUP_MEMBER_SCOPE.MODERATOR &&
                      e != l.CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT
                    ? new s.CometChatException(o.GroupErrors.INVALID_SCOPE)
                    : void 0;
                }),
                (t.validateUpdateGroup = function (e) {
                  return e.hasOwnProperty(o.GroupConstants.KEYS.GUID)
                    ? typeof e[o.GroupConstants.KEYS.GUID] !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                              "GUID",
                              "GUID",
                              "GUID"
                            )
                          )
                        )
                      : p(e[o.GroupConstants.KEYS.GUID])
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                              ),
                              "GUID",
                              "GUID",
                              "GUID",
                              "GUID"
                            )
                          )
                        )
                      : e.hasOwnProperty(o.GroupConstants.KEYS.NAME) &&
                        "" === e[o.GroupConstants.KEYS.NAME]
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                              "GROUP_NAME",
                              "GROUP_NAME",
                              "Group name"
                            )
                          )
                        )
                      : void 0
                    : new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.PARAMETER_COMPULSORY
                            ),
                            "GUID",
                            "GUID",
                            "GUID",
                            "GUID"
                          )
                        )
                      );
                }),
                (t.validateJoinGroup = function (e, t, n) {
                  if (
                    typeof e == o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.OBJECT
                  ) {
                    if (!e.hasOwnProperty(o.GroupConstants.KEYS.GUID))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.PARAMETER_COMPULSORY
                            ),
                            "GUID",
                            "GUID",
                            "GUID",
                            "GUID"
                          )
                        )
                      );
                    if (
                      typeof e[o.GroupConstants.KEYS.GUID] !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    )
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "GUID",
                            "GUID",
                            "GUID"
                          )
                        )
                      );
                    if (p(e[o.GroupConstants.KEYS.GUID]))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                            ),
                            "GUID",
                            "GUID",
                            "GUID",
                            "GUID"
                          )
                        )
                      );
                    if (!e.hasOwnProperty(o.GroupConstants.KEYS.TYPE))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.PARAMETER_COMPULSORY
                            ),
                            "GROUP_TYPE",
                            "GROUP_TYPE",
                            "Group type",
                            "Group type"
                          )
                        )
                      );
                    if (
                      typeof e[o.GroupConstants.KEYS.TYPE] !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    )
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "GROUP_TYPE",
                            "GROUP_TYPE",
                            "Group type"
                          )
                        )
                      );
                    if (p(e[o.GroupConstants.KEYS.TYPE]))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                            ),
                            "GROUP_TYPE",
                            "GROUP_TYPE",
                            "type",
                            "type"
                          )
                        )
                      );
                    if (
                      e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                        l.CometChat.GROUP_TYPE.PUBLIC &&
                      e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                        l.CometChat.GROUP_TYPE.PASSWORD &&
                      e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                        l.CometChat.GROUP_TYPE.PROTECTED &&
                      e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                        l.CometChat.GROUP_TYPE.PRIVATE
                    )
                      return new s.CometChatException(
                        o.GroupErrors.INVALID_GROUP_TYPE
                      );
                    if (
                      e[o.GroupConstants.KEYS.TYPE].toLowerCase() ==
                      l.CometChat.GROUP_TYPE.PASSWORD
                    ) {
                      if (!e.hasOwnProperty(o.GroupConstants.KEYS.PASSWORD))
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.PASSWORD_COMPULSORY
                              ),
                              "PASSWORD",
                              "PASSWORD"
                            )
                          )
                        );
                      if (
                        typeof e[o.GroupConstants.KEYS.PASSWORD] !==
                        o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                      )
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                              "PASSWORD",
                              "PASSWORD",
                              "Password"
                            )
                          )
                        );
                      if (p(e[o.GroupConstants.KEYS.PASSWORD]))
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                              ),
                              "PASSWORD",
                              "PASSWORD",
                              "password",
                              "password"
                            )
                          )
                        );
                    }
                  } else {
                    if (void 0 !== e) {
                      if (
                        typeof e !==
                        o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                      )
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                              "GUID",
                              "GUID",
                              "GUID"
                            )
                          )
                        );
                      if (p(e))
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                              ),
                              "GUID",
                              "GUID",
                              "GUID",
                              "GUID"
                            )
                          )
                        );
                    }
                    if (void 0 !== t) {
                      if (
                        typeof t !==
                        o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                      )
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                              "GROUP_TYPE",
                              "GROUP_TYPE",
                              "Group type"
                            )
                          )
                        );
                      if (p(t))
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                              ),
                              "GROUP_TYPE",
                              "GROUP_TYPE",
                              "type",
                              "type"
                            )
                          )
                        );
                      if (
                        t.toLowerCase() != l.CometChat.GROUP_TYPE.PUBLIC &&
                        t.toLowerCase() != l.CometChat.GROUP_TYPE.PASSWORD &&
                        t.toLowerCase() != l.CometChat.GROUP_TYPE.PROTECTED &&
                        t.toLowerCase() != l.CometChat.GROUP_TYPE.PRIVATE
                      )
                        return new s.CometChatException(
                          o.GroupErrors.INVALID_GROUP_TYPE
                        );
                      if (t.toLowerCase() == l.CometChat.GROUP_TYPE.PASSWORD) {
                        if (
                          typeof n !==
                          o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              f(
                                JSON.stringify(
                                  o.GENERAL_ERROR.MUST_BE_A_STRING
                                ),
                                "PASSWORD",
                                "PASSWORD",
                                "Password"
                              )
                            )
                          );
                        if (p(n))
                          return new s.CometChatException(
                            JSON.parse(
                              f(
                                JSON.stringify(
                                  o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                                ),
                                "PASSWORD",
                                "PASSWORD",
                                "password",
                                "password"
                              )
                            )
                          );
                      }
                    }
                  }
                }),
                (t.validateCreateGroup = function (e) {
                  if (!e.hasOwnProperty(o.GroupConstants.KEYS.GUID))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.PARAMETER_COMPULSORY),
                          "GUID",
                          "GUID",
                          "GUID",
                          "GUID"
                        )
                      )
                    );
                  if (
                    typeof e[o.GroupConstants.KEYS.GUID] !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "GUID",
                          "GUID",
                          "GUID"
                        )
                      )
                    );
                  if (p(e[o.GroupConstants.KEYS.GUID]))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(
                            o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                          ),
                          "GUID",
                          "GUID",
                          "GUID",
                          "GUID"
                        )
                      )
                    );
                  if (!e.hasOwnProperty(o.GroupConstants.KEYS.NAME))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.PARAMETER_COMPULSORY),
                          "GROUP_NAME",
                          "GROUP_NAME",
                          "Group name",
                          "Group name"
                        )
                      )
                    );
                  if (
                    typeof e[o.GroupConstants.KEYS.NAME] !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "GROUP_NAME",
                          "GROUP_NAME",
                          "Group name"
                        )
                      )
                    );
                  if (p(e[o.GroupConstants.KEYS.NAME]))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(
                            o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                          ),
                          "GROUP_NAME",
                          "GROUP_NAME",
                          "name",
                          "name"
                        )
                      )
                    );
                  if (!e.hasOwnProperty(o.GroupConstants.KEYS.TYPE))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.PARAMETER_COMPULSORY),
                          "GROUP_TYPE",
                          "GROUP_TYPE",
                          "Group type",
                          "Group type"
                        )
                      )
                    );
                  if (
                    typeof e[o.GroupConstants.KEYS.TYPE] !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "GROUP_TYPE",
                          "GROUP_TYPE",
                          "Group type"
                        )
                      )
                    );
                  if (p(e[o.GroupConstants.KEYS.TYPE]))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(
                            o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                          ),
                          "GROUP_TYPE",
                          "GROUP_TYPE",
                          "type",
                          "type"
                        )
                      )
                    );
                  if (
                    e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                      l.CometChat.GROUP_TYPE.PUBLIC &&
                    e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                      l.CometChat.GROUP_TYPE.PASSWORD &&
                    e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                      l.CometChat.GROUP_TYPE.PROTECTED &&
                    e[o.GroupConstants.KEYS.TYPE].toLowerCase() !=
                      l.CometChat.GROUP_TYPE.PRIVATE
                  )
                    return new s.CometChatException(
                      o.GroupErrors.INVALID_GROUP_TYPE
                    );
                  if (
                    e[o.GroupConstants.KEYS.TYPE].toLowerCase() ==
                    l.CometChat.GROUP_TYPE.PASSWORD
                  ) {
                    if (!e.hasOwnProperty(o.GroupConstants.KEYS.PASSWORD))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.PASSWORD_COMPULSORY),
                            "PASSWORD",
                            "PASSWORD"
                          )
                        )
                      );
                    if (
                      typeof e[o.GroupConstants.KEYS.PASSWORD] !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    )
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "PASSWORD",
                            "PASSWORD",
                            "Password"
                          )
                        )
                      );
                    if (p(e[o.GroupConstants.KEYS.PASSWORD]))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.INVALID_GROUP_PROPERTY
                            ),
                            "PASSWORD",
                            "PASSWORD",
                            "password",
                            "password"
                          )
                        )
                      );
                  }
                  if (e.hasOwnProperty(o.GroupConstants.KEYS.TAGS)) {
                    if (!Array.isArray(e[o.GroupConstants.KEYS.TAGS]))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_AN_ARRAY),
                            "GROUP_TAGS",
                            "GROUP_TAGS",
                            "Group tags"
                          )
                        )
                      );
                    if (0 === e[o.GroupConstants.KEYS.TAGS].length)
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.EMPTY_ARRAY),
                            "GROUP_TAGS",
                            "GROUP_TAGS",
                            "Group tags"
                          )
                        )
                      );
                  }
                }),
                (t.validateId = function (e, t) {
                  if ("user" === t) {
                    if (
                      typeof e !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    )
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "UID",
                            "UID",
                            "UID"
                          )
                        )
                      );
                    if (p(e))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.INVALID),
                            "UID",
                            "UID",
                            "UID",
                            "UID"
                          )
                        )
                      );
                  }
                  if ("group" === t) {
                    if (
                      typeof e !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    )
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "GUID",
                            "GUID",
                            "GUID"
                          )
                        )
                      );
                    if (p(e))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.INVALID),
                            "GUID",
                            "GUID",
                            "GUID",
                            "GUID"
                          )
                        )
                      );
                  }
                }),
                (t.validateHideMessagesFromBlockedUsers = function (e) {
                  if (
                    typeof e !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_BOOLEAN),
                          "HIDE_MESSAGES_FROM_BLOCKED_USERS",
                          "HIDE_MESSAGES_FROM_BLOCKED_USERS",
                          "hideMessagesFromBlockedUsers"
                        )
                      )
                    );
                }),
                (t.validateArray = function (e, t) {
                  var n;
                  return (
                    (n =
                      "blockUsers" === t
                        ? "blockUsers() method accepts an array of users."
                        : "unblockUsers" === t
                        ? "unblockUsers() method accepts an array of users."
                        : "groupMembers" === t
                        ? "addMembersToGroup() method accepts members list as an array of users."
                        : "addMembersToGroup() method accepts bannedMembers list as an array of users."),
                    typeof e != o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.OBJECT
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.INVALID_ARRAY),
                              "USER_LIST",
                              "USER_LIST",
                              n
                            )
                          )
                        )
                      : Array.isArray(e)
                      ? void 0
                      : new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.INVALID_ARRAY),
                              "USER_LIST",
                              "USER_LIST",
                              n
                            )
                          )
                        )
                  );
                }),
                (t.validateMsgId = function (e) {
                  return isNaN(e)
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_NUMBER),
                            "MESSAGE_ID",
                            "MESSAGE_ID",
                            "Message Id"
                          )
                        )
                      )
                    : p(e)
                    ? new s.CometChatException(d.ERRORS.PARAMETER_MISSING)
                    : void 0;
                }),
                (t.validateChatType = function (e) {
                  return typeof e !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "RECEIVER_TYPE",
                            "RECEIVER_TYPE",
                            "Receiver type"
                          )
                        )
                      )
                    : p(e)
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.INVALID),
                            "RECEIVER_TYPE",
                            "RECEIVER_TYPE",
                            "receiver type",
                            "receiver type"
                          )
                        )
                      )
                    : e != o.MessageConstatnts.RECEIVER_TYPE.GROUP &&
                      e != o.MessageConstatnts.RECEIVER_TYPE.USER
                    ? new s.CometChatException(
                        o.MessageErrors.INVALID_RECEIVER_TYPE
                      )
                    : void 0;
                }),
                (t.validateMessage = function (e) {
                  var n = e;
                  if (
                    typeof n.getReceiverId() !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "RECEIVER_ID",
                          "RECEIVER_ID",
                          "Receiver Id"
                        )
                      )
                    );
                  if (p(n.getReceiverId()))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.INVALID),
                          "RECEIVER_ID",
                          "RECEIVER_ID",
                          "receiver id",
                          "receiver id"
                        )
                      )
                    );
                  if (
                    typeof n.getReceiverType() !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "RECEIVER_TYPE",
                          "RECEIVER_TYPE",
                          "Receiver Type"
                        )
                      )
                    );
                  if (p(n.getReceiverType()))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.INVALID),
                          "RECEIVER_TYPE",
                          "RECEIVER_TYPE",
                          "receiver type",
                          "receiver type"
                        )
                      )
                    );
                  if (
                    n.getReceiverType() !=
                      o.MessageConstatnts.RECEIVER_TYPE.GROUP &&
                    n.getReceiverType() !=
                      o.MessageConstatnts.RECEIVER_TYPE.USER
                  )
                    return new s.CometChatException(
                      o.MessageErrors.INVALID_RECEIVER_TYPE
                    );
                  if (e instanceof a.TextMessage) {
                    var r = e;
                    if (
                      typeof r.getText() !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    )
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "MESSAGE_TEXT",
                            "MESSAGE_TEXT",
                            "Message text"
                          )
                        )
                      );
                    if ("" === r.getText().trim())
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                            "MESSAGE_TEXT",
                            "MESSAGE_TEXT",
                            "Message text"
                          )
                        )
                      );
                  }
                  if (e instanceof c.MediaMessage) {
                    var i = e;
                    if (
                      i.getData() &&
                      i.getData().hasOwnProperty("attachments")
                    ) {
                      var l = i.getAttachment();
                      if (!l.getExtension())
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MISSING_KEY),
                              "extension",
                              "Attachment"
                            )
                          )
                        );
                      if (!l.getMimeType())
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MISSING_KEY),
                              "mimeType",
                              "Attachment"
                            )
                          )
                        );
                      if (!l.getName())
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MISSING_KEY),
                              "name",
                              "Attachment"
                            )
                          )
                        );
                      if (!l.getUrl())
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MISSING_KEY),
                              "url",
                              "Attachment"
                            )
                          )
                        );
                    } else {
                      if (!(i.file instanceof Blob))
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_BLOB),
                              "MEDIA_OBJECT",
                              "MEDIA_OBJECT",
                              "Media object"
                            )
                          )
                        );
                      if ("image" == i.getType()) {
                        if (!t.isImage(i.file))
                          return new s.CometChatException(
                            JSON.parse(
                              f(
                                JSON.stringify(
                                  o.GENERAL_ERROR.INVALID_MEDIA_FILE
                                ),
                                "IMAGE_FILE",
                                "IMAGE_FILE"
                              )
                            )
                          );
                      } else if ("video" == i.getType()) {
                        if (!t.isVideo(i.file))
                          return new s.CometChatException(
                            JSON.parse(
                              f(
                                JSON.stringify(
                                  o.GENERAL_ERROR.INVALID_MEDIA_FILE
                                ),
                                "VIDEO_FILE",
                                "VIDEO_FILE"
                              )
                            )
                          );
                      } else if ("audio" == i.getType() && !t.isAudio(i.file))
                        return new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.INVALID_MEDIA_FILE
                              ),
                              "AUDIO_FILE",
                              "AUDIO_FILE"
                            )
                          )
                        );
                    }
                  }
                  return e instanceof u.CustomMessage && p(e.getCustomData())
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.INVALID),
                            "CUSTOM_DATA",
                            "CUSTOM_DATA",
                            "custom data",
                            "custom data"
                          )
                        )
                      )
                    : void 0;
                }),
                (t.validateCreateUser = function (e) {
                  if (!e.hasOwnProperty(o.UserConstants.UID))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.PARAMETER_COMPULSORY),
                          "UID",
                          "UID",
                          "UID",
                          "UID"
                        )
                      )
                    );
                  if (
                    typeof e[o.UserConstants.UID] !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "UID",
                          "UID",
                          "UID"
                        )
                      )
                    );
                  if (p(e[o.UserConstants.UID]))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.INVALID_USER_PROPERTY),
                          "UID",
                          "UID",
                          "UID",
                          "UID"
                        )
                      )
                    );
                  if (!e.hasOwnProperty(o.UserConstants.NAME))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.PARAMETER_COMPULSORY),
                          "USER_NAME",
                          "USER_NAME",
                          "User name",
                          "User name"
                        )
                      )
                    );
                  if (
                    typeof e[o.UserConstants.NAME] !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                          "USER_NAME",
                          "USER_NAME",
                          "User name"
                        )
                      )
                    );
                  if (p(e[o.UserConstants.NAME]))
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.INVALID_USER_PROPERTY),
                          "USER_NAME",
                          "USER_NAME",
                          "name",
                          "name"
                        )
                      )
                    );
                  if (
                    e.hasOwnProperty(o.UserConstants.AVATAR) &&
                    "" === e[o.UserConstants.AVATAR]
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                          "USER_AVATAR",
                          "USER_AVATAR",
                          "User avatar"
                        )
                      )
                    );
                  if (
                    e.hasOwnProperty(o.UserConstants.META_DATA) &&
                    "" === e[o.UserConstants.META_DATA]
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                          "USER_METADATA",
                          "USER_METADATA",
                          "User metadata"
                        )
                      )
                    );
                  if (
                    e.hasOwnProperty(o.UserConstants.LINK) &&
                    "" === e[o.UserConstants.LINK]
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                          "USER_LINK",
                          "USER_LINK",
                          "User link"
                        )
                      )
                    );
                  if (
                    e.hasOwnProperty(o.UserConstants.STATUS_MESSAGE) &&
                    "" === e[o.UserConstants.STATUS_MESSAGE]
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                          "USER_STATUS_MESSAGE",
                          "USER_STATUS_MESSAGE",
                          "User status message"
                        )
                      )
                    );
                  if (
                    e.hasOwnProperty(o.UserConstants.ROLE) &&
                    "" === e[o.UserConstants.ROLE]
                  )
                    return new s.CometChatException(
                      JSON.parse(
                        f(
                          JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                          "USER_ROLE",
                          "USER_ROLE",
                          "User role"
                        )
                      )
                    );
                  if (e.hasOwnProperty(o.UserConstants.TAGS)) {
                    if (!Array.isArray(e[o.UserConstants.TAGS]))
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_AN_ARRAY),
                            "USER_TAGS",
                            "USER_TAGS",
                            "User tags"
                          )
                        )
                      );
                    if (0 === e[o.UserConstants.TAGS].length)
                      return new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.EMPTY_ARRAY),
                            "USER_TAGS",
                            "USER_TAGS",
                            "User tags"
                          )
                        )
                      );
                  }
                }),
                (t.validateUpdateUser = function (e) {
                  return e.hasOwnProperty(o.UserConstants.UID)
                    ? typeof e[o.UserConstants.UID] !==
                      o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                              "UID",
                              "UID",
                              "UID"
                            )
                          )
                        )
                      : p(e[o.UserConstants.UID])
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(
                                o.GENERAL_ERROR.INVALID_USER_PROPERTY
                              ),
                              "UID",
                              "UID",
                              "UID",
                              "UID"
                            )
                          )
                        )
                      : e.hasOwnProperty(o.UserConstants.NAME) &&
                        "" === e[o.UserConstants.NAME]
                      ? new s.CometChatException(
                          JSON.parse(
                            f(
                              JSON.stringify(o.GENERAL_ERROR.EMPTY_STRING),
                              "USER_NAME",
                              "USER_NAME",
                              "User name"
                            )
                          )
                        )
                      : void 0
                    : new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(
                              o.GENERAL_ERROR.PARAMETER_COMPULSORY
                            ),
                            "UID",
                            "UID",
                            "UID",
                            "UID"
                          )
                        )
                      );
                }),
                (t.validateConversationType = function (e) {
                  return typeof e !==
                    o.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.MUST_BE_A_STRING),
                            "CONVERSATION_TYPE",
                            "CONVERSATION_TYPE",
                            "Conversation type"
                          )
                        )
                      )
                    : p(e)
                    ? new s.CometChatException(
                        JSON.parse(
                          f(
                            JSON.stringify(o.GENERAL_ERROR.INVALID),
                            "CONVERSATION_TYPE",
                            "CONVERSATION_TYPE",
                            "conversation type",
                            "conversation type"
                          )
                        )
                      )
                    : (e = e.toLowerCase()) != l.CometChat.RECEIVER_TYPE.USER &&
                      e != l.CometChat.RECEIVER_TYPE.GROUP
                    ? new s.CometChatException(
                        o.ConversationErrors.INVALID_CONVERSATION_TYPE
                      )
                    : void 0;
                });
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              t.CometChatException = function (e) {
                null !== e.code &&
                  void 0 !== e.code &&
                  "" !== e.code &&
                  (this.code = e.code),
                  null !== e.name &&
                    void 0 !== e.name &&
                    "" !== e.name &&
                    (this.name = e.name),
                  null !== e.message &&
                    void 0 !== e.message &&
                    "" !== e.message &&
                    (this.message = e.message),
                  null !== e.details &&
                    void 0 !== e.details &&
                    "" !== e.details &&
                    (this.details = e.details);
              };
            },
            function (e, t, n) {
              "use strict";
              (function (e) {
                var r =
                    (this && this.__assign) ||
                    function () {
                      return (r =
                        Object.assign ||
                        function (e) {
                          for (var t, n = 1, r = arguments.length; n < r; n++)
                            for (var o in (t = arguments[n]))
                              Object.prototype.hasOwnProperty.call(t, o) &&
                                (e[o] = t[o]);
                          return e;
                        }).apply(this, arguments);
                    },
                  o =
                    (this && this.__awaiter) ||
                    function (e, t, n, r) {
                      return new (n || (n = Promise))(function (o, i) {
                        function s(e) {
                          try {
                            c(r.next(e));
                          } catch (e) {
                            i(e);
                          }
                        }
                        function a(e) {
                          try {
                            c(r.throw(e));
                          } catch (e) {
                            i(e);
                          }
                        }
                        function c(e) {
                          e.done
                            ? o(e.value)
                            : new n(function (t) {
                                t(e.value);
                              }).then(s, a);
                        }
                        c((r = r.apply(e, t || [])).next());
                      });
                    },
                  i =
                    (this && this.__generator) ||
                    function (e, t) {
                      var n,
                        r,
                        o,
                        i,
                        s = {
                          label: 0,
                          sent: function () {
                            if (1 & o[0]) throw o[1];
                            return o[1];
                          },
                          trys: [],
                          ops: [],
                        };
                      return (
                        (i = { next: a(0), throw: a(1), return: a(2) }),
                        "function" == typeof Symbol &&
                          (i[Symbol.iterator] = function () {
                            return this;
                          }),
                        i
                      );
                      function a(i) {
                        return function (a) {
                          return (function (i) {
                            if (n)
                              throw new TypeError(
                                "Generator is already executing."
                              );
                            for (; s; )
                              try {
                                if (
                                  ((n = 1),
                                  r &&
                                    (o =
                                      2 & i[0]
                                        ? r.return
                                        : i[0]
                                        ? r.throw ||
                                          ((o = r.return) && o.call(r), 0)
                                        : r.next) &&
                                    !(o = o.call(r, i[1])).done)
                                )
                                  return o;
                                switch (
                                  ((r = 0),
                                  o && (i = [2 & i[0], o.value]),
                                  i[0])
                                ) {
                                  case 0:
                                  case 1:
                                    o = i;
                                    break;
                                  case 4:
                                    return s.label++, { value: i[1], done: !1 };
                                  case 5:
                                    s.label++, (r = i[1]), (i = [0]);
                                    continue;
                                  case 7:
                                    (i = s.ops.pop()), s.trys.pop();
                                    continue;
                                  default:
                                    if (
                                      !(o =
                                        0 < (o = s.trys).length &&
                                        o[o.length - 1]) &&
                                      (6 === i[0] || 2 === i[0])
                                    ) {
                                      s = 0;
                                      continue;
                                    }
                                    if (
                                      3 === i[0] &&
                                      (!o || (i[1] > o[0] && i[1] < o[3]))
                                    ) {
                                      s.label = i[1];
                                      break;
                                    }
                                    if (6 === i[0] && s.label < o[1]) {
                                      (s.label = o[1]), (o = i);
                                      break;
                                    }
                                    if (o && s.label < o[2]) {
                                      (s.label = o[2]), s.ops.push(i);
                                      break;
                                    }
                                    o[2] && s.ops.pop(), s.trys.pop();
                                    continue;
                                }
                                i = t.call(e, s);
                              } catch (e) {
                                (i = [6, e]), (r = 0);
                              } finally {
                                n = o = 0;
                              }
                            if (5 & i[0]) throw i[1];
                            return { value: i[0] ? i[1] : void 0, done: !0 };
                          })([i, a]);
                        };
                      }
                    };
                t.__esModule = !0;
                var s = n(29),
                  a = n(1),
                  c = n(2),
                  u = n(5),
                  l = n(4),
                  d = n(14),
                  p = n(15),
                  f = n(9),
                  h = n(18),
                  E = n(17),
                  g = n(7),
                  S = n(22),
                  C = n(8),
                  _ = n(0),
                  m = n(6),
                  T = n(16),
                  y = n(39),
                  A = n(50),
                  I = n(21),
                  v = n(24),
                  N = n(33),
                  R = n(12),
                  O = n(23),
                  P = n(51),
                  M = n(52),
                  L = n(54),
                  b = n(55),
                  w = n(56),
                  D = n(25),
                  U = n(35),
                  x = n(36),
                  Y = n(20),
                  G = n(40),
                  k = n(57),
                  F = n(37),
                  B = n(26),
                  K = n(58),
                  H = n(38),
                  V = n(59),
                  j = n(41),
                  J = n(27),
                  X = n(19),
                  W = n(60),
                  q = n(61),
                  z = n(62),
                  Q = n(30),
                  $ = n(34),
                  Z = n(63),
                  ee = d.XMPPConnectionHelper.getInstance(),
                  te = (function () {
                    function t(r) {
                      try {
                        "undefined" != typeof document
                          ? a.Logger.info(
                              "This is browser",
                              "we have everything"
                            )
                          : "undefined" != typeof navigator &&
                            "ReactNative" == navigator.product
                          ? (a.Logger.info(
                              "This is react-native",
                              "we do not have dom"
                            ),
                            (e.DOMParser = n(66).DOMParser),
                            (e.document = new e.DOMParser().parseFromString(
                              "<?xml version='1.0'?>",
                              "text/xml"
                            )),
                            (t.isNative = !0))
                          : a.Logger.info(
                              "This is node",
                              "we do not have anything"
                            ),
                          t.typingTimer(),
                          (t.appId = r),
                          (t.messagesStore = S.MessagesStore.getInstance()),
                          (t.localStorage = f.LocalStorage.getInstance()),
                          (t.userStore = y.UserStore.getInstance()),
                          (t.keyStore = A.KeyStore.getInstance()),
                          (t.messageListnerMaping =
                            D.MessageListnerMaping.getInstance());
                      } catch (r) {
                        a.Logger.error("CometChat: constructor", r);
                      }
                    }
                    return (
                      (t.setAuthToken = function (e) {
                        try {
                          t.authToken = e;
                        } catch (e) {
                          a.Logger.error("CometChat: setAuthToken", e);
                        }
                      }),
                      (t.prototype.getAuthToken = function () {
                        try {
                          return t.authToken;
                        } catch (e) {
                          a.Logger.error("CometChat: getAuthToken", e);
                        }
                      }),
                      (t.getAppId = function () {
                        try {
                          return t.appId;
                        } catch (e) {
                          a.Logger.error("CometChat: getAppId", e);
                        }
                      }),
                      (t.prototype.getApiKey = function () {
                        try {
                          return t.apiKey;
                        } catch (e) {
                          a.Logger.error("CometChat: getApiKey", e);
                        }
                      }),
                      (t.getMode = function () {
                        try {
                          return t.mode;
                        } catch (e) {
                          a.Logger.error("CometChat: getMode", e);
                        }
                      }),
                      (t.setMode = function (e) {
                        try {
                          t.mode = e;
                        } catch (e) {
                          a.Logger.error("CometChat: getMode", e);
                        }
                      }),
                      (t.getSessionId = function () {
                        try {
                          return t.sessionId;
                        } catch (e) {
                          a.Logger.error("CometChat: getAppId", e);
                        }
                      }),
                      (t.getLastMessageId = function () {
                        try {
                          return t.lastMessageId;
                        } catch (e) {
                          a.Logger.error("CometChat: getLastMessageId", e);
                        }
                      }),
                      (t.setLastMessageId = function (e) {
                        try {
                          t.lastMessageId = e;
                        } catch (e) {
                          a.Logger.error("CometChat: getLastMessageId", e);
                        }
                      }),
                      (t.setSuccessfulTimeStamp = function (e) {
                        try {
                          t.successfulPingTimeStamp = e;
                        } catch (e) {
                          a.Logger.error(
                            "CometChat: setSuccessfulTimeStamp",
                            e
                          );
                        }
                      }),
                      (t.getSuccessfultTimeStamp = function () {
                        try {
                          return t.successfulPingTimeStamp;
                        } catch (e) {
                          a.Logger.error(
                            "CometChat: getSuccessfultTimeStamp",
                            e
                          );
                        }
                      }),
                      (t.onStorageEvent = function (e) {
                        var n = this;
                        if (document && !document.hasFocus()) {
                          var r = t.appId + ":common_store/user";
                          e.key === r &&
                            null === e.newValue &&
                            ((t.authToken = void 0),
                            t.didAnalyticsPingStart() &&
                              t.clearAnalyticsPingTimer(),
                            t.didMessagesPollingStart() &&
                              t.clearMessagesTimer(),
                            d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                            t.pushToLoginListener("", "Logout_Success")),
                            e.key === r &&
                              null === e.oldValue &&
                              f.LocalStorage.getInstance()
                                .get("user")
                                .then(function (e) {
                                  e &&
                                    ((t.user = new l.Me(e)),
                                    t.setAuthToken(t.user.getAuthToken()),
                                    e.jwt && (t.jwt = e.jwt),
                                    f.LocalStorage.getInstance()
                                      .get("app_settings")
                                      .then(function (e) {
                                        if (e)
                                          if (
                                            (e[_.APP_SETTINGS.KEYS.MODE] &&
                                              (t.mode =
                                                e[_.APP_SETTINGS.KEYS.MODE]),
                                            e[
                                              _.APP_SETTINGS.KEYS.SETTINGS_HASH
                                            ] &&
                                              (t.settingsHash =
                                                e[
                                                  _.APP_SETTINGS.KEYS.SETTINGS_HASH
                                                ]),
                                            e[
                                              _.APP_SETTINGS.KEYS
                                                .SETTINGS_HASH_RECEIVED_AT
                                            ] &&
                                              (t.settingsHashReceivedAt =
                                                e[
                                                  _.APP_SETTINGS.KEYS.SETTINGS_HASH_RECEIVED_AT
                                                ]),
                                            e[
                                              _.APP_SETTINGS.KEYS.ANALYTICS_HOST
                                            ] &&
                                              (t.analyticsHost =
                                                e[
                                                  _.APP_SETTINGS.KEYS.ANALYTICS_HOST
                                                ]),
                                            e[
                                              _.APP_SETTINGS.KEYS
                                                .ANALYTICS_VERSION
                                            ] &&
                                              (t.analyticsVersion =
                                                e[
                                                  _.APP_SETTINGS.KEYS.ANALYTICS_VERSION
                                                ]),
                                            (t.isAnalyticsDisabled =
                                              !!e[
                                                _.APP_SETTINGS.KEYS
                                                  .ANALYTICS_PING_DISABLED
                                              ]),
                                            e.hasOwnProperty(
                                              _.APP_SETTINGS.KEYS
                                                .DENY_FALLBACK_TO_POLLING
                                            ) &&
                                              (t.shouldFallBackToPolling = !1),
                                            t.didAnalyticsPingStart() ||
                                              t.isAnalyticsDisabled ||
                                              (t.pingAnalytics(),
                                              t.startAnalyticsPingTimer()),
                                            e[
                                              _.APP_SETTINGS.KEYS
                                                .POLLING_ENABLED
                                            ])
                                          )
                                            (n.currentConnectionStatus =
                                              _.CONNECTION_STATUS.FEATURE_THROTTLED),
                                              (t.pollingEnabled = !0),
                                              (t.pollingInterval =
                                                e[
                                                  _.APP_SETTINGS.KEYS.POLLING_INTERVAL
                                                ]),
                                              t.didMessagesPollingStart() ||
                                                (ee.XMPPConnectionHandlers.map(
                                                  function (e) {
                                                    try {
                                                      e._XMPPeventListener &&
                                                        (a.isFalsy(
                                                          e._XMPPeventListener
                                                            .onFeatureThrottled
                                                        ) ||
                                                          e._XMPPeventListener.onFeatureThrottled());
                                                    } catch (e) {
                                                      a.Logger.error(
                                                        "XMPPConnectionHandlers: Feature Throttled Status",
                                                        e
                                                      );
                                                    }
                                                  }
                                                ),
                                                t.fetchMessages(),
                                                t.startMessagesTimer());
                                          else if (
                                            t.getConnectionStatus() !==
                                            _.CONNECTION_STATUS.CONNECTED
                                          ) {
                                            var r = new l.User(t.user);
                                            t.pushToLoginListener(
                                              r,
                                              "Login_Success"
                                            ),
                                              t.XMPPLogin(
                                                t.user,
                                                function () {},
                                                function () {}
                                              );
                                          }
                                      }));
                                });
                        }
                      }),
                      (t.beforeUnload = function (e) {
                        var n = t.getDataFromSessionStorage(
                          _.SESSION_STORE.SESSION_ID
                        );
                        t.removeDataFromSessionStorage(
                          _.SESSION_STORE.SESSION_ID
                        ),
                          f.LocalStorage.getInstance().set(
                            _.SESSION_STORE.SESSION_ID,
                            n
                          );
                      }),
                      (t.isPollingEnabled = function () {
                        try {
                          return t.pollingEnabled;
                        } catch (e) {
                          a.Logger.error("CometChat: isPollingEnabled", e);
                        }
                      }),
                      (t.didMessagesPollingStart = function () {
                        try {
                          return t.isMessagesPollingStarted;
                        } catch (e) {
                          a.Logger.error(
                            "CometChat: didMessagesPollingStart",
                            e
                          );
                        }
                      }),
                      (t.didAnalyticsPingStart = function () {
                        try {
                          return t.isAnalyticsPingStarted;
                        } catch (e) {
                          a.Logger.error("CometChat: didAnalyticsPingStart", e);
                        }
                      }),
                      (t.getDataFromSessionStorage = function (e) {
                        if (window.sessionStorage)
                          return window.sessionStorage.getItem(e);
                      }),
                      (t.addDataToSessionStorage = function (e, t) {
                        window.sessionStorage &&
                          window.sessionStorage.setItem(e, t);
                      }),
                      (t.removeDataFromSessionStorage = function (e) {
                        window.sessionStorage &&
                          window.sessionStorage.removeItem(e);
                      }),
                      (t.init = function (e, n) {
                        var r = this;
                        return (
                          void 0 === e && (e = ""),
                          void 0 === n && (n = {}),
                          new Promise(function (o, i) {
                            try {
                              (t.pollingMessagesId = 0),
                                "object" == typeof e &&
                                  (e.hasOwnProperty("appId") && (e = e.appId),
                                  e.hasOwnProperty("appSettings") &&
                                    (n = e.appSettings)),
                                a.isFalsy(n)
                                  ? (n = new H.AppSettingsBuilder()
                                      .setRegion(H.AppSettings.REGION_EU)
                                      .build())
                                  : n.getRegion() ==
                                      H.AppSettings.REGION_PRIVATE &&
                                    (n.region = e),
                                (r.appSettings = n),
                                a.isFalsy(e)
                                  ? i(
                                      new c.CometChatException(
                                        R.INIT_ERROR.NO_APP_ID
                                      )
                                    )
                                  : (t.setSuccessfulTimeStamp(
                                      new Date().getTime()
                                    ),
                                    window.addEventListener &&
                                      (window.addEventListener(
                                        "storage",
                                        t.onStorageEvent,
                                        !1
                                      ),
                                      window.addEventListener(
                                        "beforeunload",
                                        t.beforeUnload,
                                        !1
                                      )),
                                    (r.initialzed = !0),
                                    (t.appId = e),
                                    t.getInstance(e),
                                    t.setLastMessageId(0),
                                    (t.shouldFallBackToPolling = !0),
                                    f.LocalStorage.getInstance()
                                      .get(_.SESSION_STORE.SESSION_ID)
                                      .then(function (n) {
                                        null == n || null == n
                                          ? ((t.sessionId =
                                              _.APPINFO.platform +
                                              "-" +
                                              _.APPINFO
                                                .sdkVersionWithUnderScore +
                                              "-" +
                                              Z() +
                                              "-" +
                                              new Date().getTime()),
                                            t.addDataToSessionStorage(
                                              _.SESSION_STORE.SESSION_ID,
                                              t.getSessionId()
                                            ),
                                            f.LocalStorage.getInstance().remove(
                                              _.SESSION_STORE.SESSION_ID
                                            ))
                                          : ((t.sessionId = n.toLocaleString()),
                                            f.LocalStorage.getInstance().remove(
                                              _.SESSION_STORE.SESSION_ID
                                            ),
                                            t.addDataToSessionStorage(
                                              _.SESSION_STORE.SESSION_ID,
                                              t.getSessionId()
                                            )),
                                          f.LocalStorage.getInstance()
                                            .get("appId")
                                            .then(function (n) {
                                              if (null == n || null == n)
                                                (t.appId = e),
                                                  t.getInstance(e),
                                                  f.LocalStorage.getInstance().set(
                                                    "appId",
                                                    e
                                                  ),
                                                  o(!0);
                                              else {
                                                var s = n.toLocaleString();
                                                s === e
                                                  ? ((t.appId = s),
                                                    t.getInstance(s),
                                                    f.LocalStorage.getInstance()
                                                      .get("user")
                                                      .then(function (e) {
                                                        e
                                                          ? ((t.isLoggedOut =
                                                              !1),
                                                            (t.user = new l.Me(
                                                              e
                                                            )),
                                                            t.setAuthToken(
                                                              t.user.getAuthToken()
                                                            ),
                                                            e.jwt &&
                                                              (t.jwt = e.jwt),
                                                            o(!0),
                                                            f.LocalStorage.getInstance()
                                                              .get(
                                                                "app_settings"
                                                              )
                                                              .then(function (
                                                                e
                                                              ) {
                                                                e &&
                                                                  (e[
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS.MODE
                                                                  ] &&
                                                                    (t.mode =
                                                                      e[
                                                                        _.APP_SETTINGS.KEYS.MODE
                                                                      ]),
                                                                  e[
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS
                                                                      .SETTINGS_HASH
                                                                  ] &&
                                                                    (t.settingsHash =
                                                                      e[
                                                                        _.APP_SETTINGS.KEYS.SETTINGS_HASH
                                                                      ]),
                                                                  e[
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS
                                                                      .SETTINGS_HASH_RECEIVED_AT
                                                                  ] &&
                                                                    (t.settingsHashReceivedAt =
                                                                      e[
                                                                        _.APP_SETTINGS.KEYS.SETTINGS_HASH_RECEIVED_AT
                                                                      ]),
                                                                  e[
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS
                                                                      .ANALYTICS_HOST
                                                                  ] &&
                                                                    (t.analyticsHost =
                                                                      e[
                                                                        _.APP_SETTINGS.KEYS.ANALYTICS_HOST
                                                                      ]),
                                                                  e[
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS
                                                                      .ANALYTICS_VERSION
                                                                  ] &&
                                                                    (t.analyticsVersion =
                                                                      e[
                                                                        _.APP_SETTINGS.KEYS.ANALYTICS_VERSION
                                                                      ]),
                                                                  (t.isAnalyticsDisabled =
                                                                    !!e[
                                                                      _
                                                                        .APP_SETTINGS
                                                                        .KEYS
                                                                        .ANALYTICS_PING_DISABLED
                                                                    ]),
                                                                  e.hasOwnProperty(
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS
                                                                      .DENY_FALLBACK_TO_POLLING
                                                                  ) &&
                                                                    (t.shouldFallBackToPolling =
                                                                      !1),
                                                                  t.didAnalyticsPingStart() ||
                                                                    t.isAnalyticsDisabled ||
                                                                    (t.pingAnalytics(),
                                                                    t.startAnalyticsPingTimer()),
                                                                  e[
                                                                    _
                                                                      .APP_SETTINGS
                                                                      .KEYS
                                                                      .POLLING_ENABLED
                                                                  ]
                                                                    ? ((t.pollingEnabled =
                                                                        !0),
                                                                      e[
                                                                        _
                                                                          .APP_SETTINGS
                                                                          .KEYS
                                                                          .POLLING_INTERVAL
                                                                      ] &&
                                                                        (t.pollingInterval =
                                                                          e[
                                                                            _.APP_SETTINGS.KEYS.POLLING_INTERVAL
                                                                          ]),
                                                                      (r.currentConnectionStatus =
                                                                        _.CONNECTION_STATUS.FEATURE_THROTTLED),
                                                                      t.didMessagesPollingStart() ||
                                                                        (ee.XMPPConnectionHandlers.map(
                                                                          function (
                                                                            e
                                                                          ) {
                                                                            try {
                                                                              e._XMPPeventListener &&
                                                                                (a.isFalsy(
                                                                                  e
                                                                                    ._XMPPeventListener
                                                                                    .onFeatureThrottled
                                                                                ) ||
                                                                                  e._XMPPeventListener.onFeatureThrottled());
                                                                            } catch (e) {
                                                                              a.Logger.error(
                                                                                "XMPPConnectionHandlers: Feature Throttled Status",
                                                                                e
                                                                              );
                                                                            }
                                                                          }
                                                                        ),
                                                                        (t.pollingMessagesTimestamp =
                                                                          Math.floor(
                                                                            new Date().getTime() /
                                                                              1e3
                                                                          )),
                                                                        t.fetchMessages(),
                                                                        t.startMessagesTimer()))
                                                                    : ((t.pollingEnabled =
                                                                        !1),
                                                                      (t.isConnectingFromInit =
                                                                        !0),
                                                                      t.XMPPLogin(
                                                                        t.user,
                                                                        function () {
                                                                          o(!0);
                                                                        },
                                                                        function () {
                                                                          i(
                                                                            "error in connecting to xmpp server"
                                                                          );
                                                                        }
                                                                      )));
                                                              }))
                                                          : o(!0);
                                                      }))
                                                  : r
                                                      .clearCache()
                                                      .then(function () {
                                                        (t.apiKey = void 0),
                                                          (t.user = void 0),
                                                          (t.authToken =
                                                            void 0),
                                                          (t.cometChat =
                                                            void 0),
                                                          (t.mode = void 0),
                                                          d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                                                          (t.appId = e),
                                                          f.LocalStorage.getInstance().set(
                                                            "appId",
                                                            e
                                                          ),
                                                          t.getInstance(e),
                                                          o(!0);
                                                      });
                                              }
                                              A.KeyStore.getInstance()
                                                .get("deviceId")
                                                .then(function (t) {
                                                  if (null == t) {
                                                    var n = Z(),
                                                      r = new Date().getTime(),
                                                      o = e + "_" + n + "_" + r;
                                                    A.KeyStore.getInstance().set(
                                                      "deviceId",
                                                      o
                                                    );
                                                  }
                                                });
                                            });
                                      }));
                            } catch (e) {
                              i(new c.CometChatException(e));
                            }
                          })
                        );
                      }),
                      (t.isInitialized = function () {
                        try {
                          return this.initialzed;
                        } catch (e) {
                          a.Logger.error("CometChat: isInitialized", e);
                        }
                      }),
                      (t.getInstance = function (e) {
                        try {
                          return (
                            this.cometChat || (this.cometChat = new t(e)),
                            this.cometChat
                          );
                        } catch (e) {
                          a.Logger.error("CometChat: getInstance", e);
                        }
                      }),
                      (t.registerTokenForPushNotification = function (e, n) {
                        var r = this;
                        return new Promise(function (o, i) {
                          try {
                            t.keyStore.get("deviceId").then(function (s) {
                              var a = "",
                                l = s,
                                d = _.APPINFO.platform,
                                p = _.APPINFO.sdkVersion,
                                f = _.APPINFO.apiVersion;
                              if (
                                (navigator && (a = navigator.userAgent),
                                null == l)
                              ) {
                                var h = Z(),
                                  E = new Date().getTime();
                                (l = r.appId + "_" + h + "_" + E),
                                  t.keyStore.set("deviceId", l);
                              }
                              var g = {
                                platform: d,
                                deviceId: l,
                                appInfo: {
                                  version: p,
                                  apiVersion: f,
                                  userAgent: a,
                                  pushNotification: {
                                    fcmDeviceToken: e,
                                    settings: n,
                                  },
                                },
                              };
                              u.makeApiCall("updateMyDetails", {}, g, !1)
                                .then(
                                  function (e) {
                                    o("Token Registration successful");
                                  },
                                  function (e) {
                                    i(new c.CometChatException(e.error));
                                  }
                                )
                                .catch(function (e) {
                                  i(new c.CometChatException(e));
                                });
                            });
                          } catch (e) {
                            i(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.pushToLoginListener = function (e, t) {
                        ee.loginHandlers.map(function (n) {
                          try {
                            if (n._eventListener)
                              switch (t) {
                                case "Login_Success":
                                  a.isFalsy(n._eventListener.loginSuccess) ||
                                    n._eventListener.loginSuccess(e);
                                  break;
                                case "Login_Failure":
                                  a.isFalsy(n._eventListener.loginFailure) ||
                                    n._eventListener.loginFailure(e);
                                  break;
                                case "Logout_Success":
                                  a.isFalsy(n._eventListener.logoutSuccess) ||
                                    n._eventListener.logoutSuccess();
                              }
                          } catch (n) {
                            a.Logger.error(
                              "XMPPConnectionHandlers: onConnected Status",
                              n
                            );
                          }
                        });
                      }),
                      (t.login = function () {
                        for (
                          var e = this, n = [], r = 0;
                          r < arguments.length;
                          r++
                        )
                          n[r] = arguments[r];
                        return new Promise(function (r, o) {
                          try {
                            if (
                              ((t.isLoggedOut = !1),
                              (t.pollingMessagesId = 0),
                              t.loginInProgress)
                            ) {
                              var i = new c.CometChatException(
                                R.LOGIN_ERROR.REQUEST_IN_PROGRESS
                              );
                              return o(i);
                            }
                            (t.loginInProgress = !0),
                              (t.isConnectingFromInit = !1),
                              t.localStorage.get("appId").then(function (i) {
                                if (null == i || null == i) {
                                  var s = new c.CometChatException(
                                    R.LOGIN_ERROR.NOT_INITIALIZED
                                  );
                                  return (
                                    t.pushToLoginListener(s, "Login_Failure"),
                                    (t.loginInProgress = !1),
                                    (t.isLoggedOut = !0),
                                    o(s)
                                  );
                                }
                                var u = i.toLocaleString();
                                if (
                                  (e.getInstance(u),
                                  (t.appId = u),
                                  f.LocalStorage.getInstance().set("appId", u),
                                  "object" == typeof n[0])
                                ) {
                                  var p = n[0];
                                  n[0].hasOwnProperty("authToken")
                                    ? (n[0] = p.authToken)
                                    : n[0].hasOwnProperty("username") &&
                                      n[0].hasOwnProperty("apiKey") &&
                                      ((n[0] = p.username), (n[1] = p.apiKey));
                                }
                                if (2 == n.length) {
                                  if (a.isFalsy(n[0]) || a.isFalsy(n[1]))
                                    return (
                                      (s = new c.CometChatException(
                                        R.ERRORS.PARAMETER_MISSING
                                      )),
                                      t.pushToLoginListener(s, "Login_Failure"),
                                      (t.loginInProgress = !1),
                                      (t.isLoggedOut = !0),
                                      o(s)
                                    );
                                } else {
                                  if (1 != n.length)
                                    return (
                                      (s = new c.CometChatException(
                                        R.ERRORS.PARAMETER_MISSING
                                      )),
                                      t.pushToLoginListener(s, "Login_Failure"),
                                      (t.loginInProgress = !1),
                                      (t.isLoggedOut = !0),
                                      o(s)
                                    );
                                  if (a.isFalsy(n[0]))
                                    return (
                                      (s = new c.CometChatException(
                                        R.ERRORS.PARAMETER_MISSING
                                      )),
                                      t.pushToLoginListener(s, "Login_Failure"),
                                      (t.loginInProgress = !1),
                                      (t.isLoggedOut = !0),
                                      o(s)
                                    );
                                }
                                return a.isFalsy(e.getAppId())
                                  ? ((s = new c.CometChatException(
                                      R.LOGIN_ERROR.NOT_INITIALIZED
                                    )),
                                    t.pushToLoginListener(s, "Login_Failure"),
                                    (t.loginInProgress = !1),
                                    (t.isLoggedOut = !0),
                                    o(s))
                                  : t.localStorage
                                      .get("user")
                                      .then(function (i) {
                                        if (2 == n.length) {
                                          (t.isSecure = !1), (t.apiKey = n[1]);
                                          var s = n[0];
                                          if (null != i && i.uid !== n[0])
                                            t.messagesStore
                                              .clearStore()
                                              .then(function () {
                                                t.userStore
                                                  .clearStore()
                                                  .then(function () {
                                                    t.localStorage
                                                      .clearStore()
                                                      .then(function () {
                                                        d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                                                          t
                                                            .generateAuthToken(
                                                              s
                                                            )
                                                            .then(
                                                              function (e) {
                                                                (t.user =
                                                                  new l.Me(e)),
                                                                  t.setAuthToken(
                                                                    t.user.getAuthToken()
                                                                  ),
                                                                  t
                                                                    .getLoggedInUser()
                                                                    .then(
                                                                      function (
                                                                        e
                                                                      ) {
                                                                        (t.user =
                                                                          new l.Me(
                                                                            e
                                                                          )).setAuthToken(
                                                                          t.authToken
                                                                        ),
                                                                          t.setAuthToken(
                                                                            t.user.getAuthToken()
                                                                          ),
                                                                          B.ExtensionController.hookOnLogin(
                                                                            t.user
                                                                          );
                                                                        var n =
                                                                          t.user;
                                                                        n.setStatus(
                                                                          _
                                                                            .PresenceConstatnts
                                                                            .STATUS
                                                                            .ONLINE
                                                                        ),
                                                                          t.localStorage.set(
                                                                            "user",
                                                                            n
                                                                          );
                                                                        var i =
                                                                          new l.User(
                                                                            n
                                                                          );
                                                                        r(i),
                                                                          t.isConnectingFromInit ||
                                                                            t.pushToLoginListener(
                                                                              i,
                                                                              "Login_Success"
                                                                            ),
                                                                          (t.loginInProgress =
                                                                            !1),
                                                                          t.didAnalyticsPingStart() ||
                                                                            t.isAnalyticsDisabled ||
                                                                            (t.pingAnalytics(),
                                                                            t.startAnalyticsPingTimer()),
                                                                          t.isPollingEnabled()
                                                                            ? ((t.currentConnectionStatus =
                                                                                _.CONNECTION_STATUS.FEATURE_THROTTLED),
                                                                              t.didMessagesPollingStart() ||
                                                                                (ee.XMPPConnectionHandlers.map(
                                                                                  function (
                                                                                    e
                                                                                  ) {
                                                                                    try {
                                                                                      e._XMPPeventListener &&
                                                                                        (a.isFalsy(
                                                                                          e
                                                                                            ._XMPPeventListener
                                                                                            .onFeatureThrottled
                                                                                        ) ||
                                                                                          e._XMPPeventListener.onFeatureThrottled());
                                                                                    } catch (e) {
                                                                                      a.Logger.error(
                                                                                        "XMPPConnectionHandlers: Feature Throttled Status",
                                                                                        e
                                                                                      );
                                                                                    }
                                                                                  }
                                                                                ),
                                                                                (t.pollingMessagesTimestamp =
                                                                                  Math.floor(
                                                                                    new Date().getTime() /
                                                                                      1e3
                                                                                  )),
                                                                                t.fetchMessages(),
                                                                                t.startMessagesTimer()))
                                                                            : t.XMPPLogin(
                                                                                t.user,
                                                                                r,
                                                                                o
                                                                              );
                                                                      },
                                                                      function (
                                                                        e
                                                                      ) {
                                                                        return (
                                                                          t.pushToLoginListener(
                                                                            e,
                                                                            "Login_Failure"
                                                                          ),
                                                                          (t.loginInProgress =
                                                                            !1),
                                                                          (t.isLoggedOut =
                                                                            !0),
                                                                          o(e)
                                                                        );
                                                                      }
                                                                    );
                                                              },
                                                              function (e) {
                                                                return (
                                                                  t.pushToLoginListener(
                                                                    e,
                                                                    "Login_Failure"
                                                                  ),
                                                                  (t.loginInProgress =
                                                                    !1),
                                                                  (t.isLoggedOut =
                                                                    !0),
                                                                  o(e)
                                                                );
                                                              }
                                                            );
                                                      });
                                                  });
                                              });
                                          else {
                                            if (!a.isFalsy(t.authToken)) {
                                              B.ExtensionController.hookOnLogin(
                                                t.user
                                              );
                                              var u = new l.User(e.user);
                                              return (
                                                t.pushToLoginListener(
                                                  u,
                                                  "Login_Success"
                                                ),
                                                (t.loginInProgress = !1),
                                                r(u)
                                              );
                                            }
                                            if (!a.isFalsy(s)) {
                                              if (a.isFalsy(t.apiKey)) {
                                                var p =
                                                  new c.CometChatException(
                                                    R.LOGIN_ERROR.UNAUTHORISED
                                                  );
                                                return (
                                                  t.pushToLoginListener(
                                                    p,
                                                    "Login_Failure"
                                                  ),
                                                  (t.loginInProgress = !1),
                                                  (t.isLoggedOut = !0),
                                                  o(p)
                                                );
                                              }
                                              e.generateAuthToken(s).then(
                                                function (n) {
                                                  (e.user = new l.Me(n)),
                                                    e.setAuthToken(
                                                      t.user.getAuthToken()
                                                    ),
                                                    e.getLoggedInUser().then(
                                                      function (n) {
                                                        (e.user = new l.Me(n)),
                                                          e.user.setAuthToken(
                                                            t.authToken
                                                          ),
                                                          e.setAuthToken(
                                                            e.user.getAuthToken()
                                                          ),
                                                          B.ExtensionController.hookOnLogin(
                                                            t.user
                                                          ),
                                                          d.XMPPConnectionHelper.getInstance().XMPPDisconnect();
                                                        var i = e.user;
                                                        i.setStatus(
                                                          _.PresenceConstatnts
                                                            .STATUS.ONLINE
                                                        ),
                                                          e.localStorage.set(
                                                            "user",
                                                            i
                                                          );
                                                        var s = new l.User(i);
                                                        r(s),
                                                          t.isConnectingFromInit ||
                                                            t.pushToLoginListener(
                                                              s,
                                                              "Login_Success"
                                                            ),
                                                          (t.loginInProgress =
                                                            !1),
                                                          t.didAnalyticsPingStart() ||
                                                            t.isAnalyticsDisabled ||
                                                            (t.pingAnalytics(),
                                                            t.startAnalyticsPingTimer()),
                                                          t.isPollingEnabled()
                                                            ? ((e.currentConnectionStatus =
                                                                _.CONNECTION_STATUS.FEATURE_THROTTLED),
                                                              t.didMessagesPollingStart() ||
                                                                (ee.XMPPConnectionHandlers.map(
                                                                  function (e) {
                                                                    try {
                                                                      e._XMPPeventListener &&
                                                                        (a.isFalsy(
                                                                          e
                                                                            ._XMPPeventListener
                                                                            .onFeatureThrottled
                                                                        ) ||
                                                                          e._XMPPeventListener.onFeatureThrottled());
                                                                    } catch (e) {
                                                                      a.Logger.error(
                                                                        "XMPPConnectionHandlers: Feature Throttled Status",
                                                                        e
                                                                      );
                                                                    }
                                                                  }
                                                                ),
                                                                (t.pollingMessagesTimestamp =
                                                                  Math.floor(
                                                                    new Date().getTime() /
                                                                      1e3
                                                                  )),
                                                                t.fetchMessages(),
                                                                t.startMessagesTimer()))
                                                            : e.XMPPLogin(
                                                                e.user,
                                                                r,
                                                                o
                                                              );
                                                      },
                                                      function (e) {
                                                        return (
                                                          t.pushToLoginListener(
                                                            e,
                                                            "Login_Failure"
                                                          ),
                                                          (t.loginInProgress =
                                                            !1),
                                                          (t.isLoggedOut = !0),
                                                          o(e)
                                                        );
                                                      }
                                                    );
                                                },
                                                function (e) {
                                                  return (
                                                    t.pushToLoginListener(
                                                      e,
                                                      "Login_Failure"
                                                    ),
                                                    (t.loginInProgress = !1),
                                                    (t.isLoggedOut = !0),
                                                    o(e)
                                                  );
                                                }
                                              );
                                            }
                                          }
                                        } else
                                          (t.authToken = n[0]),
                                            (t.isSecure = !0),
                                            e.getLoggedInUser().then(
                                              function (s) {
                                                if (s.authToken != n[0]) {
                                                  var c = e;
                                                  c.messagesStore
                                                    .clearStore()
                                                    .then(function () {
                                                      c.userStore
                                                        .clearStore()
                                                        .then(function () {
                                                          c.localStorage
                                                            .clearStore()
                                                            .then(function () {
                                                              d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                                                                c
                                                                  .getLoggedInUser()
                                                                  .then(
                                                                    function (
                                                                      e
                                                                    ) {
                                                                      (t.user =
                                                                        new l.Me(
                                                                          e
                                                                        )).setAuthToken(
                                                                        t.authToken
                                                                      ),
                                                                        t.setAuthToken(
                                                                          t.user.getAuthToken()
                                                                        );
                                                                      var n =
                                                                        t.user;
                                                                      n.setStatus(
                                                                        _
                                                                          .PresenceConstatnts
                                                                          .STATUS
                                                                          .ONLINE
                                                                      ),
                                                                        c.localStorage.set(
                                                                          "user",
                                                                          n
                                                                        );
                                                                      var i =
                                                                        new l.User(
                                                                          n
                                                                        );
                                                                      r(i),
                                                                        t.isConnectingFromInit ||
                                                                          t.pushToLoginListener(
                                                                            i,
                                                                            "Login_Success"
                                                                          ),
                                                                        (t.loginInProgress =
                                                                          !1),
                                                                        t.didAnalyticsPingStart() ||
                                                                          t.isAnalyticsDisabled ||
                                                                          (t.pingAnalytics(),
                                                                          t.startAnalyticsPingTimer()),
                                                                        t.isPollingEnabled()
                                                                          ? ((c.currentConnectionStatus =
                                                                              _.CONNECTION_STATUS.FEATURE_THROTTLED),
                                                                            t.didMessagesPollingStart() ||
                                                                              (ee.XMPPConnectionHandlers.map(
                                                                                function (
                                                                                  e
                                                                                ) {
                                                                                  try {
                                                                                    e._XMPPeventListener &&
                                                                                      (a.isFalsy(
                                                                                        e
                                                                                          ._XMPPeventListener
                                                                                          .onFeatureThrottled
                                                                                      ) ||
                                                                                        e._XMPPeventListener.onFeatureThrottled());
                                                                                  } catch (e) {
                                                                                    a.Logger.error(
                                                                                      "XMPPConnectionHandlers: Feature Throttled Status",
                                                                                      e
                                                                                    );
                                                                                  }
                                                                                }
                                                                              ),
                                                                              (t.pollingMessagesTimestamp =
                                                                                Math.floor(
                                                                                  new Date().getTime() /
                                                                                    1e3
                                                                                )),
                                                                              t.fetchMessages(),
                                                                              t.startMessagesTimer()))
                                                                          : t.XMPPLogin(
                                                                              new l.Me(
                                                                                e
                                                                              ),
                                                                              r,
                                                                              o
                                                                            );
                                                                    },
                                                                    function (
                                                                      e
                                                                    ) {
                                                                      return (
                                                                        t.pushToLoginListener(
                                                                          e,
                                                                          "Login_Failure"
                                                                        ),
                                                                        (t.loginInProgress =
                                                                          !1),
                                                                        (t.isLoggedOut =
                                                                          !0),
                                                                        o(e)
                                                                      );
                                                                    }
                                                                  );
                                                            });
                                                        });
                                                    });
                                                } else {
                                                  if (i) {
                                                    var u = new l.User(s);
                                                    return (
                                                      t.pushToLoginListener(
                                                        u,
                                                        "Login_Success"
                                                      ),
                                                      (t.loginInProgress = !1),
                                                      r(u)
                                                    );
                                                  }
                                                  (t.user = new l.Me(
                                                    s
                                                  )).setAuthToken(t.authToken),
                                                    t.setAuthToken(
                                                      t.user.getAuthToken()
                                                    );
                                                  var p = t.user;
                                                  p.setStatus(
                                                    _.PresenceConstatnts.STATUS
                                                      .ONLINE
                                                  ),
                                                    t.localStorage.set(
                                                      "user",
                                                      p
                                                    );
                                                  var f = new l.User(p);
                                                  r(f),
                                                    t.isConnectingFromInit ||
                                                      t.pushToLoginListener(
                                                        f,
                                                        "Login_Success"
                                                      ),
                                                    (t.loginInProgress = !1),
                                                    t.didAnalyticsPingStart() ||
                                                      t.isAnalyticsDisabled ||
                                                      (t.pingAnalytics(),
                                                      t.startAnalyticsPingTimer()),
                                                    t.isPollingEnabled()
                                                      ? ((t.currentConnectionStatus =
                                                          _.CONNECTION_STATUS.FEATURE_THROTTLED),
                                                        t.didMessagesPollingStart() ||
                                                          (ee.XMPPConnectionHandlers.map(
                                                            function (e) {
                                                              try {
                                                                e._XMPPeventListener &&
                                                                  (a.isFalsy(
                                                                    e
                                                                      ._XMPPeventListener
                                                                      .onFeatureThrottled
                                                                  ) ||
                                                                    e._XMPPeventListener.onFeatureThrottled());
                                                              } catch (e) {
                                                                a.Logger.error(
                                                                  "XMPPConnectionHandlers: Feature Throttled Status",
                                                                  e
                                                                );
                                                              }
                                                            }
                                                          ),
                                                          (t.pollingMessagesTimestamp =
                                                            Math.floor(
                                                              new Date().getTime() /
                                                                1e3
                                                            )),
                                                          t.fetchMessages(),
                                                          t.startMessagesTimer()))
                                                      : t.XMPPLogin(
                                                          new l.Me(s),
                                                          r,
                                                          o
                                                        );
                                                }
                                              },
                                              function (e) {
                                                return (
                                                  t.pushToLoginListener(
                                                    e,
                                                    "Login_Failure"
                                                  ),
                                                  (t.loginInProgress = !1),
                                                  (t.isLoggedOut = !0),
                                                  o(e)
                                                );
                                              }
                                            );
                                      });
                              });
                          } catch (e) {
                            return (
                              (i = new c.CometChatException(e)),
                              t.pushToLoginListener(i, "Login_Failure"),
                              (t.loginInProgress = !1),
                              (t.isLoggedOut = !0),
                              o(i)
                            );
                          }
                        });
                      }),
                      (t.sendMessage = function (e) {
                        var n = this;
                        return new Promise(function (r, s) {
                          return o(n, void 0, void 0, function () {
                            var n,
                              l,
                              d,
                              p,
                              f,
                              S = this;
                            return i(this, function (C) {
                              switch (C.label) {
                                case 0:
                                  return (
                                    C.trys.push([0, 2, , 3]),
                                    e instanceof E.TextMessage ||
                                      e instanceof h.MediaMessage ||
                                      e instanceof Y.CustomMessage ||
                                      (e = e[
                                        _.MessageConstatnts.KEYS.ATTATCHMENT
                                      ]
                                        ? ((n = _.MessageConstatnts.TYPE.FILE),
                                          a.isImage(
                                            e[
                                              _.MessageConstatnts.KEYS
                                                .ATTATCHMENT
                                            ]
                                          )
                                            ? (n =
                                                _.MessageConstatnts.TYPE.IMAGE)
                                            : a.isAudio(
                                                e[
                                                  _.MessageConstatnts.KEYS
                                                    .ATTATCHMENT
                                                ]
                                              )
                                            ? (n =
                                                _.MessageConstatnts.TYPE.AUDIO)
                                            : a.isVideo(
                                                e[
                                                  _.MessageConstatnts.KEYS
                                                    .ATTATCHMENT
                                                ]
                                              ) &&
                                              (n =
                                                _.MessageConstatnts.TYPE.VIDEO),
                                          new h.MediaMessage(
                                            e[
                                              _.MessageConstatnts.KEYS.RECEIVER_ID
                                            ],
                                            e[
                                              _.MessageConstatnts.KEYS.ATTATCHMENT
                                            ],
                                            n,
                                            e[
                                              _.MessageConstatnts.KEYS.RECEIVER_TYPE
                                            ]
                                          ))
                                        : new E.TextMessage(
                                            e[
                                              _.MessageConstatnts.KEYS.RECEIVER_ID
                                            ],
                                            e[_.MessageConstatnts.KEYS.TEXT],
                                            e[
                                              _.MessageConstatnts.KEYS.RECEIVER_TYPE
                                            ]
                                          )),
                                    [
                                      4,
                                      B.ExtensionController.hookBeforeMessageSent(
                                        e
                                      ),
                                    ]
                                  );
                                case 1:
                                  return (
                                    (l = C.sent()),
                                    (e = l),
                                    (d = a.validateMessage(e)) instanceof
                                    c.CometChatException
                                      ? (s(d), [2])
                                      : ((e.receiver = e.receiverId),
                                        delete e.receiverId,
                                        (p = e.parentMessageId),
                                        [
                                          2,
                                          u
                                            .makeApiCall(
                                              p
                                                ? "sendMessageInThread"
                                                : "sendMessage",
                                              p ? { parentId: p } : {},
                                              e,
                                              e instanceof h.MediaMessage
                                            )
                                            .then(
                                              function (e) {
                                                return o(
                                                  S,
                                                  void 0,
                                                  void 0,
                                                  function () {
                                                    var n, o;
                                                    return i(
                                                      this,
                                                      function (i) {
                                                        switch (i.label) {
                                                          case 0:
                                                            return (
                                                              (n =
                                                                g.MessageController.trasformJSONMessge(
                                                                  e.data
                                                                )),
                                                              [
                                                                4,
                                                                B.ExtensionController.hookAfterMessageSent(
                                                                  n
                                                                ),
                                                              ]
                                                            );
                                                          case 1:
                                                            return (
                                                              (o = i.sent()),
                                                              t.setLastMessageId(
                                                                (n = o).id
                                                              ),
                                                              r(n),
                                                              [2]
                                                            );
                                                        }
                                                      }
                                                    );
                                                  }
                                                );
                                              },
                                              function (e) {
                                                s(
                                                  new c.CometChatException(
                                                    e.error
                                                  )
                                                );
                                              }
                                            ),
                                        ])
                                  );
                                case 2:
                                  return (
                                    (f = C.sent()),
                                    s(new c.CometChatException(f)),
                                    [3, 3]
                                  );
                                case 3:
                                  return [2];
                              }
                            });
                          });
                        });
                      }),
                      (t.sendDirectMessage = function (e) {
                        try {
                          return (
                            Object.assign(e, {
                              receiverType:
                                _.MessageConstatnts.RECEIVER_TYPE.USER,
                            }),
                            this.sendMessage(e)
                          );
                        } catch (e) {
                          a.Logger.error("CometChat: sendDirectMessage", e);
                        }
                      }),
                      (t.sendGroupMessage = function (e) {
                        try {
                          return (
                            Object.assign(e, {
                              receiverType:
                                _.MessageConstatnts.RECEIVER_TYPE.GROUP,
                            }),
                            this.sendMessage(e)
                          );
                        } catch (e) {
                          a.Logger.error("CometChat: sendGroupMessage", e);
                        }
                      }),
                      (t.sendMediaMessage = function (e) {
                        try {
                          return this.sendMessage(e);
                        } catch (e) {
                          a.Logger.error("CometChat: sendMediaMessage", e);
                        }
                      }),
                      (t.sendCustomMessage = function (e) {
                        try {
                          return this.sendMessage(e);
                        } catch (e) {
                          a.Logger.error("CometChat: sendCustomMessage", e);
                        }
                      }),
                      (t.getLastDeliveredMessageId = function () {
                        return o(this, void 0, void 0, function () {
                          var e;
                          return i(this, function (t) {
                            switch (t.label) {
                              case 0:
                                return (
                                  t.trys.push([0, 2, , 3]),
                                  [
                                    4,
                                    D.MessageListnerMaping.getInstance().get(
                                      "all"
                                    ),
                                  ]
                                );
                              case 1:
                                return [2, t.sent()];
                              case 2:
                                return (
                                  (e = t.sent()),
                                  a.Logger.error(
                                    "CometChat: getLastDeliveredMessageId",
                                    e
                                  ),
                                  [3, 3]
                                );
                              case 3:
                                return [2];
                            }
                          });
                        });
                      }),
                      (t.startTyping = function (e) {
                        try {
                          if (a.isFalsy(e)) return;
                          var n,
                            r = this.RECEIVER_TYPE.USER,
                            o = {};
                          if (e instanceof U.TypingIndicator)
                            (n = e.getReceiverId()),
                              (r = e.getReceiverType()),
                              (o = e.getMetadata());
                          else {
                            if (
                              !e.hasOwnProperty(
                                _.TYPING_NOTIFICATION.RECEIVER_ID
                              )
                            )
                              return;
                            (n = e[_.TYPING_NOTIFICATION.RECEIVER_ID]),
                              e.hasOwnProperty(
                                _.TYPING_NOTIFICATION.RECEIVER_TYPE
                              ) && (r = e[_.TYPING_NOTIFICATION.RECEIVER_TYPE]),
                              e.hasOwnProperty(_.TYPING_NOTIFICATION.META) &&
                                (o = e[_.TYPING_NOTIFICATION.META]);
                          }
                          if (a.isFalsy(n)) return;
                          (r =
                            r == this.RECEIVER_TYPE.USER
                              ? _.XMPP.CONVERSATION.TYPE.CHAT
                              : _.XMPP.CONVERSATION.TYPE.GROUP_CHAT),
                            ((x.TypingNotificationController.getTypingStartedMap(
                              n
                            ) &&
                              a.getCurrentTime() -
                                x.TypingNotificationController.getTypingStartedMap(
                                  n
                                ) >=
                                1e3 *
                                  _.DEFAULT_VALUES
                                    .DEFAULT_MAX_TYPING_INDICATOR_LIMIT) ||
                              null ==
                                x.TypingNotificationController.getTypingStartedMap(
                                  n
                                )) &&
                              a.getAppSettings().then(
                                function (e) {
                                  var i = t.getMode();
                                  if (
                                    a.isFalsy(i) ||
                                    (i &&
                                      i === _.APP_SETTINGS.KEYS.DEFAULT_MODE)
                                  ) {
                                    switch (r) {
                                      case _.XMPP.CONVERSATION.TYPE.CHAT:
                                        ee.sendTypingStarted(
                                          a.format(
                                            _.XMPP.bare_jid_string,
                                            t.getAppId(),
                                            n,
                                            a.getJidHost(e)
                                          ),
                                          r,
                                          o
                                        );
                                        break;
                                      case _.XMPP.CONVERSATION.TYPE.GROUP_CHAT:
                                        ee.sendTypingStarted(
                                          a.format(
                                            _.XMPP.muc_jid_string,
                                            t.getAppId(),
                                            n,
                                            e[
                                              _.APP_SETTINGS.KEYS.GROUP_SERVICE
                                            ],
                                            a.getJidHost(e)
                                          ),
                                          r,
                                          o
                                        );
                                    }
                                    return (
                                      x.TypingNotificationController.addTypingStarted(
                                        n
                                      ),
                                      void x.TypingNotificationController.removeTypingEnded(
                                        n
                                      )
                                    );
                                  }
                                },
                                function (e) {}
                              );
                        } catch (e) {
                          a.Logger.error("CometChat: startTyping", e);
                        }
                      }),
                      (t.endTyping = function (e) {
                        try {
                          if (!a.isFalsy(e)) {
                            var n,
                              r = this.RECEIVER_TYPE.USER,
                              o = {};
                            if (e instanceof U.TypingIndicator)
                              (n = e.getReceiverId()),
                                (r = e.getReceiverType()),
                                (o = e.getMetadata());
                            else {
                              if (
                                !e.hasOwnProperty(
                                  _.TYPING_NOTIFICATION.RECEIVER_ID
                                )
                              )
                                return;
                              (n = e[_.TYPING_NOTIFICATION.RECEIVER_ID]),
                                e.hasOwnProperty(
                                  _.TYPING_NOTIFICATION.RECEIVER_TYPE
                                ) &&
                                  (r = e[_.TYPING_NOTIFICATION.RECEIVER_TYPE]),
                                (r =
                                  r == this.RECEIVER_TYPE.USER
                                    ? _.XMPP.CONVERSATION.TYPE.CHAT
                                    : _.XMPP.CONVERSATION.TYPE.GROUP_CHAT),
                                e.hasOwnProperty(_.TYPING_NOTIFICATION.META) &&
                                  (o = e[_.TYPING_NOTIFICATION.META]);
                            }
                            if (a.isFalsy(n)) return;
                            (r =
                              r == this.RECEIVER_TYPE.USER
                                ? _.XMPP.CONVERSATION.TYPE.CHAT
                                : _.XMPP.CONVERSATION.TYPE.GROUP_CHAT),
                              x.TypingNotificationController.getTypingStartedMap(
                                n
                              ) &&
                                a.getCurrentTime() -
                                  x.TypingNotificationController.getTypingStartedMap(
                                    n
                                  ) <
                                  1e3 *
                                    _.DEFAULT_VALUES
                                      .DEFAULT_MAX_TYPING_INDICATOR_LIMIT &&
                                ((x.TypingNotificationController.getTypingEndedMap(
                                  n
                                ) &&
                                  a.getCurrentTime() -
                                    x.TypingNotificationController.getTypingEndedMap(
                                      n
                                    ) >=
                                    1e3 *
                                      _.DEFAULT_VALUES
                                        .DEFAULT_MAX_TYPING_INDICATOR_LIMIT) ||
                                  null ==
                                    x.TypingNotificationController.getTypingEndedMap(
                                      n
                                    )) &&
                                a.getAppSettings().then(
                                  function (e) {
                                    var i = t.getMode();
                                    if (
                                      a.isFalsy(i) ||
                                      (i &&
                                        i === _.APP_SETTINGS.KEYS.DEFAULT_MODE)
                                    ) {
                                      switch (r) {
                                        case _.XMPP.CONVERSATION.TYPE.CHAT:
                                          ee.sendTypingPaused(
                                            a.format(
                                              _.XMPP.bare_jid_string,
                                              t.getAppId(),
                                              n,
                                              a.getJidHost(e)
                                            ),
                                            r,
                                            o
                                          );
                                          break;
                                        case _.XMPP.CONVERSATION.TYPE
                                          .GROUP_CHAT:
                                          ee.sendTypingPaused(
                                            a.format(
                                              _.XMPP.muc_jid_string,
                                              t.getAppId(),
                                              n,
                                              e[
                                                _.APP_SETTINGS.KEYS
                                                  .GROUP_SERVICE
                                              ],
                                              a.getJidHost(e)
                                            ),
                                            r,
                                            o
                                          );
                                      }
                                      return (
                                        x.TypingNotificationController.addTypingEnded(
                                          n
                                        ),
                                        void x.TypingNotificationController.removeTypingStarted(
                                          n
                                        )
                                      );
                                    }
                                  },
                                  function (e) {}
                                );
                          }
                        } catch (e) {
                          a.Logger.error("CometChat: endTyping", e);
                        }
                      }),
                      (t.markAsRead = function (e, t, n) {
                        try {
                          d.XMPPConnectionHelper.getInstance().markAsRead(
                            t,
                            n,
                            e
                          );
                        } catch (e) {
                          a.Logger.error("CometChat: markAsRead", e);
                        }
                      }),
                      (t.markAsDelivered = function (e, t, n) {
                        try {
                          d.XMPPConnectionHelper.getInstance().markAsDelivered(
                            t,
                            n,
                            e
                          );
                        } catch (e) {
                          a.Logger.error("CometChat: markAsDelivered", e);
                        }
                      }),
                      (t.getMessageDetails = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            a.isFalsy(e)
                              ? n(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                )
                              : u
                                  .makeApiCall("getMessageDetails", {
                                    messageId: e,
                                  })
                                  .then(
                                    function (e) {
                                      t(
                                        g.MessageController.trasformJSONMessge(
                                          e.data
                                        )
                                      );
                                    },
                                    function (e) {
                                      a.Logger.error(
                                        "CometChat:GetMessageDetails:",
                                        e
                                      ),
                                        n(new c.CometChatException(e.error));
                                    }
                                  );
                          } catch (e) {
                            n(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getMessageReceipts = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateMsgId(e);
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            a.isFalsy(e)
                              ? n(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                )
                              : u
                                  .makeApiCall("getMessageDetails", {
                                    messageId: e,
                                  })
                                  .then(
                                    function (e) {
                                      g.MessageController.getReceiptsFromJSON(
                                        e.data
                                      ).then(
                                        function (e) {
                                          t(e);
                                        },
                                        function (e) {
                                          n(new c.CometChatException(e));
                                        }
                                      );
                                    },
                                    function (e) {
                                      a.Logger.error(
                                        "CometChat:GetMessageDetails:",
                                        e
                                      ),
                                        n(new c.CometChatException(e.error));
                                    }
                                  );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.getUnreadMessageCount = function (e) {
                        void 0 === e && (e = !1);
                        var t = 0;
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateHideMessagesFromBlockedUsers(e);
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            e && (t = 1),
                              u
                                .makeApiCall(
                                  "getMessages",
                                  {},
                                  {
                                    unread: 1,
                                    count: 1,
                                    hideMessagesFromBlockedUsers: t,
                                  }
                                )
                                .then(
                                  function (e) {
                                    var t = {},
                                      r = {};
                                    e.data.map(function (e) {
                                      e[
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .UNREAD_UNDELIVERED_KEYS.ENTITY_TYPE
                                      ] ==
                                      _.MessageConstatnts.RECEIVER_TYPE.GROUP
                                        ? (r[
                                            e[
                                              _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.ENTITY_Id
                                            ]
                                          ] =
                                            e[
                                              _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.COUNT
                                            ])
                                        : (t[
                                            e[
                                              _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.ENTITY_Id
                                            ]
                                          ] =
                                            e[
                                              _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.COUNT
                                            ]);
                                    }),
                                      n({ users: t, groups: r });
                                  },
                                  function (e) {
                                    r(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.getUnreadMessageCountForAllUsers = function (e) {
                        void 0 === e && (e = !1);
                        var t = 0;
                        return new Promise(function (n, o) {
                          try {
                            var i = a.validateHideMessagesFromBlockedUsers(e);
                            if (i instanceof c.CometChatException)
                              return void o(i);
                            e && (t = 1),
                              u
                                .makeApiCall(
                                  "getMessages",
                                  {},
                                  {
                                    hideMessagesFromBlockedUsers: t,
                                    receiverType:
                                      _.MessageConstatnts.RECEIVER_TYPE.USER,
                                    unread: 1,
                                    count: 1,
                                  }
                                )
                                .then(
                                  function (e) {
                                    var t = {};
                                    e.data.map(function (e) {
                                      t[
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.ENTITY_Id
                                        ]
                                      ] =
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.COUNT
                                        ];
                                    }),
                                      n(r({}, t));
                                  },
                                  function (e) {
                                    o(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (i) {
                            o(new c.CometChatException(i));
                          }
                        });
                      }),
                      (t.getUnreadMessageCountForAllGroups = function (e) {
                        void 0 === e && (e = !1);
                        var t = 0;
                        return new Promise(function (n, o) {
                          try {
                            var i = a.validateHideMessagesFromBlockedUsers(e);
                            if (i instanceof c.CometChatException)
                              return void o(i);
                            e && (t = 1),
                              u
                                .makeApiCall(
                                  "getMessages",
                                  {},
                                  {
                                    hideMessagesFromBlockedUsers: t,
                                    receiverType:
                                      _.MessageConstatnts.RECEIVER_TYPE.GROUP,
                                    unread: 1,
                                    count: 1,
                                  }
                                )
                                .then(
                                  function (e) {
                                    var t = {};
                                    e.data.map(function (e) {
                                      e[
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .UNREAD_UNDELIVERED_KEYS.ENTITY_TYPE
                                      ] ==
                                        _.MessageConstatnts.RECEIVER_TYPE
                                          .GROUP &&
                                        (t[
                                          e[
                                            _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.ENTITY_Id
                                          ]
                                        ] =
                                          e[
                                            _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.COUNT
                                          ]);
                                    }),
                                      n(r({}, t));
                                  },
                                  function (e) {
                                    o(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (i) {
                            o(new c.CometChatException(i));
                          }
                        });
                      }),
                      (t.getUnreadMessageCountForUser = function (e, t) {
                        void 0 === t && (t = !1);
                        var n = 0;
                        return new Promise(function (o, i) {
                          try {
                            var s = a.validateId(e, "user");
                            if (s instanceof c.CometChatException)
                              return void i(s);
                            var l = a.validateHideMessagesFromBlockedUsers(t);
                            if (l instanceof c.CometChatException)
                              return void i(l);
                            t && (n = 1),
                              u
                                .makeApiCall(
                                  "getUserMessages",
                                  { listId: e },
                                  {
                                    hideMessagesFromBlockedUsers: n,
                                    unread: 1,
                                    count: 1,
                                    uid: e,
                                  }
                                )
                                .then(
                                  function (e) {
                                    var t = {};
                                    e.data.map(function (e) {
                                      t[
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.ENTITY_Id
                                        ]
                                      ] =
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.COUNT
                                        ];
                                    }),
                                      o(r({}, t));
                                  },
                                  function (e) {
                                    i(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (s) {
                            i(new c.CometChatException(s));
                          }
                        });
                      }),
                      (t.getUnreadMessageCountForGroup = function (e, t) {
                        void 0 === t && (t = !1);
                        var n = 0;
                        return new Promise(function (o, i) {
                          try {
                            var s = a.validateId(e, "group");
                            if (s instanceof c.CometChatException)
                              return void i(s);
                            var l = a.validateHideMessagesFromBlockedUsers(t);
                            if (l instanceof c.CometChatException)
                              return void i(l);
                            t && (n = 1),
                              u
                                .makeApiCall(
                                  "getGroupMessages",
                                  { listId: e },
                                  {
                                    hideMessagesFromBlockedUsers: n,
                                    unread: 1,
                                    count: 1,
                                    guid: e,
                                  }
                                )
                                .then(
                                  function (e) {
                                    var t = {};
                                    e.data.map(function (e) {
                                      e[
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .UNREAD_UNDELIVERED_KEYS.ENTITY_TYPE
                                      ] ==
                                        _.MessageConstatnts.RECEIVER_TYPE
                                          .GROUP &&
                                        (t[
                                          e[
                                            _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.ENTITY_Id
                                          ]
                                        ] =
                                          e[
                                            _.ResponseConstants.RESPONSE_KEYS.UNREAD_UNDELIVERED_KEYS.COUNT
                                          ]);
                                    }),
                                      o(r({}, t));
                                  },
                                  function (e) {
                                    i(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (s) {
                            i(new c.CometChatException(s));
                          }
                        });
                      }),
                      (t.editMessage = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateMsgId(e.getId());
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            u.makeApiCall(
                              "updateMessage",
                              { messageId: e.getId() },
                              e
                            ).then(
                              function (e) {
                                t(
                                  g.MessageController.trasformJSONMessge(
                                    e.data
                                  ).getActionOn()
                                );
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.deleteMessage = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateMsgId(e);
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            u.makeApiCall(
                              "deleteMessage",
                              { messageId: e },
                              { id: e }
                            ).then(
                              function (e) {
                                t(
                                  g.MessageController.trasformJSONMessge(
                                    e.data
                                  ).getActionOn()
                                );
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.getPreviousMessagesByTimestamp = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            a.isFalsy(t)
                              ? r(
                                  new c.CometChatException(
                                    JSON.parse(
                                      a.format(
                                        JSON.stringify(
                                          _.PARAMETER_ERROR.PARAMETER_REQUIRED
                                        ),
                                        "TIMESTAMP",
                                        "TIMESTAMP",
                                        "timestamp"
                                      )
                                    )
                                  )
                                )
                              : g.MessageController.getAllMessage(
                                  e,
                                  t,
                                  _.MessageConstatnts.PAGINATION.CURSOR_FILEDS
                                    .SENT_AT,
                                  _.MessageConstatnts.PAGINATION.AFFIX.PREPEND
                                ).then(
                                  function (e) {
                                    return n(e);
                                  },
                                  function (e) {
                                    return r(new c.CometChatException(e));
                                  }
                                );
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getPreviousMessagesById = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            a.isFalsy(t)
                              ? r(
                                  new c.CometChatException(
                                    JSON.parse(
                                      a.format(
                                        JSON.stringify(
                                          _.PARAMETER_ERROR.PARAMETER_REQUIRED
                                        ),
                                        "MESSAGE_ID",
                                        "MESSAGE_ID",
                                        "messageId"
                                      )
                                    )
                                  )
                                )
                              : g.MessageController.getAllMessage(
                                  e,
                                  t,
                                  _.MessageConstatnts.PAGINATION.CURSOR_FILEDS
                                    .ID,
                                  _.MessageConstatnts.PAGINATION.AFFIX.PREPEND
                                ).then(
                                  function (e) {
                                    return n(e);
                                  },
                                  function (e) {
                                    return r(new c.CometChatException(e));
                                  }
                                );
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getNextMessagesByTimestamp = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            a.isFalsy(t)
                              ? r(
                                  new c.CometChatException(
                                    JSON.parse(
                                      a.format(
                                        JSON.stringify(
                                          _.PARAMETER_ERROR.PARAMETER_REQUIRED
                                        ),
                                        "TIMESTAMP",
                                        "TIMESTAMP",
                                        "timestamp"
                                      )
                                    )
                                  )
                                )
                              : g.MessageController.getAllMessage(
                                  e,
                                  t,
                                  _.MessageConstatnts.PAGINATION.CURSOR_FILEDS
                                    .SENT_AT,
                                  _.MessageConstatnts.PAGINATION.AFFIX.APPEND
                                ).then(
                                  function (e) {
                                    return n(e);
                                  },
                                  function (e) {
                                    return r(new c.CometChatException(e));
                                  }
                                );
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getNextMessagesById = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            a.isFalsy(t)
                              ? r(
                                  new c.CometChatException(
                                    JSON.parse(
                                      a.format(
                                        JSON.stringify(
                                          _.PARAMETER_ERROR.PARAMETER_REQUIRED
                                        ),
                                        "MESSAGE_ID",
                                        "MESSAGE_ID",
                                        "messageId"
                                      )
                                    )
                                  )
                                )
                              : g.MessageController.getAllMessage(
                                  e,
                                  t,
                                  _.MessageConstatnts.PAGINATION.CURSOR_FILEDS
                                    .ID,
                                  _.MessageConstatnts.PAGINATION.AFFIX.APPEND
                                ).then(
                                  function (e) {
                                    return n(e);
                                  },
                                  function (e) {
                                    return r(new c.CometChatException(e));
                                  }
                                );
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.createUser = function (e, n) {
                        return new Promise(function (r, o) {
                          try {
                            if (a.isFalsy(n))
                              return void o(
                                new c.CometChatException(
                                  JSON.parse(
                                    a.format(
                                      JSON.stringify(_.GENERAL_ERROR.INVALID),
                                      "AUTH_KEY",
                                      "AUTH_KEY",
                                      "AUTH_KEY",
                                      "AUTH_KEY"
                                    )
                                  )
                                )
                              );
                            t.apiKey = n;
                            var i = a.validateCreateUser(e);
                            if (i instanceof c.CometChatException)
                              return void o(i);
                            if (!(e instanceof l.User)) {
                              var s = void 0;
                              if (!e.hasOwnProperty(_.UserConstants.UID))
                                return void o(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                );
                              if (!e.hasOwnProperty(_.UserConstants.NAME))
                                return void o(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                );
                              (s = new l.User(
                                e[_.UserConstants.UID],
                                e[_.UserConstants.NAME]
                              )),
                                e.hasOwnProperty(_.UserConstants.AVATAR) &&
                                  s.setAvatar(e[_.UserConstants.AVATAR]),
                                e.hasOwnProperty(_.UserConstants.ROLE) &&
                                  s.setRole(e[_.UserConstants.ROLE]),
                                e.hasOwnProperty(_.UserConstants.META_DATA) &&
                                  s.setMetadata(e[_.UserConstants.META_DATA]),
                                e.hasOwnProperty(_.UserConstants.LINK) &&
                                  s.setLink(e[_.UserConstants.LINK]),
                                e.hasOwnProperty(
                                  _.UserConstants.STATUS_MESSAGE
                                ) &&
                                  s.setStatusMessage(
                                    e[_.UserConstants.STATUS_MESSAGE]
                                  ),
                                e.hasOwnProperty(_.UserConstants.TAGS) &&
                                  s.setTags(e[_.UserConstants.TAGS]),
                                (e = s);
                            }
                            u.makeApiCall("createUser", {}, e).then(
                              function (e) {
                                var t = C.UsersController.trasformJSONUser(
                                  e.data
                                );
                                r(t);
                              },
                              function (e) {
                                o(new c.CometChatException(e.error));
                              }
                            );
                          } catch (i) {
                            o(new c.CometChatException(i));
                          }
                        });
                      }),
                      (t.updateUser = function (e, n) {
                        var r = this;
                        return new Promise(function (o, i) {
                          try {
                            if (a.isFalsy(n))
                              return void i(
                                new c.CometChatException(
                                  JSON.parse(
                                    a.format(
                                      JSON.stringify(_.GENERAL_ERROR.INVALID),
                                      "AUTH_KEY",
                                      "AUTH_KEY",
                                      "AUTH_KEY",
                                      "AUTH_KEY"
                                    )
                                  )
                                )
                              );
                            t.apiKey = n;
                            var s = a.validateUpdateUser(e);
                            if (s instanceof c.CometChatException)
                              return void i(s);
                            if (!(e instanceof l.User)) {
                              var d = void 0;
                              if (!e.hasOwnProperty(_.UserConstants.UID))
                                return void i(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                );
                              (d = new l.User(e[_.UserConstants.UID])),
                                e.hasOwnProperty(_.UserConstants.NAME) &&
                                  d.setName(e[_.UserConstants.NAME]),
                                e.hasOwnProperty(_.UserConstants.AVATAR) &&
                                  d.setAvatar(e[_.UserConstants.AVATAR]),
                                e.hasOwnProperty(_.UserConstants.ROLE) &&
                                  d.setRole(e[_.UserConstants.ROLE]),
                                e.hasOwnProperty(_.UserConstants.META_DATA) &&
                                  d.setMetadata(e[_.UserConstants.META_DATA]),
                                e.hasOwnProperty(_.UserConstants.LINK) &&
                                  d.setLink(e[_.UserConstants.LINK]),
                                e.hasOwnProperty(
                                  _.UserConstants.STATUS_MESSAGE
                                ) &&
                                  d.setStatusMessage(
                                    e[_.UserConstants.STATUS_MESSAGE]
                                  ),
                                e.hasOwnProperty(_.UserConstants.TAGS) &&
                                  d.setTags(e[_.UserConstants.TAGS]),
                                (e = d);
                            }
                            var p = e.uid;
                            u.makeApiCall("updateUser", { uid: p }, e).then(
                              function (e) {
                                if (
                                  r.user &&
                                  p.toLocaleLowerCase() ===
                                    r.user.getUid().toLocaleLowerCase()
                                )
                                  f.LocalStorage.getInstance()
                                    .get("user")
                                    .then(function (n) {
                                      if (n) {
                                        var i =
                                            C.UsersController.trasformJSONUser(
                                              e.data
                                            ),
                                          s = e.data;
                                        (s.wsChannel = n.wsChannel),
                                          (s.authToken = t.authToken),
                                          (s.status =
                                            _.PresenceConstatnts.STATUS.ONLINE),
                                          n.jwt && (s.jwt = n.jwt),
                                          (t.user = new l.Me(s)),
                                          r.localStorage.set("user", t.user),
                                          o(i);
                                      }
                                    });
                                else {
                                  var n = C.UsersController.trasformJSONUser(
                                    e.data
                                  );
                                  o(n);
                                }
                              },
                              function (e) {
                                i(new c.CometChatException(e.error));
                              }
                            );
                          } catch (s) {
                            i(new c.CometChatException(s));
                          }
                        });
                      }),
                      (t.updateCurrentUserDetails = function (e) {
                        var n = this;
                        return new Promise(function (r, o) {
                          try {
                            e.uid = n.user.uid;
                            var i = a.validateUpdateUser(e);
                            if (i instanceof c.CometChatException)
                              return void o(i);
                            if (!(e instanceof l.User)) {
                              var s = void 0;
                              e.hasOwnProperty(_.UserConstants.UID) &&
                                (s = new l.User(e[_.UserConstants.UID])),
                                e.hasOwnProperty(_.UserConstants.NAME) &&
                                  s.setName(e[_.UserConstants.NAME]),
                                e.hasOwnProperty(_.UserConstants.AVATAR) &&
                                  s.setAvatar(e[_.UserConstants.AVATAR]),
                                e.hasOwnProperty(_.UserConstants.ROLE) &&
                                  s.setRole(e[_.UserConstants.ROLE]),
                                e.hasOwnProperty(_.UserConstants.META_DATA) &&
                                  s.setMetadata(e[_.UserConstants.META_DATA]),
                                e.hasOwnProperty(_.UserConstants.LINK) &&
                                  s.setLink(e[_.UserConstants.LINK]),
                                e.hasOwnProperty(
                                  _.UserConstants.STATUS_MESSAGE
                                ) &&
                                  s.setStatusMessage(
                                    e[_.UserConstants.STATUS_MESSAGE]
                                  ),
                                e.hasOwnProperty(_.UserConstants.TAGS) &&
                                  s.setTags(e[_.UserConstants.TAGS]),
                                (e = s);
                            }
                            u.makeApiCall("updateMyDetails", {}, e).then(
                              function (e) {
                                var n = C.UsersController.trasformJSONUser(
                                    e.data
                                  ),
                                  o = (t.user = new l.Me(e.data));
                                o.setStatus(_.PresenceConstatnts.STATUS.ONLINE),
                                  t.localStorage.set("user", o),
                                  r(n);
                              },
                              function (e) {
                                o(new c.CometChatException(e.error));
                              }
                            );
                          } catch (i) {
                            o(new c.CometChatException(i));
                          }
                        });
                      }),
                      (t.getUser = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            "object" == typeof e &&
                              e.hasOwnProperty("uid") &&
                              (e = e.uid);
                            var r = a.validateId(e, "user");
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            u.makeApiCall("user", { uid: e })
                              .then(function (e) {
                                var n = C.UsersController.trasformJSONUser(
                                  e.data
                                );
                                t(n);
                              })
                              .catch(function (e) {
                                n(new c.CometChatException(e.error));
                              });
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.getLoggedInUser = function () {
                        var e = this;
                        return new Promise(function (n, r) {
                          try {
                            t.localStorage.get("user").then(function (o) {
                              if (o) n((t.user = new l.Me(o)));
                              else {
                                var i = "",
                                  s = "",
                                  d = _.APPINFO.platform,
                                  p = _.APPINFO.sdkVersion,
                                  h = _.APPINFO.apiVersion;
                                t.keyStore.get("deviceId").then(function (o) {
                                  if (
                                    ((s = o),
                                    navigator && (i = navigator.userAgent),
                                    null == s)
                                  ) {
                                    var E = Z(),
                                      g = new Date().getTime();
                                    (s = e.appId + "_" + E + "_" + g),
                                      t.keyStore.set("deviceId", s);
                                  }
                                  var S = {
                                    version: p,
                                    apiVersion: h,
                                    userAgent: i,
                                  };
                                  a.isFalsy(e.platform) ||
                                    (S.platform = e.platform),
                                    a.isFalsy(e.language) ||
                                      (S.language = e.language),
                                    a.isFalsy(e.resource) ||
                                      (S.resource = e.resource);
                                  var C = {
                                    platform: d,
                                    deviceId: s,
                                    appInfo: S,
                                  };
                                  u.makeApiCall("updateMyDetails", {}, C, !1)
                                    .then(
                                      function (e) {
                                        e.data.jwt && (t.jwt = e.data.jwt);
                                        var r = e.data.settings;
                                        r &&
                                          (f.LocalStorage.getInstance().set(
                                            "app_settings",
                                            r
                                          ),
                                          r[_.APP_SETTINGS.KEYS.MODE] &&
                                            t.setMode(
                                              r[_.APP_SETTINGS.KEYS.MODE]
                                            ),
                                          r[
                                            _.APP_SETTINGS.KEYS.SETTINGS_HASH
                                          ] &&
                                            (t.settingsHash =
                                              r[
                                                _.APP_SETTINGS.KEYS.SETTINGS_HASH
                                              ]),
                                          r[
                                            _.APP_SETTINGS.KEYS
                                              .SETTINGS_HASH_RECEIVED_AT
                                          ] &&
                                            (t.settingsHashReceivedAt =
                                              r[
                                                _.APP_SETTINGS.KEYS.SETTINGS_HASH_RECEIVED_AT
                                              ]),
                                          r[
                                            _.APP_SETTINGS.KEYS.ANALYTICS_HOST
                                          ] &&
                                            (t.analyticsHost =
                                              r[
                                                _.APP_SETTINGS.KEYS.ANALYTICS_HOST
                                              ]),
                                          r[
                                            _.APP_SETTINGS.KEYS
                                              .ANALYTICS_VERSION
                                          ] &&
                                            (t.analyticsVersion =
                                              r[
                                                _.APP_SETTINGS.KEYS.ANALYTICS_VERSION
                                              ]),
                                          (t.isAnalyticsDisabled =
                                            !!r[
                                              _.APP_SETTINGS.KEYS
                                                .ANALYTICS_PING_DISABLED
                                            ]),
                                          r.hasOwnProperty(
                                            _.APP_SETTINGS.KEYS
                                              .DENY_FALLBACK_TO_POLLING
                                          ) && (t.shouldFallBackToPolling = !1),
                                          (t.pollingEnabled =
                                            r[
                                              _.APP_SETTINGS.KEYS.POLLING_ENABLED
                                            ]),
                                          t.isPollingEnabled() &&
                                            r[
                                              _.APP_SETTINGS.KEYS
                                                .POLLING_INTERVAL
                                            ] &&
                                            (t.pollingInterval =
                                              r[
                                                _.APP_SETTINGS.KEYS.POLLING_INTERVAL
                                              ])),
                                          n(new l.Me(e.data));
                                      },
                                      function (e) {
                                        r(new c.CometChatException(e.error));
                                      }
                                    )
                                    .catch(function (e) {
                                      r(new c.CometChatException(e));
                                    });
                                });
                              }
                            });
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getLoggedinUser = function () {
                        return new Promise(function (e, n) {
                          try {
                            t.localStorage.get("user").then(
                              function (t) {
                                e(t ? new l.User(t) : null);
                              },
                              function (t) {
                                e(null);
                              }
                            );
                          } catch (e) {
                            n(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.blockUsers = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateArray(e, "blockUsers");
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            a.isFalsy(e)
                              ? n(
                                  new c.CometChatException(
                                    R.USERS_REQUEST_ERRORS.EMPTY_USERS_LIST
                                  )
                                )
                              : u
                                  .makeApiCall(
                                    "blockUsers",
                                    {},
                                    { blockedUids: e }
                                  )
                                  .then(
                                    function (e) {
                                      t(e.data);
                                    },
                                    function (e) {
                                      n(new c.CometChatException(e.error));
                                    }
                                  );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.unblockUsers = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateArray(e, "unblockUsers");
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            a.isFalsy(e)
                              ? n(
                                  new c.CometChatException(
                                    R.USERS_REQUEST_ERRORS.EMPTY_USERS_LIST
                                  )
                                )
                              : u
                                  .makeApiCall(
                                    "unblockUsers",
                                    {},
                                    { blockedUids: e }
                                  )
                                  .then(
                                    function (e) {
                                      t(e.data);
                                    },
                                    function (e) {
                                      n(new c.CometChatException(e.error));
                                    }
                                  );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.getConversation = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateConversationType(t);
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            var i = a.validateId(e, t);
                            if (i instanceof c.CometChatException)
                              return void r(i);
                            (t = t.toLowerCase()), (e = e.toLowerCase());
                            var s = {},
                              l = "";
                            t === _.MessageConstatnts.RECEIVER_TYPE.GROUP
                              ? ((l = "getGroupConversation"), (s.guid = e))
                              : ((l = "getUserConversation"), (s.uid = e)),
                              u.makeApiCall(l, s).then(
                                function (o) {
                                  if (o.data) {
                                    var i = o.data;
                                    n(
                                      J.ConversationController.trasformJSONConversation(
                                        i.conversationId,
                                        i.conversationType,
                                        i.lastMessage,
                                        i.conversationWith,
                                        i.unreadMessageCount
                                      )
                                    );
                                  } else
                                    r(
                                      new c.CometChatException(
                                        JSON.parse(
                                          a.format(
                                            JSON.stringify(
                                              _.ConversationErrors
                                                .CONVERSATION_NOT_FOUND
                                            ),
                                            t,
                                            e
                                          )
                                        )
                                      )
                                    );
                                },
                                function (e) {
                                  r(new c.CometChatException(e.error));
                                }
                              );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.deleteConversation = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateConversationType(t);
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            var i = a.validateId(e, t);
                            if (i instanceof c.CometChatException)
                              return void r(i);
                            var s = {},
                              l = "";
                            (t = t.toLowerCase()),
                              (e = e.toLowerCase()),
                              t === _.MessageConstatnts.RECEIVER_TYPE.GROUP
                                ? ((l = "deleteGroupConversation"),
                                  (s.guid = e))
                                : ((l = "deleteUserConversation"), (s.uid = e)),
                              u.makeApiCall(l, s).then(
                                function (e) {
                                  n("Conversation deleted successfully.");
                                },
                                function (e) {
                                  r(new c.CometChatException(e.error));
                                }
                              );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.createGroup = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateCreateGroup(e);
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            if (!(e instanceof m.Group)) {
                              var o = void 0;
                              if (!e.hasOwnProperty(_.GroupConstants.KEYS.GUID))
                                return void n(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                );
                              if (!e.hasOwnProperty(_.GroupConstants.KEYS.NAME))
                                return void n(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                );
                              if (
                                ((o = new m.Group(
                                  e[_.GroupConstants.KEYS.GUID],
                                  e[_.GroupConstants.KEYS.NAME],
                                  ""
                                )),
                                e.hasOwnProperty(_.GroupConstants.KEYS.TYPE))
                              )
                                if (
                                  e[
                                    _.GroupConstants.KEYS.TYPE
                                  ].toLocaleLowerCase() == _.GroupType.Password
                                ) {
                                  if (
                                    !e.hasOwnProperty(
                                      _.GroupConstants.KEYS.PASSWORD
                                    )
                                  )
                                    return void n(
                                      new c.CometChatException(
                                        R.GROUP_CREATION_ERRORS.EMPTY_PASSWORD
                                      )
                                    );
                                  o.setType(_.GROUP_TYPE.PASSWORD),
                                    o.setPassword(
                                      e[_.GroupConstants.KEYS.PASSWORD]
                                    );
                                } else o.setType(e[_.GroupConstants.KEYS.TYPE]);
                              else o.setType(_.GROUP_TYPE.PUBLIC);
                              e.hasOwnProperty(_.GroupConstants.KEYS.ICON) &&
                                o.setIcon(e[_.GroupConstants.KEYS.ICON]),
                                e.hasOwnProperty(
                                  _.GroupConstants.KEYS.DESCRIPTION
                                ) &&
                                  o.setDescription(
                                    e[_.GroupConstants.KEYS.DESCRIPTION]
                                  ),
                                e.hasOwnProperty(_.GroupConstants.KEYS.TAGS) &&
                                  o.setTags(e[_.GroupConstants.KEYS.TAGS]),
                                (e = o);
                            }
                            u.makeApiCall("createGroup", {}, e).then(
                              function (n) {
                                ee.joinMuc(e),
                                  T.GroupsController.trasformJSONGroup(
                                    n.data
                                  ).setHasJoined(!0),
                                  t(
                                    T.GroupsController.trasformJSONGroup(n.data)
                                  );
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.getGroup = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            "object" == typeof e &&
                              e.hasOwnProperty("guid") &&
                              (e = e.guid);
                            var r = a.validateId(e, "group");
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            u.makeApiCall("getGroup", { guid: e }).then(
                              function (e) {
                                t(T.GroupsController.trasformJSONGroup(e.data));
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.getJoinedGroups = function () {
                        return new Promise(function (e, t) {
                          try {
                            ee.getRooms().then(
                              function (t) {
                                e(t);
                              },
                              function (e) {
                                t(e);
                              }
                            );
                          } catch (e) {
                            t(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.joinGroup = function (e, t, n) {
                        return (
                          void 0 === t && (t = _.GroupType.Public),
                          void 0 === n && (n = ""),
                          new Promise(function (r, o) {
                            try {
                              var i,
                                s = a.validateJoinGroup(e, t, n);
                              if (s instanceof c.CometChatException)
                                return void o(s);
                              "object" == typeof e &&
                                (e.hasOwnProperty(_.GroupConstants.KEYS.GUID)
                                  ? (e.hasOwnProperty(
                                      _.GroupConstants.KEYS.TYPE
                                    ) &&
                                      ((t = e[_.GroupConstants.KEYS.TYPE]),
                                      e[
                                        _.GroupConstants.KEYS.TYPE
                                      ].toLocaleLowerCase() ===
                                        _.GroupType.Password &&
                                        e.hasOwnProperty(
                                          _.GroupConstants.KEYS.PASSWORD
                                        ) &&
                                        (n =
                                          e[_.GroupConstants.KEYS.PASSWORD])),
                                    (e = e[_.GroupConstants.KEYS.GUID]))
                                  : o(
                                      new c.CometChatException(
                                        R.ERRORS.PARAMETER_MISSING
                                      )
                                    )),
                                (i = a.isFalsy(n)
                                  ? new m.Group(e, "name", t)
                                  : new m.Group(e, "name", t, n)),
                                u.makeApiCall("joinGroup", i, i).then(
                                  function (e) {
                                    ee.joinMuc(i);
                                    var t =
                                      T.GroupsController.trasformJSONGroup(
                                        e.data[
                                          _.ResponseConstants.RESPONSE_KEYS
                                            .KEY_DATA
                                        ][
                                          _.ActionConstatnts.ACTION_KEYS
                                            .ENTITIES
                                        ][
                                          _.ActionConstatnts.ACTION_SUBJECTS
                                            .ACTION_FOR
                                        ][_.ActionConstatnts.ACTION_KEYS.ENTITY]
                                      );
                                    t.setHasJoined(!0), r(t);
                                  },
                                  function (e) {
                                    "ERR_ALREADY_JOINED" === e.error.code &&
                                      ee.joinMuc(i),
                                      o(new c.CometChatException(e.error));
                                  }
                                );
                            } catch (s) {
                              o(new c.CometChatException(s));
                            }
                          })
                        );
                      }),
                      (t.updateGroup = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateUpdateGroup(e);
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            if (!(e instanceof m.Group)) {
                              var o = void 0;
                              if (!e.hasOwnProperty(_.GroupConstants.KEYS.GUID))
                                return void n(
                                  new c.CometChatException(
                                    R.ERRORS.PARAMETER_MISSING
                                  )
                                );
                              (o = new m.Group(
                                _.GroupConstants.KEYS.GUID,
                                "",
                                ""
                              )),
                                e.hasOwnProperty(_.GroupConstants.KEYS.TYPE)
                                  ? o.setType(e[_.GroupConstants.KEYS.TYPE])
                                  : ((e[_.GroupConstants.KEYS.TYPE] =
                                      _.GROUP_TYPE.PUBLIC),
                                    o.setType[_.GROUP_TYPE.PUBLIC]),
                                e.hasOwnProperty(_.GroupConstants.KEYS.NAME) &&
                                  o.setName(e[_.GroupConstants.KEYS.NAME]),
                                e.hasOwnProperty(_.GroupConstants.KEYS.ICON) &&
                                  o.setIcon(e[_.GroupConstants.KEYS.ICON]),
                                e.hasOwnProperty(
                                  _.GroupConstants.KEYS.DESCRIPTION
                                ) &&
                                  o.setDescription(
                                    e[_.GroupConstants.KEYS.DESCRIPTION]
                                  ),
                                e.hasOwnProperty(_.GroupConstants.KEYS.TAGS) &&
                                  o.setTags(e[_.GroupConstants.KEYS.TAGS]),
                                (e = o);
                            }
                            u.makeApiCall("updateGroup", e, e).then(
                              function (e) {
                                t(T.GroupsController.trasformJSONGroup(e.data));
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.deleteGroup = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateId(e, "group");
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            u.makeApiCall("deleteGroup", { guid: e }).then(
                              function (e) {
                                t(!0);
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.leaveGroup = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = a.validateId(e, "group");
                            if (r instanceof c.CometChatException)
                              return void n(r);
                            u.makeApiCall("leaveGroup", { guid: e }).then(
                              function (n) {
                                ee.leaveMuc(e), t(!0);
                              },
                              function (e) {
                                n(new c.CometChatException(e.error));
                              }
                            );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.kickGroupMember = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateId(e, "group");
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            var i = a.validateId(t, "user");
                            if (i instanceof c.CometChatException)
                              return void r(i);
                            u.makeApiCall("kickGroupMembers", {
                              guid: e,
                              uid: t,
                            }).then(
                              function (e) {
                                n(!0);
                              },
                              function (e) {
                                r(new c.CometChatException(e.error));
                              }
                            );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.updateGroupMemberScope = function (e, t, n) {
                        return new Promise(function (r, o) {
                          try {
                            var i = a.validateId(e, "group");
                            if (i instanceof c.CometChatException)
                              return void o(i);
                            var s = a.validateId(t, "user");
                            if (s instanceof c.CometChatException)
                              return void o(s);
                            var l = a.validateScope(n);
                            if (l instanceof c.CometChatException)
                              return void o(l);
                            u.makeApiCall(
                              "changeScopeOfMember",
                              { guid: e, uid: t },
                              { scope: n }
                            ).then(
                              function (e) {
                                r(!0);
                              },
                              function (e) {
                                o(new c.CometChatException(e.error));
                              }
                            );
                          } catch (i) {
                            o(new c.CometChatException(i));
                          }
                        });
                      }),
                      (t.banGroupMember = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateId(e, "group");
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            var i = a.validateId(t, "user");
                            if (i instanceof c.CometChatException)
                              return void r(i);
                            u.makeApiCall("banGroupMember", {
                              guid: e,
                              uid: t,
                            }).then(
                              function (e) {
                                n(!0);
                              },
                              function (e) {
                                r(new c.CometChatException(e.error));
                              }
                            );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.unbanGroupMember = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateId(e, "group");
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            var i = a.validateId(t, "user");
                            if (i instanceof c.CometChatException)
                              return void r(i);
                            u.makeApiCall("unbanGroupMember", {
                              guid: e,
                              uid: t,
                            }).then(
                              function (e) {
                                n(!0);
                              },
                              function (e) {
                                r(new c.CometChatException(e.error));
                              }
                            );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.addMembersToGroup = function (e, t, n) {
                        var o = [],
                          i = [],
                          s = [],
                          l = [];
                        return new Promise(function (d, p) {
                          try {
                            var f = a.validateId(e, "group");
                            if (f instanceof c.CometChatException)
                              return void p(f);
                            var h = a.validateArray(t, "groupMembers");
                            if (h instanceof c.CometChatException)
                              return void p(h);
                            if (n) {
                              var E = a.validateArray(n, "bannedMembers");
                              if (E instanceof c.CometChatException)
                                return void p(E);
                            }
                            a.isFalsy(t) && a.isFalsy(n)
                              ? p(new c.CometChatException({}))
                              : a.isFalsy(t) || a.isFalsy(n)
                              ? a.isFalsy(t)
                                ? n.map(function (e) {
                                    l.push(e);
                                  })
                                : (t
                                    .filter(function (e) {
                                      if (
                                        e.getScope() ==
                                        _.GROUP_MEMBER_SCOPE.ADMIN
                                      )
                                        return !0;
                                    })
                                    .map(function (e) {
                                      o.push(e.getUid());
                                    }),
                                  t
                                    .filter(function (e) {
                                      if (
                                        e.getScope() ==
                                        _.GROUP_MEMBER_SCOPE.MODERATOR
                                      )
                                        return !0;
                                    })
                                    .map(function (e) {
                                      i.push(e.getUid());
                                    }),
                                  t
                                    .filter(function (e) {
                                      if (
                                        e.getScope() ==
                                        _.GROUP_MEMBER_SCOPE.PARTICIPANT
                                      )
                                        return !0;
                                    })
                                    .map(function (e) {
                                      s.push(e.getUid());
                                    }))
                              : (t
                                  .filter(function (e) {
                                    if (
                                      e.getScope() == _.GROUP_MEMBER_SCOPE.ADMIN
                                    )
                                      return !0;
                                  })
                                  .map(function (e) {
                                    o.push(e.getUid());
                                  }),
                                t
                                  .filter(function (e) {
                                    if (
                                      e.getScope() ==
                                      _.GROUP_MEMBER_SCOPE.MODERATOR
                                    )
                                      return !0;
                                  })
                                  .map(function (e) {
                                    i.push(e.getUid());
                                  }),
                                t
                                  .filter(function (e) {
                                    if (
                                      e.getScope() ==
                                      _.GROUP_MEMBER_SCOPE.PARTICIPANT
                                    )
                                      return !0;
                                  })
                                  .map(function (e) {
                                    s.push(e.getUid());
                                  }),
                                n.map(function (e) {
                                  l.push(e);
                                }));
                            var g = {};
                            a.isFalsy(o) || (g = r({}, g, { admins: o })),
                              a.isFalsy(s) ||
                                (g = r({}, g, { participants: s })),
                              a.isFalsy(i) || (g = r({}, g, { moderators: i })),
                              a.isFalsy(l) || (g = r({}, g, { usersToBan: l })),
                              u
                                .makeApiCall(
                                  "addMemebersToGroup",
                                  { guid: e },
                                  g
                                )
                                .then(
                                  function (e) {
                                    var t = {};
                                    Object.keys(e.data.admins).map(function (
                                      n
                                    ) {
                                      e.data.admins[n][
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .GROUP_MEMBERS_RESPONSE.SUCCESS
                                      ]
                                        ? (t[n] =
                                            _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.SUCCESS)
                                        : (t[n] =
                                            e.data.admins[n][
                                              _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.ERROR
                                            ][
                                              _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.MESSAGE
                                            ]);
                                    }),
                                      Object.keys(e.data.participants).map(
                                        function (n) {
                                          e.data.participants[n][
                                            _.ResponseConstants.RESPONSE_KEYS
                                              .GROUP_MEMBERS_RESPONSE.SUCCESS
                                          ]
                                            ? (t[n] =
                                                _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.SUCCESS)
                                            : (t[n] =
                                                e.data.participants[n][
                                                  _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.ERROR
                                                ][
                                                  _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.MESSAGE
                                                ]);
                                        }
                                      ),
                                      Object.keys(e.data.moderators).map(
                                        function (n) {
                                          e.data.moderators[n][
                                            _.ResponseConstants.RESPONSE_KEYS
                                              .GROUP_MEMBERS_RESPONSE.SUCCESS
                                          ]
                                            ? (t[n] =
                                                _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.SUCCESS)
                                            : (t[n] =
                                                e.data.moderators[n][
                                                  _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.ERROR
                                                ][
                                                  _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.MESSAGE
                                                ]);
                                        }
                                      ),
                                      Object.keys(e.data.usersToBan).map(
                                        function (n) {
                                          e.data.usersToBan[n][
                                            _.ResponseConstants.RESPONSE_KEYS
                                              .GROUP_MEMBERS_RESPONSE.SUCCESS
                                          ]
                                            ? (t[n] =
                                                _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.SUCCESS)
                                            : (t[n] =
                                                e.data.usersToBan[n][
                                                  _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.ERROR
                                                ][
                                                  _.ResponseConstants.RESPONSE_KEYS.GROUP_MEMBERS_RESPONSE.MESSAGE
                                                ]);
                                        }
                                      ),
                                      d(t);
                                  },
                                  function (e) {
                                    p(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (d) {
                            p(new c.CometChatException(d));
                          }
                        });
                      }),
                      (t.transferGroupOwnership = function (e, t) {
                        return new Promise(function (n, r) {
                          try {
                            var o = a.validateId(e, "group");
                            if (o instanceof c.CometChatException)
                              return void r(o);
                            var i = a.validateId(t, "user");
                            if (i instanceof c.CometChatException)
                              return void r(i);
                            u.makeApiCall(
                              "transferOwnership",
                              { guid: e },
                              { owner: t }
                            ).then(
                              function (r) {
                                var o;
                                (o =
                                  r && r.data && r.data.message
                                    ? r.data.message
                                    : "Ownership transferred to user " +
                                      t +
                                      " for the group with guid " +
                                      e +
                                      "."),
                                  n(o);
                              },
                              function (e) {
                                r(new c.CometChatException(e.error));
                              }
                            );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.initiateCall = function (e) {
                        var t = this;
                        return new Promise(function (n, r) {
                          if (null === t.getActiveCall())
                            try {
                              a.isFalsy(JSON.parse(JSON.stringify(e)).sender)
                                ? a.isFalsy(t.getActiveCall())
                                  ? (e.setStatus(
                                      _.CallConstants.CALL_STATUS.INITIATED
                                    ),
                                    (e.receiver = e.receiverId.toString()),
                                    delete e.receiverId,
                                    u
                                      .makeApiCall("createCallSession", {}, e)
                                      .then(
                                        function (e) {
                                          var t =
                                            g.MessageController.trasformJSONMessge(
                                              e[
                                                _.ResponseConstants
                                                  .RESPONSE_KEYS.KEY_DATA
                                              ]
                                            );
                                          N.CallController.getInstance()
                                            .initiateCall(t)
                                            .then(function (e) {
                                              n(t);
                                            })
                                            .catch(function (e) {
                                              r(new c.CometChatException(e));
                                            });
                                        },
                                        function (e) {
                                          r(new c.CometChatException(e.error));
                                        }
                                      ))
                                  : r(
                                      new c.CometChatException(
                                        _.CALL_ERROR.ERROR_IN_CALLING
                                      )
                                    )
                                : N.CallController.getInstance()
                                    .initiateCall(e)
                                    .then(function (t) {
                                      n(Object.assign(e));
                                    })
                                    .catch(function (e) {
                                      r(new c.CometChatException(e));
                                    });
                            } catch (e) {
                              r(new c.CometChatException(e));
                            }
                          else
                            r(
                              new c.CometChatException(
                                _.CALL_ERROR.CALL_ALREADY_INITIATED
                              )
                            );
                        });
                      }),
                      (t.acceptCall = function (e) {
                        var t = this;
                        return new Promise(function (n, r) {
                          if (null === t.getActiveCall())
                            try {
                              var o = {};
                              (o[_.CallConstants.CALL_KEYS.CALL_STATUS] =
                                _.CallConstants.CALL_STATUS.ONGOING),
                                u
                                  .makeApiCall(
                                    "updateCallSession",
                                    { sessionid: e },
                                    o
                                  )
                                  .then(
                                    function (e) {
                                      var t =
                                        g.MessageController.trasformJSONMessge(
                                          e[
                                            _.ResponseConstants.RESPONSE_KEYS
                                              .KEY_DATA
                                          ]
                                        );
                                      N.CallController.getInstance().onCallStarted(
                                        t
                                      ),
                                        n(t);
                                    },
                                    function (e) {
                                      r(new c.CometChatException(e.error));
                                    }
                                  );
                            } catch (o) {
                              r(new c.CometChatException(o));
                            }
                          else
                            r(
                              new c.CometChatException(
                                _.CALL_ERROR.CANNOT_ACCEPT_CALL
                              )
                            );
                        });
                      }),
                      (t.rejectCall = function (e, t) {
                        try {
                          switch (t) {
                            case _.CallConstants.CALL_STATUS.REJECTED:
                              return this.rejectIncomingCall(e);
                            case _.CallConstants.CALL_STATUS.CANCELLED:
                              return this.cancelCall(e);
                            case _.CallConstants.CALL_STATUS.BUSY:
                              return this.sendBusyResponse(e);
                            default:
                              return this.endCall(e, !0);
                          }
                        } catch (e) {
                          a.Logger.error("CometChat: rejectCall", e);
                        }
                      }),
                      (t.endCall = function (e, t) {
                        var n = this;
                        return new Promise(function (r, o) {
                          a.isFalsy(t) && (t = !1);
                          var i = n.getActiveCall();
                          if (null !== i) {
                            if (i.getSessionId() === e)
                              try {
                                var s = {};
                                (s[_.CallConstants.CALL_KEYS.CALL_STATUS] =
                                  _.CallConstants.CALL_STATUS.ENDED),
                                  i.getJoinedAt() &&
                                    (s[
                                      _.CallConstants.CALL_KEYS.CALL_JOINED_AT
                                    ] = i.getJoinedAt()),
                                  u
                                    .makeApiCall(
                                      "updateCallSession",
                                      { sessionid: e },
                                      s
                                    )
                                    .then(
                                      function (e) {
                                        t ||
                                          N.CallController.getInstance().endSession();
                                        var n =
                                          g.MessageController.trasformJSONMessge(
                                            e[
                                              _.ResponseConstants.RESPONSE_KEYS
                                                .KEY_DATA
                                            ]
                                          );
                                        r(n),
                                          N.CallController.getInstance().getCallListner() &&
                                            N.CallController.getInstance()
                                              .getCallListner()
                                              ._eventListener.onCallEnded(n),
                                          N.CallController.getInstance().endCall();
                                      },
                                      function (e) {
                                        a.Logger.log("calling Log", {
                                          error: e,
                                        }),
                                          t ||
                                            N.CallController.getInstance().endSession(),
                                          i.setStatus(
                                            _.CallConstants.CALL_STATUS.ENDED
                                          ),
                                          r(i),
                                          N.CallController.getInstance().getCallListner() &&
                                            N.CallController.getInstance()
                                              .getCallListner()
                                              ._eventListener.onCallEnded(i),
                                          N.CallController.getInstance().endCall();
                                      }
                                    );
                              } catch (s) {
                                o(new c.CometChatException(s));
                              }
                          } else t || N.CallController.getInstance().endSession(), r(null), N.CallController.getInstance().getCallListner() && N.CallController.getInstance().getCallListner()._eventListener.onCallEnded(null), N.CallController.getInstance().endCall();
                        });
                      }),
                      (t.getActiveCall = function () {
                        try {
                          return N.CallController.getInstance().getActiveCall();
                        } catch (e) {
                          a.Logger.error("CometChat: getActiveCall", e);
                        }
                      }),
                      (t.startCall = function (e, n, r, o) {
                        var i = this;
                        try {
                          var s,
                            u,
                            l,
                            d,
                            p,
                            f,
                            h,
                            E,
                            g = this.getActiveCall(),
                            S = !1,
                            C = !0,
                            m = !0,
                            T = !0,
                            y = !0,
                            A = !0,
                            I = !0,
                            v = !1,
                            R = !1,
                            O = _.CallConstants.CALL_MODE.DEFAULT,
                            P = {},
                            M = this.user;
                          a.getAppSettings().then(
                            function (o) {
                              if (
                                ((f = o[_.APP_SETTINGS.KEYS.WEBRTC_HOST]),
                                o.hasOwnProperty(
                                  _.APP_SETTINGS.KEYS.ANALYTICS_HOST
                                )
                                  ? (P[_.APP_SETTINGS.KEYS.ANALYTICS_HOST] =
                                      o[_.APP_SETTINGS.KEYS.ANALYTICS_HOST])
                                  : (P[_.APP_SETTINGS.KEYS.ANALYTICS_HOST] =
                                      a.format(
                                        _.ANALYTICS.analyticsHost,
                                        t.appSettings.getRegion()
                                      )),
                                o.hasOwnProperty(
                                  _.APP_SETTINGS.KEYS.ANALYTICS_VERSION
                                )
                                  ? (P[_.APP_SETTINGS.KEYS.ANALYTICS_VERSION] =
                                      o[_.APP_SETTINGS.KEYS.ANALYTICS_VERSION])
                                  : (P[_.APP_SETTINGS.KEYS.ANALYTICS_VERSION] =
                                      _.ANALYTICS.analyticsVersion),
                                o.hasOwnProperty(
                                  _.APP_SETTINGS.KEYS.ANALYTICS_PING_DISABLED
                                )
                                  ? (P[
                                      _.APP_SETTINGS.KEYS.ANALYTICS_PING_DISABLED
                                    ] =
                                      o[
                                        _.APP_SETTINGS.KEYS.ANALYTICS_PING_DISABLED
                                      ])
                                  : (P[
                                      _.APP_SETTINGS.KEYS.ANALYTICS_PING_DISABLED
                                    ] = !1),
                                o.hasOwnProperty(
                                  _.APP_SETTINGS.KEYS.ANALYTICS_USE_SSL
                                )
                                  ? (P[_.APP_SETTINGS.KEYS.ANALYTICS_USE_SSL] =
                                      o[_.APP_SETTINGS.KEYS.ANALYTICS_USE_SSL])
                                  : (P[_.APP_SETTINGS.KEYS.ANALYTICS_USE_SSL] =
                                      !0),
                                a.isFalsy(r) ||
                                  N.CallController.getInstance().setCallListner(
                                    r
                                  ),
                                a.isFalsy(i.appSettings))
                              )
                                N.CallController.getInstance().getCallListner() &&
                                  N.CallController.getInstance()
                                    .getCallListner()
                                    ._eventListener.onError(
                                      new c.CometChatException(
                                        _.CALL_ERROR.NOT_INITIALIZED
                                      )
                                    );
                              else if ((d = i.appSettings.getRegion()))
                                if (M)
                                  if (
                                    ((E = new q.RTCUser(M.getUid())).setName(
                                      M.getName()
                                    ),
                                    E.setAvatar(M.getAvatar()),
                                    E.setResource(t.getSessionId()),
                                    t.appId)
                                  )
                                    if (((p = t.appId), "string" == typeof e)) {
                                      if (g) {
                                        var L = g.getType();
                                        (S =
                                          L ===
                                          _.CallConstants.CALL_TYPE.AUDIO),
                                          (u = g.getSessionId());
                                      } else {
                                        if (a.isFalsy(e))
                                          return void (
                                            N.CallController.getInstance().getCallListner() &&
                                            N.CallController.getInstance()
                                              .getCallListner()
                                              ._eventListener.onError(
                                                new c.CometChatException(
                                                  _.CALL_ERROR.SESSION_ID_REQUIRED
                                                )
                                              )
                                          );
                                        u = (
                                          "v1." +
                                          d +
                                          "." +
                                          t.getAppId() +
                                          "." +
                                          e
                                        ).toLowerCase();
                                      }
                                      if (!u)
                                        return void (
                                          N.CallController.getInstance().getCallListner() &&
                                          N.CallController.getInstance()
                                            .getCallListner()
                                            ._eventListener.onError(
                                              new c.CometChatException(
                                                _.CALL_ERROR.SESSION_ID_REQUIRED
                                              )
                                            )
                                        );
                                      var b = { uid: M.getUid(), sessionId: u };
                                      t.getJWT(b).then(
                                        function (e) {
                                          e.hasOwnProperty("token")
                                            ? (E.setJWT(e.token),
                                              (s = new W.CallSettingsBuilder()
                                                .setSessionID(u)
                                                .enableDefaultLayout(C)
                                                .setIsAudioOnlyCall(S)
                                                .setUser(E)
                                                .setRegion(d)
                                                .setAppId(p)
                                                .setDomain(f)
                                                .showEndCallButton(y)
                                                .showMuteAudioButton(T)
                                                .showPauseVideoButton(m)
                                                .showScreenShareButton(A)
                                                .showModeButton(I)
                                                .setMode(O)
                                                .setAnalyticsSettings(P)
                                                .startWithAudioMuted(v)
                                                .startWithVideoMuted(R)
                                                .build()),
                                              N.CallController.getInstance().startCall(
                                                s,
                                                n
                                              ))
                                            : N.CallController.getInstance().getCallListner() &&
                                              N.CallController.getInstance()
                                                .getCallListner()
                                                ._eventListener.onError(
                                                  new c.CometChatException(
                                                    _.CALL_ERROR.JWT_NOT_FOUND
                                                  )
                                                );
                                        },
                                        function (e) {
                                          N.CallController.getInstance().getCallListner() &&
                                            N.CallController.getInstance()
                                              .getCallListner()
                                              ._eventListener.onError(
                                                new c.CometChatException(e)
                                              );
                                        }
                                      );
                                    } else {
                                      if (a.isFalsy(e))
                                        return void (
                                          N.CallController.getInstance().getCallListner() &&
                                          N.CallController.getInstance()
                                            .getCallListner()
                                            ._eventListener.onError(
                                              new c.CometChatException(
                                                _.CALL_ERROR.CALL_SETTINGS_REQUIRED
                                              )
                                            )
                                        );
                                      if (g)
                                        (L = g.getType()),
                                          (S =
                                            L ===
                                            _.CallConstants.CALL_TYPE.AUDIO),
                                          (u = g.getSessionId());
                                      else {
                                        if (
                                          ((S = e.isAudioOnlyCall()),
                                          a.isFalsy(e.getSessionId()))
                                        )
                                          return void (
                                            N.CallController.getInstance().getCallListner() &&
                                            N.CallController.getInstance()
                                              .getCallListner()
                                              ._eventListener.onError(
                                                new c.CometChatException(
                                                  _.CALL_ERROR.SESSION_ID_REQUIRED
                                                )
                                              )
                                          );
                                        u = (
                                          "v1." +
                                          d +
                                          "." +
                                          t.getAppId() +
                                          "." +
                                          e.getSessionId()
                                        ).toLowerCase();
                                      }
                                      if (!u)
                                        return void (
                                          N.CallController.getInstance().getCallListner() &&
                                          N.CallController.getInstance()
                                            .getCallListner()
                                            ._eventListener.onError(
                                              new c.CometChatException(
                                                _.CALL_ERROR.SESSION_ID_REQUIRED
                                              )
                                            )
                                        );
                                      (C = e.isDefaultLayoutEnabled()),
                                        (m = e.isPauseVideoButtonEnabled()),
                                        (T = e.isMuteAudioButtonEnabled()),
                                        (y = e.isEndCallButtonEnabled()),
                                        (A = e.isScreenShareButtonEnabled()),
                                        (O = e.getMode()),
                                        (h = e.getLocalizedStringObject()),
                                        (l = e.getCustomCSS()),
                                        (I = e.isModeButtonEnabled()),
                                        (v = e.getStartWithAudioMuted()),
                                        (R = e.getStartWithVideoMuted()),
                                        (b = { uid: M.getUid(), sessionId: u }),
                                        t.getJWT(b).then(
                                          function (e) {
                                            e.hasOwnProperty("token")
                                              ? (E.setJWT(e.token),
                                                (s = new W.CallSettingsBuilder()
                                                  .setSessionID(u)
                                                  .enableDefaultLayout(C)
                                                  .setIsAudioOnlyCall(S)
                                                  .setUser(E)
                                                  .setRegion(d)
                                                  .setAppId(p)
                                                  .setDomain(f)
                                                  .showEndCallButton(y)
                                                  .showMuteAudioButton(T)
                                                  .showPauseVideoButton(m)
                                                  .showScreenShareButton(A)
                                                  .showModeButton(I)
                                                  .setMode(O)
                                                  .setLocalizedStringObject(h)
                                                  .setCustomCSS(l)
                                                  .setAnalyticsSettings(P)
                                                  .startWithAudioMuted(v)
                                                  .startWithVideoMuted(R)
                                                  .build()),
                                                N.CallController.getInstance().startCall(
                                                  s,
                                                  n
                                                ))
                                              : N.CallController.getInstance().getCallListner() &&
                                                N.CallController.getInstance()
                                                  .getCallListner()
                                                  ._eventListener.onError(
                                                    new c.CometChatException(
                                                      _.CALL_ERROR.JWT_NOT_FOUND
                                                    )
                                                  );
                                          },
                                          function (e) {
                                            N.CallController.getInstance().getCallListner() &&
                                              N.CallController.getInstance()
                                                .getCallListner()
                                                ._eventListener.onError(
                                                  new c.CometChatException(e)
                                                );
                                          }
                                        );
                                    }
                                  else
                                    N.CallController.getInstance().getCallListner() &&
                                      N.CallController.getInstance()
                                        .getCallListner()
                                        ._eventListener.onError(
                                          new c.CometChatException(
                                            _.CALL_ERROR.NOT_INITIALIZED
                                          )
                                        );
                                else
                                  N.CallController.getInstance().getCallListner() &&
                                    N.CallController.getInstance()
                                      .getCallListner()
                                      ._eventListener.onError(
                                        new c.CometChatException(
                                          _.CALL_ERROR.NOT_LOGGED_IN
                                        )
                                      );
                              else
                                N.CallController.getInstance().getCallListner() &&
                                  N.CallController.getInstance()
                                    .getCallListner()
                                    ._eventListener.onError(
                                      new c.CometChatException(
                                        _.CALL_ERROR.NOT_INITIALIZED
                                      )
                                    );
                            },
                            function (e) {
                              a.Logger.error("CometChat: startCall", e);
                            }
                          );
                        } catch (o) {
                          a.Logger.error("CometChat: startCall", o);
                        }
                      }),
                      (t.getCallParticipantCount = function (e, n) {
                        var r = this;
                        return new Promise(function (o, i) {
                          try {
                            a.getAppSettings().then(
                              function (l) {
                                if (a.isFalsy(e))
                                  return i(
                                    new c.CometChatException(
                                      _.ProsodyApiErrors.INVALID_SESSIONID
                                    )
                                  );
                                if (a.isFalsy(n))
                                  return i(
                                    new c.CometChatException(
                                      _.ProsodyApiErrors.INVALID_TYPE
                                    )
                                  );
                                var d = r.appSettings.getRegion(),
                                  p = {},
                                  f = l[_.APP_SETTINGS.KEYS.WEBRTC_HOST],
                                  h = a.format(
                                    new s.EndpointFactory().prosodyApi,
                                    _.PROSODY_API.DOMAIN_PREFIX,
                                    f,
                                    _.PROSODY_API.PATH.ROOM_SIZE
                                  );
                                "direct" === n.toLowerCase() &&
                                  (e = (
                                    "v1." +
                                    d +
                                    "." +
                                    t.getAppId() +
                                    "." +
                                    e
                                  ).toLowerCase()),
                                  (p[_.PROSODY_API.QUERY_PARAMETERS.DOMAIN] =
                                    f),
                                  (p[_.PROSODY_API.QUERY_PARAMETERS.ROOM] = e),
                                  u
                                    .postData(h, "GET", p, {}, !1)
                                    .then(function (e) {
                                      return e.text();
                                    })
                                    .then(function (e) {
                                      var t = e ? JSON.parse(e) : {};
                                      return t.hasOwnProperty(
                                        _.PROSODY_API.RESPONSE.PARTICIPANTS
                                      )
                                        ? o(
                                            t[
                                              _.PROSODY_API.RESPONSE
                                                .PARTICIPANTS
                                            ]
                                          )
                                        : o(0);
                                    })
                                    .catch(function () {
                                      var e = {
                                        error: R.FETCH_ERROR.ERROR_IN_API_CALL,
                                      };
                                      return i(e);
                                    });
                              },
                              function (e) {
                                return i(new c.CometChatException(e));
                              }
                            );
                          } catch (e) {
                            return i(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.createCallView = function (e) {
                        var n = this;
                        try {
                          return {
                            prop1: this.makeCall,
                            onMessage: function (e) {
                              N.CallController.getInstance()
                                .getCallListner()
                                ._eventListener.onCallEnded(n.getActiveCall()),
                                t
                                  .endCall(n.getActiveCall().getSessionId(), !0)
                                  .then(function (e) {
                                    a.Logger.info(
                                      "CometChat: createCallView",
                                      e
                                    );
                                  })
                                  .catch(function (e) {
                                    a.Logger.error(
                                      "CometChat: createCallView",
                                      e
                                    );
                                  });
                            },
                          };
                        } catch (e) {
                          a.Logger.error("CometChat: createCallView", e);
                        }
                      }),
                      (t.makeCall = function (e, t) {
                        try {
                          e.setState(function (e) {
                            return r({}, e, { uri: t });
                          });
                        } catch (e) {
                          a.Logger.error("CometChat: makeCall", e);
                        }
                      }),
                      (t.rejectIncomingCall = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = {};
                            (r[_.CallConstants.CALL_KEYS.CALL_STATUS] =
                              _.CallConstants.CALL_STATUS.REJECTED),
                              u
                                .makeApiCall(
                                  "updateCallSession",
                                  { sessionid: e },
                                  r
                                )
                                .then(
                                  function (e) {
                                    var n =
                                      g.MessageController.trasformJSONMessge(
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS
                                            .KEY_DATA
                                        ]
                                      );
                                    t(n);
                                  },
                                  function (e) {
                                    n(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.cancelCall = function (e) {
                        var t = this;
                        return new Promise(function (n, r) {
                          try {
                            var o = {};
                            (o[_.CallConstants.CALL_KEYS.CALL_STATUS] =
                              _.CallConstants.CALL_STATUS.CANCELLED),
                              u
                                .makeApiCall(
                                  "updateCallSession",
                                  { sessionid: e },
                                  o
                                )
                                .then(
                                  function (r) {
                                    var o =
                                      g.MessageController.trasformJSONMessge(
                                        r[
                                          _.ResponseConstants.RESPONSE_KEYS
                                            .KEY_DATA
                                        ]
                                      );
                                    t.getActiveCall().getSessionId() === e &&
                                      N.CallController.getInstance().endCallSession(),
                                      n(o);
                                  },
                                  function (e) {
                                    r(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (o) {
                            r(new c.CometChatException(o));
                          }
                        });
                      }),
                      (t.sendBusyResponse = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = {};
                            (r[_.CallConstants.CALL_KEYS.CALL_STATUS] =
                              _.CallConstants.CALL_STATUS.BUSY),
                              u
                                .makeApiCall(
                                  "updateCallSession",
                                  { sessionid: e },
                                  r
                                )
                                .then(
                                  function (e) {
                                    var n =
                                      g.MessageController.trasformJSONMessge(
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS
                                            .KEY_DATA
                                        ]
                                      );
                                    t(n);
                                  },
                                  function (e) {
                                    n(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.sendUnansweredResponse = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            var r = {};
                            (r[_.CallConstants.CALL_KEYS.CALL_STATUS] =
                              _.CallConstants.CALL_STATUS.UNANSWERED),
                              u
                                .makeApiCall(
                                  "updateCallSession",
                                  { sessionid: e },
                                  r
                                )
                                .then(
                                  function (e) {
                                    var n =
                                      g.MessageController.trasformJSONMessge(
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS
                                            .KEY_DATA
                                        ]
                                      );
                                    d.XMPPConnectionHelper.getInstance().trigerMessageHandler(
                                      Object.assign(
                                        n,
                                        e[
                                          _.ResponseConstants.RESPONSE_KEYS
                                            .KEY_DATA
                                        ]
                                      )
                                    ),
                                      t(n);
                                  },
                                  function (e) {
                                    n(new c.CometChatException(e.error));
                                  }
                                );
                          } catch (r) {
                            n(new c.CometChatException(r));
                          }
                        });
                      }),
                      (t.addConnectionListener = function (e, t) {
                        try {
                          ee.addXMPPConnectionEventListener(e, t);
                        } catch (e) {
                          a.Logger.error("CometChat: addConnectionListener", e);
                        }
                      }),
                      (t.removeConnectionListener = function (e) {
                        try {
                          ee.removeXMPPConnectionEventListener(e);
                        } catch (e) {
                          a.Logger.error(
                            "CometChat: removeConnectionListener",
                            e
                          );
                        }
                      }),
                      (t.addMessageListener = function (e, t) {
                        try {
                          ee.addMessageEventListener(e, t);
                        } catch (e) {
                          a.Logger.error("CometChat: addMessageListener", e);
                        }
                      }),
                      (t.removeMessageListener = function (e) {
                        try {
                          ee.removeMessageEventListener(e);
                        } catch (e) {
                          a.Logger.error("CometChat: removeMessageListener", e);
                        }
                      }),
                      (t.addCallListener = function (e, t) {
                        try {
                          ee.addCallEventListener(e, t);
                        } catch (e) {
                          a.Logger.error("CometChat: addCallListener", e);
                        }
                      }),
                      (t.removeCallListener = function (e) {
                        try {
                          ee.removeCallEventListener(e);
                        } catch (e) {
                          a.Logger.error("CometChat: removeCallListener", e);
                        }
                      }),
                      (t.addUserListener = function (e, t) {
                        try {
                          ee.addUserEventListener(e, t);
                        } catch (e) {
                          a.Logger.error("CometChat: addUserListener", e);
                        }
                      }),
                      (t.removeUserListener = function (e) {
                        try {
                          ee.removeUserEventListener(e);
                        } catch (e) {
                          a.Logger.error("CometChat: removeUserListener", e);
                        }
                      }),
                      (t.addGroupListener = function (e, t) {
                        try {
                          ee.addGroupEventListener(e, t);
                        } catch (e) {
                          a.Logger.error("CometChat: addGroupListener", e);
                        }
                      }),
                      (t.removeGroupListener = function (e) {
                        try {
                          ee.removeGroupEventListener(e);
                        } catch (e) {
                          a.Logger.error("CometChat: removeGroupListener", e);
                        }
                      }),
                      (t.addLoginListener = function (e, t) {
                        try {
                          ee.addLoginEventListener(e, t);
                        } catch (e) {
                          a.Logger.error("CometChat: addLoginListener", e);
                        }
                      }),
                      (t.removeLoginListener = function (e) {
                        try {
                          ee.removeLoginEventListener(e);
                        } catch (e) {
                          a.Logger.error("CometChat: removeLoginListener", e);
                        }
                      }),
                      (t.generateAuthToken = function (e) {
                        var n = this;
                        return new Promise(function (r, o) {
                          try {
                            var i = {},
                              s = "",
                              l = "",
                              d = _.APPINFO.platform,
                              p = _.APPINFO.sdkVersion,
                              f = _.APPINFO.apiVersion;
                            navigator && (l = navigator.userAgent),
                              t.keyStore.get("deviceId").then(
                                function (a) {
                                  if (null == (s = a)) {
                                    var h = Z(),
                                      E = new Date().getTime();
                                    (s = n.appId + "_" + h + "_" + E),
                                      t.keyStore.set("deviceId", s);
                                  }
                                  (i = {
                                    platform: d,
                                    deviceId: s,
                                    appInfo: {
                                      version: p,
                                      apiVersion: f,
                                      userAgent: l,
                                    },
                                  }),
                                    u
                                      .makeApiCall("authToken", { uid: e }, i)
                                      .then(function (e) {
                                        r(e.data);
                                      })
                                      .catch(function (e) {
                                        o(new c.CometChatException(e.error));
                                      });
                                },
                                function (e) {
                                  a.Logger.error(
                                    "Got error while fetching data from key store",
                                    e
                                  );
                                }
                              );
                          } catch (e) {
                            o(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.setAccidentalDisconnect = function (e) {
                        t.accidentalDisconnect = e;
                      }),
                      (t.generateNewSessionId = function () {
                        (t.sessionId =
                          _.APPINFO.platform +
                          "-" +
                          _.APPINFO.sdkVersionWithUnderScore +
                          "-" +
                          Z() +
                          "-" +
                          new Date().getTime()),
                          t.addDataToSessionStorage(
                            _.SESSION_STORE.SESSION_ID,
                            t.getSessionId()
                          );
                      }),
                      (t.tryReconnectingToWSOrStartPolling = function () {
                        0 === this.WSReconnectionStartTime &&
                          (this.WSReconnectionStartTime = new Date().getTime()),
                          new Date().getTime() - t.WSReconnectionStartTime <
                            t.WSReconnectionPeriod &&
                          t.WSCurrentReconnectionCount <
                            t.WSMaxReconnectionLimit &&
                          !t.pollingEnabledInternally &&
                          !t.isPollingEnabled()
                            ? ((t.WSCurrentReconnectionCount += 1),
                              this.XMPPLogin(
                                t.user,
                                function () {
                                  a.Logger.info("XMPPLogin", "successful");
                                },
                                function () {
                                  a.Logger.info("XMPPLogin", "unsuccessful");
                                }
                              ))
                            : (t.shouldFallBackToPolling &&
                                t.startPolling(!!t.accidentalDisconnect),
                              t.WSReconnectionInProgress ||
                                t.startWSReconnectionTimer());
                      }),
                      (t.startPolling = function (e) {
                        if (
                          ((t.currentConnectionStatus =
                            _.CONNECTION_STATUS.FEATURE_THROTTLED),
                          !t.didMessagesPollingStart())
                        ) {
                          ee.XMPPConnectionHandlers.map(function (e) {
                            try {
                              e._XMPPeventListener &&
                                (a.isFalsy(
                                  e._XMPPeventListener.onFeatureThrottled
                                ) ||
                                  e._XMPPeventListener.onFeatureThrottled());
                            } catch (e) {
                              a.Logger.error(
                                "XMPPConnectionHandlers: Feature Throttled Status",
                                e
                              );
                            }
                          });
                          var n = void 0;
                          if (e) {
                            var r = t.getLastMessageId();
                            0 === (t.pollingMessagesId = r || 0) &&
                              (n = t.getSuccessfultTimeStamp());
                          } else
                            n =
                              0 < t.WSReconnectionStartTime
                                ? t.WSReconnectionStartTime
                                : new Date().getTime();
                          (t.pollingEnabledInternally = !0),
                            (t.pollingEnabled = !0),
                            (t.pollingMessagesTimestamp = Math.floor(n / 1e3)),
                            t.fetchMessages(),
                            t.startMessagesTimer();
                        }
                      }),
                      (t.prototype.makeXMPPConnection = function () {
                        t.setAccidentalDisconnect(!1),
                          t.XMPPLogin(
                            t.user,
                            function () {
                              a.Logger.info("XMPPLogin", "successful");
                            },
                            function () {
                              a.Logger.info("XMPPLogin", "unsuccessful");
                            }
                          );
                      }),
                      (t.prototype.accidentallyDisconnected = function () {
                        (t.currentConnectionStatus =
                          _.CONNECTION_STATUS.CONNECTING),
                          ee.XMPPConnectionHandlers.map(function (e) {
                            try {
                              e._XMPPeventListener &&
                                (a.isFalsy(e._XMPPeventListener.inConnecting) ||
                                  e._XMPPeventListener.inConnecting());
                            } catch (e) {
                              a.Logger.error(
                                "XMPPConnectionHandlers: inConnecting Status",
                                e
                              );
                            }
                          }),
                          t.setAccidentalDisconnect(!0),
                          t.tryReconnectingToWSOrStartPolling();
                      }),
                      (t.XMPPLogin = function (e, n, r) {
                        var o = this;
                        try {
                          ee.XMMPLogin(
                            e.getUid(),
                            e.getWsChannel().secret,
                            !1,
                            function (e, n) {
                              switch (
                                (n === _.Errors.ERR_XMPP_CONFLICT &&
                                  (ee.XMPPDisconnect(),
                                  t.generateNewSessionId()),
                                e)
                              ) {
                                case p.Strophe.Status.CONNFAIL:
                                  t.isLoggedOut ||
                                    o.tryReconnectingToWSOrStartPolling();
                                  break;
                                case p.Strophe.Status.CONNECTING:
                                  var r = t.getConnectionStatus();
                                  t.WSReconnectionInProgress ||
                                    t.accidentalDisconnect ||
                                    t.didMessagesPollingStart() ||
                                    ((o.currentConnectionStatus =
                                      _.CONNECTION_STATUS.CONNECTING),
                                    r == _.CONNECTION_STATUS.DISCONNECTED &&
                                      ee.XMPPConnectionHandlers.map(function (
                                        e
                                      ) {
                                        try {
                                          e._XMPPeventListener &&
                                            (a.isFalsy(
                                              e._XMPPeventListener.inConnecting
                                            ) ||
                                              e._XMPPeventListener.inConnecting());
                                        } catch (e) {
                                          a.Logger.error(
                                            "XMPPConnectionHandlers: inConnecting Status",
                                            e
                                          );
                                        }
                                      }));
                                  break;
                                case p.Strophe.Status.CONNECTED:
                                  (r = t.getConnectionStatus()),
                                    (o.currentConnectionStatus =
                                      _.CONNECTION_STATUS.CONNECTED),
                                    r !==
                                      _.CONNECTION_STATUS.FEATURE_THROTTLED &&
                                      t.didMessagesPollingStart(),
                                    (r != _.CONNECTION_STATUS.CONNECTING &&
                                      r !=
                                        _.CONNECTION_STATUS
                                          .FEATURE_THROTTLED) ||
                                      ee.XMPPConnectionHandlers.map(function (
                                        e
                                      ) {
                                        try {
                                          e._XMPPeventListener &&
                                            (a.isFalsy(
                                              e._XMPPeventListener.onConnected
                                            ) ||
                                              e._XMPPeventListener.onConnected());
                                        } catch (e) {
                                          a.Logger.error(
                                            "XMPPConnectionHandlers: onConnected Status",
                                            e
                                          );
                                        }
                                      }),
                                    (t.WSReconnectionStartTime = 0),
                                    (t.pollingMessagesId = 0),
                                    (t.pollingEnabled = !1),
                                    (t.pollingEnabledInternally = !1),
                                    (t.WSCurrentReconnectionCount = 0),
                                    t.setAccidentalDisconnect(!1),
                                    t.didMessagesPollingStart() &&
                                      t.clearMessagesTimer(),
                                    t.WSReconnectionInProgress &&
                                      t.clearWSReconnectionTimer();
                                  break;
                                case p.Strophe.Status.DISCONNECTED:
                                  (r = t.getConnectionStatus()),
                                    t.WSReconnectionInProgress ||
                                      t.accidentalDisconnect ||
                                      t.didMessagesPollingStart() ||
                                      ((o.currentConnectionStatus =
                                        _.CONNECTION_STATUS.DISCONNECTED),
                                      r !== _.CONNECTION_STATUS.DISCONNECTED &&
                                        (ee.XMPPConnectionHandlers.map(
                                          function (e) {
                                            try {
                                              e._XMPPeventListener &&
                                                (a.isFalsy(
                                                  e._XMPPeventListener
                                                    .onDisconnected
                                                ) ||
                                                  e._XMPPeventListener.onDisconnected());
                                            } catch (e) {
                                              a.Logger.error(
                                                "XMPPConnectionHandlers: Disconnected Status",
                                                e
                                              );
                                            }
                                          }
                                        ),
                                        t.isLoggedOut ||
                                          o.tryReconnectingToWSOrStartPolling()));
                                  break;
                                case p.Strophe.Status.DISCONNECTING:
                                  break;
                                case p.Strophe.Status.AUTHFAIL:
                                  o.tryReconnectingToWSOrStartPolling();
                              }
                            }
                          );
                        } catch (e) {
                          return void (
                            t.isLoggedOut ||
                            this.tryReconnectingToWSOrStartPolling()
                          );
                        }
                      }),
                      (t.fetchMessages = function () {
                        var e = this;
                        try {
                          var n = {
                            per_page: t.pollingLimit,
                            affix: t.pollingAffix,
                            polling: 1,
                          };
                          t.pollingMessagesId
                            ? (n.id = t.pollingMessagesId)
                            : (n.sentAt = t.pollingMessagesTimestamp),
                            u
                              .makeApiCall("getMessages", {}, n)
                              .then(
                                function (n) {
                                  return o(e, void 0, void 0, function () {
                                    var e, r, o, s;
                                    return i(this, function (i) {
                                      switch (i.label) {
                                        case 0:
                                          if (
                                            ((e = n.data),
                                            !(0 < (r = n.data.length)))
                                          )
                                            return [3, 4];
                                          (t.pollingMessagesId = e[r - 1].id),
                                            (o = Math.floor(
                                              t.pollingInterval / r
                                            )),
                                            (s = 0),
                                            (i.label = 1);
                                        case 1:
                                          return s < r
                                            ? t.isLoggedOut
                                              ? [3, 3]
                                              : (e[s] &&
                                                  e[s][
                                                    _.MessageConstatnts.KEYS
                                                      .DATA
                                                  ] &&
                                                  e[s][
                                                    _.MessageConstatnts.KEYS
                                                      .DATA
                                                  ][
                                                    _.MessageConstatnts.KEYS
                                                      .RESOURCE
                                                  ] &&
                                                  e[s][
                                                    _.MessageConstatnts.KEYS
                                                      .DATA
                                                  ][
                                                    _.MessageConstatnts.KEYS
                                                      .RESOURCE
                                                  ] !== t.getSessionId() &&
                                                  t.getConnectionStatus() !==
                                                    _.CONNECTION_STATUS
                                                      .CONNECTED &&
                                                  (t.getLastMessageId() <=
                                                    e[s].id &&
                                                    t.setLastMessageId(e[s].id),
                                                  D.MessageListnerMaping.getInstance().set(
                                                    "all",
                                                    parseInt(e[s].id)
                                                  ),
                                                  d.XMPPConnectionHelper.getInstance().trigerMessageHandler(
                                                    e[s]
                                                  )),
                                                s < r - 1
                                                  ? [4, t.timer(o)]
                                                  : [3, 3])
                                            : [3, 4];
                                        case 2:
                                          i.sent(), (i.label = 3);
                                        case 3:
                                          return s++, [3, 1];
                                        case 4:
                                          return [2];
                                      }
                                    });
                                  });
                                },
                                function (e) {
                                  a.Logger.error(
                                    "CometChat: fetchMessages: API Error",
                                    e
                                  );
                                }
                              )
                              .catch(function (e) {
                                a.Logger.error(
                                  "CometChat: fetchMessages: API Error",
                                  e
                                );
                              });
                        } catch (e) {
                          a.Logger.error("CometChat: fetchMessages", e);
                        }
                      }),
                      (t.fetchMissedMessages = function () {
                        var e = this;
                        try {
                          var n = {
                            per_page: 1e3,
                            affix: _.MessageConstatnts.PAGINATION.AFFIX.APPEND,
                            missedMessages: 1,
                          };
                          0 < t.getLastMessageId()
                            ? (n.id = t.getLastMessageId())
                            : 0 < t.getSuccessfultTimeStamp()
                            ? (n.sentAt = Math.floor(
                                t.getSuccessfultTimeStamp() / 1e3
                              ))
                            : (n.sentAt = Math.floor(
                                new Date().getTime() / 1e3
                              )),
                            u
                              .makeApiCall("getMessages", {}, n)
                              .then(
                                function (n) {
                                  return o(e, void 0, void 0, function () {
                                    var e, r, o;
                                    return i(this, function (i) {
                                      if (
                                        ((e = n.data), 0 < (r = n.data.length))
                                      )
                                        for (
                                          t.pollingMessagesId = e[r - 1].id,
                                            o = 0;
                                          o < r;
                                          o++
                                        )
                                          t.isLoggedOut ||
                                            (e[o] &&
                                              e[o][
                                                _.MessageConstatnts.KEYS.DATA
                                              ] &&
                                              e[o][
                                                _.MessageConstatnts.KEYS.DATA
                                              ][
                                                _.MessageConstatnts.KEYS
                                                  .RESOURCE
                                              ] &&
                                              e[o][
                                                _.MessageConstatnts.KEYS.DATA
                                              ][
                                                _.MessageConstatnts.KEYS
                                                  .RESOURCE
                                              ] !== t.getSessionId() &&
                                              (t.getLastMessageId() <=
                                                e[o].id &&
                                                t.setLastMessageId(e[o].id),
                                              D.MessageListnerMaping.getInstance().set(
                                                "all",
                                                parseInt(e[o].id)
                                              ),
                                              e[o][
                                                _.MessageConstatnts.KEYS
                                                  .CATEGORY
                                              ] !==
                                                _.MessageConstatnts.CATEGORY
                                                  .CALL ||
                                              e[o][
                                                _.MessageConstatnts.KEYS.DATA
                                              ][
                                                _.MessageConstatnts.KEYS.ACTION
                                              ] !==
                                                _.CallConstants.CALL_STATUS
                                                  .INITIATED
                                                ? d.XMPPConnectionHelper.getInstance().trigerMessageHandler(
                                                    e[o]
                                                  )
                                                : a.Logger.info(
                                                    "CometChat: fetchMissedMessages",
                                                    "Call Initiated Message"
                                                  )));
                                      return [2];
                                    });
                                  });
                                },
                                function (e) {
                                  a.Logger.error(
                                    "CometChat: fetchMissedMessages: API Error",
                                    e
                                  );
                                }
                              )
                              .catch(function (e) {
                                a.Logger.error(
                                  "CometChat: fetchMissedMessages: API Error",
                                  e
                                );
                              });
                        } catch (e) {
                          a.Logger.error("CometChat: fetchMissedMessages", e);
                        }
                      }),
                      (t.pingAnalytics = function () {
                        var e = this;
                        try {
                          t.keyStore.get("deviceId").then(function (n) {
                            var r = null;
                            window &&
                              window.location &&
                              window.location.origin &&
                              (r = window.location.origin);
                            var o = "",
                              i = n,
                              s = {
                                version: _.SDKHeader.sdkVersion,
                                apiVersion: _.APPINFO.apiVersion,
                                origin: r,
                                uts: new Date().getTime(),
                              };
                            a.isFalsy(e.resource) || (s.resource = e.resource),
                              a.isFalsy(e.platform) ||
                                (s.platform = e.platform),
                              a.isFalsy(e.language) ||
                                (s.language = e.language),
                              navigator && (o = navigator.userAgent);
                            var l = {
                              appInfo: s,
                              uid: t.user.getUid(),
                              userAgent: o,
                              deviceId: i,
                              platform: _.SDKHeader.platform,
                            };
                            a.isFalsy(t.getSessionId()) ||
                              (l.wsId = t.getSessionId()),
                              t.analyticsHost ||
                                (t.analyticsHost = a.format(
                                  _.ANALYTICS.analyticsHost,
                                  t.appSettings.getRegion()
                                )),
                              t.analyticsVersion ||
                                (t.analyticsVersion =
                                  _.ANALYTICS.analyticsVersion);
                            var d =
                                "https://" +
                                t.analyticsHost +
                                "/" +
                                t.analyticsVersion +
                                "/ping",
                              p = {
                                appId: t.appId,
                                sdk: a.format(
                                  _.SDKHeader.sdk,
                                  _.SDKHeader.platform,
                                  _.SDKHeader.sdkVersion
                                ),
                                "Content-Type": "application/json",
                              };
                            t.settingsHash && (p.settingsHash = t.settingsHash),
                              t.settingsHashReceivedAt &&
                                (p.settingsHashReceivedAt =
                                  t.settingsHashReceivedAt),
                              t.jwt && (p.Authorization = "Bearer " + t.jwt),
                              t.authToken && (p.authToken = t.authToken),
                              u
                                .postData(d, "POST", l, p, !1)
                                .then(function (e) {
                                  return e.json();
                                })
                                .then(function (n) {
                                  if (
                                    n.hasOwnProperty(
                                      _.ResponseConstants.RESPONSE_KEYS.KEY_DATA
                                    )
                                  )
                                    a.Logger.log(
                                      "Analytics Ping Request Data",
                                      n[
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .KEY_DATA
                                      ]
                                    );
                                  else if (
                                    n.hasOwnProperty(
                                      _.ResponseConstants.RESPONSE_KEYS
                                        .KEY_ERROR
                                    )
                                  ) {
                                    var r =
                                      n[
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .KEY_ERROR
                                      ];
                                    a.Logger.log(
                                      "Analytics Ping Request Error",
                                      new c.CometChatException(r)
                                    );
                                    var o = r.code;
                                    if (
                                      o === _.Errors.ERR_SETTINGS_HASH_OUTDATED
                                    ) {
                                      var i = t.authToken;
                                      t.logout().then(function () {
                                        t.login(i);
                                      });
                                    }
                                    o === _.Errors.ERR_NO_AUTH && e.updateJWT();
                                  }
                                })
                                .catch(function (e) {
                                  a.Logger.error(
                                    "CometChat: pingAnalytics Fetch Error",
                                    e
                                  );
                                });
                          });
                        } catch (e) {
                          a.Logger.error("CometChat: pingAnalytics", e);
                        }
                      }),
                      (t.updateJWT = function () {
                        u.makeApiCall("getMyDetails", {}, {}, !1)
                          .then(
                            function (e) {
                              var n = e.data,
                                r = n.settings,
                                o = new l.Me(n);
                              if (
                                (n.hasOwnProperty("jwt") &&
                                  n.jwt &&
                                  (t.jwt = n.jwt),
                                f.LocalStorage.getInstance().set("user", o),
                                r &&
                                  r[_.APP_SETTINGS.KEYS.SETTINGS_HASH] &&
                                  t.settingsHash !==
                                    r[_.APP_SETTINGS.KEYS.SETTINGS_HASH])
                              ) {
                                var i = t.getInstance().getAuthToken();
                                t.logout().then(function () {
                                  t.login(i);
                                });
                              }
                              a.Logger.log("CometChat: updateJWT response", e);
                            },
                            function (e) {
                              a.Logger.error(
                                "CometChat: updateJWT Fetch Error",
                                e
                              );
                            }
                          )
                          .catch(function (e) {
                            a.Logger.error("CometChat: updateJWT", e);
                          });
                      }),
                      (t.startMessagesTimer = function () {
                        var e = this;
                        (t.isMessagesPollingStarted = !0),
                          (t.messagesTimer = setInterval(function () {
                            try {
                              e.fetchMessages();
                            } catch (e) {
                              a.Logger.error(
                                "CometChat: startMessagesTimer",
                                e
                              );
                            }
                          }, t.pollingInterval));
                      }),
                      (t.timer = function (e) {
                        return new Promise(function (t) {
                          return setTimeout(t, e);
                        });
                      }),
                      (t.startAnalyticsPingTimer = function () {
                        var e = this;
                        (t.isAnalyticsPingStarted = !0),
                          (t.analyticsPingTimer = setInterval(function () {
                            try {
                              e.pingAnalytics();
                            } catch (e) {
                              a.Logger.error(
                                "CometChat: startAnalyticsPingTimer",
                                e
                              );
                            }
                          }, t.settingsInterval));
                      }),
                      (t.clearMessagesTimer = function () {
                        try {
                          (t.isMessagesPollingStarted = !1),
                            clearInterval(t.messagesTimer);
                        } catch (e) {
                          a.Logger.error("CometChat: clearMessagesTimer", e);
                        }
                      }),
                      (t.clearAnalyticsPingTimer = function () {
                        try {
                          (t.isAnalyticsPingStarted = !1),
                            clearInterval(t.analyticsPingTimer);
                        } catch (e) {
                          a.Logger.error(
                            "CometChat: clearAnalyticsPingTimer",
                            e
                          );
                        }
                      }),
                      (t.startWSReconnectionTimer = function () {
                        (t.WSReconnectionInProgress = !0),
                          (t.WSReconnectionTimer = setInterval(function () {
                            try {
                              t.XMPPLogin(
                                t.user,
                                function () {
                                  a.Logger.info("XMPPLogin", "successful");
                                },
                                function () {
                                  a.Logger.info("XMPPLogin", "unsuccessful");
                                }
                              );
                            } catch (e) {
                              a.Logger.error(
                                "CometChat: startWSReconnectionTimer",
                                e
                              );
                            }
                          }, t.WSReconnectionTimerInterval));
                      }),
                      (t.clearWSReconnectionTimer = function () {
                        (t.WSReconnectionInProgress = !1),
                          clearInterval(t.WSReconnectionTimer);
                      }),
                      (t.getJWT = function (e) {
                        return new Promise(function (n, r) {
                          try {
                            Q.getEndPoint("getJWT").then(
                              function (o) {
                                var i = {
                                    appId: t.appId,
                                    Accept: "application/json",
                                    authToken: t.authToken,
                                    resource: t.getSessionId(),
                                    sdk: a.format(
                                      _.SDKHeader.sdk,
                                      _.SDKHeader.platform,
                                      _.SDKHeader.sdkVersion
                                    ),
                                    "Content-Type": "application/json",
                                  },
                                  s = {};
                                (s[_.JWT_API.KEYS.PASSTHROUGH] = e),
                                  u
                                    .postData(o.endpoint, o.method, s, i, !1)
                                    .then(function (e) {
                                      return e.json();
                                    })
                                    .then(function (e) {
                                      e.hasOwnProperty(
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .KEY_DATA
                                      )
                                        ? n(
                                            e[
                                              _.ResponseConstants.RESPONSE_KEYS
                                                .KEY_DATA
                                            ]
                                          )
                                        : r(new c.CometChatException(e.error));
                                    })
                                    .catch(function (e) {
                                      var t = {
                                        error: R.FETCH_ERROR.ERROR_IN_API_CALL,
                                      };
                                      r(new c.CometChatException(t));
                                    });
                              },
                              function (e) {
                                r(new c.CometChatException(e));
                              }
                            );
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getConnectionStatus = function () {
                        return this.currentConnectionStatus;
                      }),
                      (t.prototype.setConnectionStatus = function (e) {
                        t.currentConnectionStatus = e;
                      }),
                      (t.isExtensionEnabled = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            if (a.isFalsy(e))
                              return n(
                                new c.CometChatException(
                                  _.ExtensionErrors.INVALID_EXTENSION
                                )
                              );
                            a.getAppSettings().then(
                              function (r) {
                                if (r.extensions) {
                                  var o = r.extensions;
                                  if (0 < o.length) {
                                    var i = o.some(function (t) {
                                      return t.id === e;
                                    });
                                    return t(i);
                                  }
                                  return t(!1);
                                }
                                return n(
                                  new c.CometChatException(
                                    _.ExtensionErrors.EXTENSION_NOT_FOUND
                                  )
                                );
                              },
                              function (e) {
                                return n(new c.CometChatException(e));
                              }
                            );
                          } catch (e) {
                            return n(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getExtensionDetails = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            if (a.isFalsy(e))
                              return n(
                                new c.CometChatException(
                                  _.ExtensionErrors.INVALID_EXTENSION
                                )
                              );
                            a.getAppSettings().then(
                              function (r) {
                                if (r.extensions) {
                                  var o = r.extensions;
                                  if (0 < o.length) {
                                    var i = o.filter(function (t) {
                                      return t.id === e;
                                    });
                                    if (0 < i.length) {
                                      var s = new z.CCExtension(i[0]);
                                      return t(s);
                                    }
                                    return n(
                                      new c.CometChatException(
                                        _.ExtensionErrors.EXTENSION_NOT_FOUND
                                      )
                                    );
                                  }
                                  return n(
                                    new c.CometChatException(
                                      _.ExtensionErrors.EXTENSION_NOT_FOUND
                                    )
                                  );
                                }
                                return n(
                                  new c.CometChatException(
                                    _.ExtensionErrors.EXTENSION_NOT_FOUND
                                  )
                                );
                              },
                              function (e) {
                                return n(new c.CometChatException(e));
                              }
                            );
                          } catch (e) {
                            return n(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.getAppSettings = function () {
                        return new Promise(function (e, t) {
                          try {
                            u.makeApiCall("appSettings").then(
                              function (t) {
                                f.LocalStorage.getInstance().set(
                                  "app_settings",
                                  t.data
                                ),
                                  e(t.data);
                              },
                              function (e) {
                                t(new c.CometChatException(e.error));
                              }
                            );
                          } catch (e) {
                            t(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.isFeatureEnabled = function (e) {
                        return new Promise(function (t, n) {
                          try {
                            if (a.isFalsy(e))
                              return n(
                                new c.CometChatException(
                                  _.FeatureRestrictionErrors.INVALID_FEATURE
                                )
                              );
                            a.getAppSettings().then(
                              function (r) {
                                if (r.parameters) {
                                  var o = r.parameters;
                                  return o.hasOwnProperty(e) ? t(o[e]) : t(!1);
                                }
                                return n(
                                  new c.CometChatException(
                                    _.FeatureRestrictionErrors.FEATURE_NOT_FOUND
                                  )
                                );
                              },
                              function (e) {
                                return n(new c.CometChatException(e));
                              }
                            );
                          } catch (e) {
                            return n(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.logout = function () {
                        var e = this;
                        return new Promise(function (n, r) {
                          try {
                            t.didAnalyticsPingStart() &&
                              t.clearAnalyticsPingTimer(),
                              t.didMessagesPollingStart() &&
                                t.clearMessagesTimer(),
                              t.WSReconnectionInProgress &&
                                t.clearWSReconnectionTimer(),
                              (t.isLoggedOut = !0),
                              (t.pollingMessagesId = 0),
                              (t.pollingEnabled = !1),
                              (t.pollingInterval = 5e3),
                              (t.pollingEnabledInternally = !1),
                              (t.WSReconnectionStartTime = 0),
                              (t.WSReconnectionInProgress = !1),
                              t.setLastMessageId(0),
                              t.setAccidentalDisconnect(!1),
                              (t.isAnalyticsDisabled = !1),
                              (t.shouldFallBackToPolling = !0),
                              u.makeApiCall("userLogout").then(
                                function (r) {
                                  e.clearCache().then(function () {
                                    (t.apiKey = void 0),
                                      (t.user = void 0),
                                      (t.authToken = void 0),
                                      (t.cometChat = void 0),
                                      (t.mode = void 0),
                                      d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                                      t.pushToLoginListener(
                                        "",
                                        "Logout_Success"
                                      ),
                                      n(r.data);
                                  });
                                },
                                function (o) {
                                  e.clearCache().then(function () {
                                    (t.apiKey = void 0),
                                      (t.user = void 0),
                                      (t.authToken = void 0),
                                      (t.cometChat = void 0),
                                      (t.mode = void 0),
                                      d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                                      t.pushToLoginListener(
                                        "",
                                        "Logout_Success"
                                      ),
                                      new c.CometChatException(o.error).code ==
                                      R.SERVER_ERRORS.AUTH_ERR.code
                                        ? n({})
                                        : r(new c.CometChatException(o.error));
                                  });
                                }
                              );
                          } catch (e) {
                            r(new c.CometChatException(e));
                          }
                        });
                      }),
                      (t.callExtension = function (e, n, r, o) {
                        return (
                          void 0 === o && (o = {}),
                          new Promise(function (i, l) {
                            var d = a.format(
                                new s.EndpointFactory().extensionApi,
                                e,
                                t.appSettings.getRegion(),
                                r
                              ),
                              p = {
                                appId: t.appId,
                                Accept: "application/json",
                                authToken: t.authToken,
                                resource: t.getSessionId(),
                                sdk: a.format(
                                  _.SDKHeader.sdk,
                                  _.SDKHeader.platform,
                                  _.SDKHeader.sdkVersion
                                ),
                                "Content-Type": "application/json",
                              };
                            u.postData(d, n, o, p, !1)
                              .then(function (e) {
                                return e.json();
                              })
                              .then(function (e) {
                                e.hasOwnProperty(
                                  _.ResponseConstants.RESPONSE_KEYS.KEY_DATA
                                )
                                  ? i(
                                      e[
                                        _.ResponseConstants.RESPONSE_KEYS
                                          .KEY_DATA
                                      ]
                                    )
                                  : l(new c.CometChatException(e.error));
                              })
                              .catch(function (e) {
                                var t = {
                                  error: R.FETCH_ERROR.ERROR_IN_API_CALL,
                                };
                                l(t);
                              });
                          })
                        );
                      }),
                      (t.setSource = function (e, t, n) {
                        a.isFalsy(e) || (this.resource = e),
                          a.isFalsy(t) || (this.platform = t),
                          a.isFalsy(n) || (this.language = n);
                      }),
                      (t.clearCache = function () {
                        return new Promise(function (e, n) {
                          try {
                            f.LocalStorage.getInstance()
                              .clearStore()
                              .then(function () {
                                y.UserStore.getInstance()
                                  .clearStore()
                                  .then(function () {
                                    S.MessagesStore.getInstance()
                                      .clearStore()
                                      .then(function () {
                                        t.removeDataFromSessionStorage(
                                          _.SESSION_STORE.SESSION_ID
                                        ),
                                          a.Logger.info(
                                            "CometChat: clearCache => All store cleared successfully",
                                            "true"
                                          ),
                                          e(!0);
                                      });
                                  });
                              });
                          } catch (e) {
                            a.Logger.error("CometChat: clearCache", e), n(e);
                          }
                        });
                      }),
                      (t.typingTimer = function () {
                        try {
                          setInterval(function () {
                            x.TypingNotificationController.clearTimer();
                          }, 500);
                        } catch (e) {
                          a.Logger.error("CometChat: typingTimer", e);
                        }
                      }),
                      (t.prototype.internalLogout = function () {
                        try {
                          t.didAnalyticsPingStart() &&
                            t.clearAnalyticsPingTimer(),
                            t.didMessagesPollingStart() &&
                              t.clearMessagesTimer(),
                            t.WSReconnectionInProgress &&
                              t.clearWSReconnectionTimer(),
                            (t.isLoggedOut = !0),
                            (t.pollingMessagesId = 0),
                            (t.pollingEnabled = !1),
                            (t.pollingInterval = 5e3),
                            (t.pollingEnabledInternally = !1),
                            (t.WSReconnectionStartTime = 0),
                            (t.WSReconnectionInProgress = !1),
                            t.setLastMessageId(0),
                            t.setAccidentalDisconnect(!1),
                            (t.isAnalyticsDisabled = !1),
                            (t.shouldFallBackToPolling = !0),
                            t.clearCache().then(function () {
                              (t.apiKey = void 0),
                                (t.user = void 0),
                                (t.authToken = void 0),
                                (t.cometChat = void 0),
                                (t.mode = void 0),
                                d.XMPPConnectionHelper.getInstance().XMPPDisconnect(),
                                t.pushToLoginListener("", "Logout_Success");
                            });
                        } catch (e) {
                          a.Logger.error("CometChat: internalLogout", e);
                        }
                      }),
                      (t.initialzed = !1),
                      (t.isNative = !1),
                      (t.CometChatException = c.CometChatException),
                      (t.TextMessage = E.TextMessage),
                      (t.MediaMessage = h.MediaMessage),
                      (t.CustomMessage = Y.CustomMessage),
                      (t.Action = O.Action),
                      (t.Call = v.Call),
                      (t.TypingIndicator = U.TypingIndicator),
                      (t.Group = m.Group),
                      (t.AppUser = l.User),
                      (t.User = l.User),
                      (t.GroupMember = G.GroupMember),
                      (t.Conversation = j.Conversation),
                      (t.USER_STATUS = {
                        ONLINE: _.PresenceConstatnts.STATUS.ONLINE,
                        OFFLINE: _.PresenceConstatnts.STATUS.OFFLINE,
                      }),
                      (t.MessagesRequest = w.DefaultMessagesRequest),
                      (t.MessagesRequestBuilder =
                        w.DefaultMessagesRequestBuilder),
                      (t.UsersRequest = L.UsersRequest),
                      (t.UsersRequestBuilder = L.UsersRequestBuilder),
                      (t.ConversationsRequest = b.ConversationsRequest),
                      (t.ConversationsRequestBuilder =
                        b.ConversationsRequestBuilder),
                      (t.BlockedUsersRequest = K.BlockedUsersRequest),
                      (t.BlockedUsersRequestBuilder =
                        K.BlockedUsersRequestBuilder),
                      (t.GroupsRequest = P.GroupsRequest),
                      (t.GroupsRequestBuilder = P.GroupsRequestBuilder),
                      (t.GroupMembersRequest = M.GroupMembersRequest),
                      (t.GroupMembersRequestBuilder =
                        M.GroupMembersRequestBuilder),
                      (t.BannedMembersRequest = M.GroupMembersRequest),
                      (t.BannedMembersRequestBuilder =
                        M.GroupOutCastMembersRequestBuilder),
                      (t.AppSettings = H.AppSettings),
                      (t.AppSettingsBuilder = H.AppSettingsBuilder),
                      (t.MessageListener = I.MessageEventListener),
                      (t.UserListener = I.UserEventListener),
                      (t.GroupListener = I.GroupEventListener),
                      (t.OngoingCallListener = I.UserCallEventListener),
                      (t.CallListener = I.CallEventListener),
                      (t.ConnectionListener = d.XMPPConnectionEventListener),
                      (t.LoginListener = I.LoginEventListener),
                      (t.MESSAGE_TYPE = _.MessageConstatnts.TYPE),
                      (t.CATEGORY_MESSAGE =
                        _.MessageConstatnts.CATEGORY.MESSAGE),
                      (t.CATEGORY_ACTION = _.MessageConstatnts.CATEGORY.ACTION),
                      (t.CATEGORY_CALL = _.MessageConstatnts.CATEGORY.CALL),
                      (t.CATEGORY_CUSTOM = _.MessageConstatnts.CATEGORY.CUSTOM),
                      (t.ACTION_TYPE = _.ActionConstatnts.ACTIONS),
                      (t.CALL_TYPE = _.CallConstants.CALL_TYPE),
                      (t.RECEIVER_TYPE = _.MessageConstatnts.RECEIVER_TYPE),
                      (t.CALL_STATUS = _.CallConstants.CALL_STATUS),
                      (t.CallController = N.CallController),
                      (t.GROUP_MEMBER_SCOPE = _.GROUP_MEMBER_SCOPE),
                      (t.GROUP_TYPE = _.GROUP_TYPE),
                      (t.MESSAGE_REQUEST =
                        _.MessageConstatnts.PAGINATION.CURSOR_FILEDS),
                      (t.CometChatExtension = k.CometChatExtension),
                      (t.ExtensionManager = F.ExtensionManager),
                      (t.isCall = !1),
                      (t.endpointFactory = new s.EndpointFactory()),
                      (t.startTypingCount = 0),
                      (t.endTypingCount = 0),
                      (t.CometChatHelper = V.CometChatHelper),
                      (t.WSReconnectionStartTime = 0),
                      (t.WSMaxReconnectionLimit = 10),
                      (t.WSCurrentReconnectionCount = 0),
                      (t.WSReconnectionInProgress = !1),
                      (t.WSReconnectionPeriod = 3e4),
                      (t.WSReconnectionTimerInterval = 3e4),
                      (t.pollingEnabledInternally = !1),
                      (t.accidentalDisconnect = !1),
                      (t.successfulPingTimeStamp = 0),
                      (t.currentConnectionStatus =
                        _.CONNECTION_STATUS.DISCONNECTED),
                      (t.CONNECTION_STATUS = _.CONNECTION_STATUS),
                      (t.Attachment = X.Attachment),
                      (t.isConnectingFromInit = !1),
                      (t.loginInProgress = !1),
                      (t.lastMessageId = 0),
                      (t.pollingEnabled = !1),
                      (t.pollingInterval = 5e3),
                      (t.pollingLimit = 100),
                      (t.pollingAffix = "append"),
                      (t.pollingMessagesId = 0),
                      (t.settingsInterval = 6e4),
                      (t.isMessagesPollingStarted = !1),
                      (t.isAnalyticsPingStarted = !1),
                      (t.isLoggedOut = !0),
                      (t.isAnalyticsDisabled = !1),
                      (t.CallSettings = W.CallSettings),
                      (t.CallSettingsBuilder = W.CallSettingsBuilder),
                      (t.MediaDevice = $.MediaDevice),
                      (t.CALL_MODE = _.CallConstants.CALL_MODE),
                      (t.shouldFallBackToPolling = !0),
                      t
                    );
                  })();
                t.CometChat = te;
              }.call(this, n(28)));
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  });
              t.__esModule = !0;
              var i = n(2),
                s = n(12),
                a = n(0),
                c = (function () {
                  function e() {
                    for (var e = [], t = 0; t < arguments.length; t++)
                      e[t] = arguments[t];
                    if (
                      ((this.hasBlockedMe = !1),
                      (this.blockedByMe = !1),
                      1 === e.length)
                    )
                      typeof e[0] ===
                      a.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        ? (this.uid = e[0])
                        : ((this.uid = e[0].uid),
                          (this.name = e[0].name),
                          e[0].authToken && (this.authToken = e[0].authToken),
                          e[0].avatar && (this.avatar = e[0].avatar),
                          e[0].lastActiveAt &&
                            (this.lastActiveAt = e[0].lastActiveAt),
                          e[0].link && (this.link = e[0].link),
                          e[0].metadata && (this.metadata = e[0].metadata),
                          e[0].role && (this.role = e[0].role),
                          e[0].statusMessage &&
                            (this.statusMessage = e[0].statusMessage),
                          e[0].status && "offline" !== e[0].status
                            ? (this.status = "online")
                            : (this.status = "offline"),
                          e[0].tags && (this.tags = e[0].tags));
                    else {
                      if (2 !== e.length)
                        throw new i.CometChatException(
                          s.ERRORS.PARAMETER_MISSING
                        );
                      (this.uid = e[0]), (this.name = e[1]);
                    }
                  }
                  return (
                    (e.prototype.getUid = function () {
                      return this.uid.toString();
                    }),
                    (e.prototype.setUid = function (e) {
                      this.uid = e;
                    }),
                    (e.prototype.getName = function () {
                      return this.name.toString();
                    }),
                    (e.prototype.setName = function (e) {
                      e && (this.name = e);
                    }),
                    (e.prototype.getAuthToken = function () {
                      return this.authToken;
                    }),
                    (e.prototype.setAuthToken = function (e) {
                      this.authToken = e;
                    }),
                    (e.prototype.getAvatar = function () {
                      return this.avatar;
                    }),
                    (e.prototype.setAvatar = function (e) {
                      this.avatar = e;
                    }),
                    (e.prototype.getLastActiveAt = function () {
                      return this.lastActiveAt;
                    }),
                    (e.prototype.setLastActiveAt = function (e) {
                      this.lastActiveAt = e;
                    }),
                    (e.prototype.getLink = function () {
                      return this.link;
                    }),
                    (e.prototype.setLink = function (e) {
                      return (this.link = e);
                    }),
                    (e.prototype.getMetadata = function () {
                      return this.metadata;
                    }),
                    (e.prototype.setMetadata = function (e) {
                      this.metadata = e;
                    }),
                    (e.prototype.getRole = function () {
                      return this.role;
                    }),
                    (e.prototype.setRole = function (e) {
                      this.role = e;
                    }),
                    (e.prototype.getStatus = function () {
                      return this.status;
                    }),
                    (e.prototype.setStatus = function (e) {
                      this.status = e;
                    }),
                    (e.prototype.getStatusMessage = function () {
                      return this.statusMessage;
                    }),
                    (e.prototype.setStatusMessage = function (e) {
                      this.statusMessage = e;
                    }),
                    (e.prototype.setBlockedByMe = function (e) {
                      this.blockedByMe = e;
                    }),
                    (e.prototype.getBlockedByMe = function () {
                      return this.blockedByMe;
                    }),
                    (e.prototype.setHasBlockedMe = function (e) {
                      this.hasBlockedMe = e;
                    }),
                    (e.prototype.getHasBlockedMe = function () {
                      return this.hasBlockedMe;
                    }),
                    (e.prototype.setTags = function (e) {
                      this.tags = e;
                    }),
                    (e.prototype.getTags = function () {
                      return this.tags;
                    }),
                    e
                  );
                })(),
                u = (function (e) {
                  function t(t) {
                    var n = e.call(this, t) || this;
                    return (
                      (n.wsChannel = t.wsChannel), t.jwt && (n.jwt = t.jwt), n
                    );
                  }
                  return (
                    o(t, e),
                    (t.prototype.getWsChannel = function () {
                      return this.wsChannel;
                    }),
                    (t.prototype.getJWT = function () {
                      return this.jwt;
                    }),
                    t
                  );
                })((t.User = c));
              t.Me = u;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(30),
                o = n(3),
                i = n(1),
                s = n(2),
                a = n(12),
                c = n(0);
              function u(e, t, n, r, o) {
                var s;
                return (
                  void 0 === e && (e = ""),
                  void 0 === t && (t = "GET"),
                  void 0 === n && (n = {}),
                  void 0 === r && (r = {}),
                  (n = i.isFalsy(n)
                    ? void 0
                    : ("GET" == t &&
                        ((e += "?"),
                        Object.keys(n).map(function (t, r) {
                          e =
                            r === Object.keys(n).length - 1
                              ? e + t + "=" + n[t]
                              : e + t + "=" + n[t] + "&";
                        }),
                        (n = void 0)),
                      o &&
                        ((s = new FormData()),
                        Object.keys(n).map(function (e) {
                          "data" != e
                            ? "metadata" != e && s.append(e, n[e])
                            : s.append(e, JSON.stringify(n[e]));
                        })),
                      JSON.stringify(n))),
                  fetch(e, {
                    method: t,
                    mode: "cors",
                    cache: "no-cache",
                    headers: r,
                    redirect: "follow",
                    referrer: "no-referrer",
                    body: o ? s : n,
                  })
                );
              }
              (t.makeApiCall = function (e, t, n, l) {
                void 0 === e && (e = ""),
                  void 0 === t && (t = {}),
                  void 0 === n && (n = {});
                var d = o.CometChat.getInstance(o.CometChat.getAppId());
                return new Promise(function (p, f) {
                  try {
                    r.getEndPoint(e, t)
                      .then(function (t) {
                        var r = {
                          resource: o.CometChat.getSessionId(),
                          appId: o.CometChat.getAppId(),
                          Accept: "application/json",
                          sdk: i.format(
                            c.SDKHeader.sdk,
                            c.SDKHeader.platform,
                            c.SDKHeader.sdkVersion
                          ),
                        };
                        l || (r["Content-Type"] = "application/json"),
                          t.hasOwnProperty("isAdminApi") && t.isAdminApi
                            ? d.getApiKey()
                              ? (r.apiKey = d.getApiKey())
                              : f({
                                  error: {
                                    code: "API_KEY_NOT_SET",
                                    message:
                                      "An apiKey is needed to use the " +
                                      e +
                                      " api.",
                                    name: "API_KEY_NOT_SET",
                                  },
                                })
                            : d.getAuthToken()
                            ? (r.authToken = d.getAuthToken())
                            : f({
                                error: {
                                  code: "USER_NOT_LOGED_IN",
                                  message:
                                    "An authToken is need to use the " +
                                    e +
                                    " end-point. PS- We are aware of the spelling mistake, but in order to maintain backward compatibility we cannot change it :(",
                                  name: "User not logged-in",
                                },
                              }),
                          u(t.endpoint, t.method, n, r, l)
                            .then(function (e) {
                              return e.json();
                            })
                            .then(function (e) {
                              if (e.hasOwnProperty("data"))
                                e.data.hasOwnProperty("authToken") &&
                                  o.CometChat.setAuthToken(e.data.authToken),
                                  p(e);
                              else {
                                if (e.hasOwnProperty("error")) {
                                  var t = e.error;
                                  t.hasOwnProperty("code") &&
                                    t.code ===
                                      c.API_ERROR_CODES
                                        .AUTH_ERR_AUTH_TOKEN_NOT_FOUND &&
                                    o.CometChat.getInstance().internalLogout();
                                }
                                f(e);
                              }
                            })
                            .catch(function (e) {
                              var t = {
                                error: a.FETCH_ERROR.ERROR_IN_API_CALL,
                              };
                              f(t);
                            });
                      })
                      .catch(function (e) {
                        return f;
                      });
                  } catch (e) {
                    f(new s.CometChatException(e));
                  }
                });
              }),
                (t.makeAdminApiCall = function (e, t, n, s) {
                  void 0 === e && (e = ""),
                    void 0 === t && (t = {}),
                    void 0 === n && (n = {});
                  var l = o.CometChat.getInstance(o.CometChat.getAppId());
                  return new Promise(function (d, p) {
                    r.getEndPoint(e, t)
                      .then(function (t) {
                        var r = {
                          appId: o.CometChat.getAppId(),
                          Accept: "application/json",
                          sdk: i.format(
                            c.SDKHeader.sdk,
                            c.SDKHeader.platform,
                            c.SDKHeader.sdkVersion
                          ),
                        };
                        s || (r["Content-Type"] = "application/json"),
                          t.hasOwnProperty("isAdminApi") && t.isAdminApi
                            ? l.getApiKey()
                              ? (r.apiKey = l.getApiKey())
                              : p({
                                  error:
                                    "An apiKey is need to use the " +
                                    e +
                                    " api.",
                                })
                            : l.getAuthToken()
                            ? (r.authToken = l.getAuthToken())
                            : p({
                                error:
                                  "An authToken is need to use the " +
                                  e +
                                  " api.",
                              }),
                          u(t.endpoint, t.method, n, r, s)
                            .then(function (e) {
                              return e.json();
                            })
                            .then(function (e) {
                              e.hasOwnProperty("data")
                                ? (e.data.hasOwnProperty("authToken") &&
                                    o.CometChat.setAuthToken(e.data.authToken),
                                  d(e))
                                : p(e);
                            })
                            .catch(function (e) {
                              var t = {
                                error: a.FETCH_ERROR.ERROR_IN_API_CALL,
                              };
                              p(t);
                            });
                      })
                      .catch(function (e) {
                        return p;
                      });
                  });
                }),
                (t.postData = u);
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(0),
                o = (function () {
                  function e(e, t, n, r, o, i, s) {
                    (this.hasJoined = !1),
                      (this.membersCount = 0),
                      (this.guid = e),
                      t && (this.name = t),
                      n && (this.type = n),
                      (!r && "" !== r) ||
                        "password" != n ||
                        (this.password = r),
                      (o || "" === o) && (this.icon = o),
                      (i || "" === i) && (this.description = i),
                      s && (this.hasJoined = s);
                  }
                  return (
                    (e.prototype.getGuid = function () {
                      return this.guid;
                    }),
                    (e.prototype.setGuid = function (e) {
                      this.guid = e;
                    }),
                    (e.prototype.getName = function () {
                      return this.name;
                    }),
                    (e.prototype.setName = function (e) {
                      e && (this.name = e);
                    }),
                    (e.prototype.getType = function () {
                      return this.type;
                    }),
                    (e.prototype.setType = function (e) {
                      this.type = e;
                    }),
                    (e.prototype.setPassword = function (e) {
                      this.password = e;
                    }),
                    (e.prototype.getIcon = function () {
                      return this.icon;
                    }),
                    (e.prototype.setIcon = function (e) {
                      this.icon = e;
                    }),
                    (e.prototype.getDescription = function () {
                      return this.description;
                    }),
                    (e.prototype.setDescription = function (e) {
                      this.description = e;
                    }),
                    (e.prototype.getOwner = function () {
                      return this.owner;
                    }),
                    (e.prototype.setOwner = function (e) {
                      this.owner = e;
                    }),
                    (e.prototype.getMetadata = function () {
                      return this.metadata;
                    }),
                    (e.prototype.setMetadata = function (e) {
                      this.metadata = e;
                    }),
                    (e.prototype.getCreatedAt = function () {
                      return this.createdAt;
                    }),
                    (e.prototype.setCreatedAt = function (e) {
                      this.createdAt = e;
                    }),
                    (e.prototype.getUpdatedAt = function () {
                      return this.updatedAt;
                    }),
                    (e.prototype.setUpdatedAt = function (e) {
                      this.updatedAt = e;
                    }),
                    (e.prototype.getHasJoined = function () {
                      return this.hasJoined;
                    }),
                    (e.prototype.setHasJoined = function (e) {
                      this.hasJoined = e;
                    }),
                    (e.prototype.getWsChannel = function () {
                      return this.wsChannel;
                    }),
                    (e.prototype.setWsChannel = function (e) {
                      this.wsChannel = e;
                    }),
                    (e.prototype.setScope = function (e) {
                      this.scope = e;
                    }),
                    (e.prototype.getScope = function () {
                      return this.scope;
                    }),
                    (e.prototype.getJoinedAt = function () {
                      return this.joinedAt;
                    }),
                    (e.prototype.setJoinedAt = function (e) {
                      this.joinedAt = e;
                    }),
                    (e.prototype.getMembersCount = function () {
                      return this.membersCount;
                    }),
                    (e.prototype.setMembersCount = function (e) {
                      this.membersCount = e;
                    }),
                    (e.prototype.setTags = function (e) {
                      this.tags = e;
                    }),
                    (e.prototype.getTags = function () {
                      return this.tags;
                    }),
                    (e.TYPE = r.GroupType),
                    (e.Type = e.TYPE),
                    e
                  );
                })();
              t.Group = o;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(17),
                o = n(10),
                i = n(18),
                s = n(5),
                a = n(22),
                c = n(1),
                u = n(0),
                l = n(14),
                d = n(23),
                p = n(24),
                f = n(44),
                h = n(4),
                E = n(2),
                g = n(19),
                S = n(20),
                C = n(3),
                _ = n(8),
                m = (function () {
                  function e() {}
                  return (
                    (e.trasformXMPPMessage = function (e) {
                      var t = {};
                      try {
                        var n = JSON.parse(
                          unescape(
                            o.parseHTML(e.getElementsByTagName("body")[0])
                          )
                            .trim()
                            .toString()
                        );
                        t = this.trasformJSONMessge(n);
                      } catch (e) {
                        c.Logger.error(
                          "MessageController: transformXMPPMessage",
                          { e }
                        );
                      }
                      return t;
                    }),
                    (e.checkIfCabon = function (e) {
                      try {
                        return (
                          0 < e.getElementsByTagName("forwarded").length &&
                            e.getElementsByTagName("forwarded")[0],
                          0 < e.getElementsByTagName("forwarded").length
                        );
                      } catch (e) {
                        c.Logger.error("MessageController: checkIfCabon", {
                          e,
                        });
                      }
                    }),
                    (e.trasformJSONMessge = function (e) {
                      try {
                        var t = void 0;
                        switch (e[u.MessageConstatnts.KEYS.CATEGORY]) {
                          case u.MessageConstatnts.CATEGORY.ACTION:
                            t = d.Action.actionFromJSON(e);
                            break;
                          case u.MessageConstatnts.CATEGORY.CALL:
                            t = p.Call.callFromJSON(e);
                            break;
                          case u.MessageConstatnts.CATEGORY.MESSAGE:
                            switch (e[u.MessageConstatnts.KEYS.TYPE]) {
                              case u.MessageConstatnts.TYPE.TEXT:
                                t = new r.TextMessage(
                                  e[u.MessageConstatnts.KEYS.RECEIVER],
                                  e[u.MessageConstatnts.KEYS.DATA][
                                    u.MessageConstatnts.KEYS.TEXT
                                  ],
                                  e[u.MessageConstatnts.KEYS.RECEIVER_TYPE]
                                );
                                break;
                              case u.MessageConstatnts.TYPE.CUSTOM:
                                t = new S.CustomMessage(
                                  e[u.MessageConstatnts.KEYS.RECEIVER],
                                  e[u.MessageConstatnts.KEYS.DATA][
                                    u.MessageConstatnts.KEYS.CUSTOM_DATA
                                  ],
                                  e[u.MessageConstatnts.KEYS.RECEIVER_TYPE]
                                );
                                break;
                              default:
                                if (
                                  ((t = new i.MediaMessage(
                                    e[u.MessageConstatnts.KEYS.RECEIVER],
                                    e[u.MessageConstatnts.KEYS.DATA][
                                      u.MessageConstatnts.KEYS.URL
                                    ],
                                    e[u.MessageConstatnts.KEYS.TYPE],
                                    e[u.MessageConstatnts.KEYS.RECEIVER_TYPE]
                                  )),
                                  e.hasOwnProperty(
                                    u.MessageConstatnts.KEYS.DATA
                                  ))
                                ) {
                                  var n = e[u.MessageConstatnts.KEYS.DATA];
                                  if (
                                    n.hasOwnProperty(
                                      u.MessageConstatnts.KEYS.ATTATCHMENTS
                                    )
                                  ) {
                                    var o,
                                      s =
                                        n[
                                          u.MessageConstatnts.KEYS.ATTATCHMENTS
                                        ];
                                    new Array(),
                                      s.map(function (e) {
                                        o = new g.Attachment(e);
                                      }),
                                      t.setAttachment(o);
                                  }
                                  n.hasOwnProperty(
                                    u.MessageConstatnts.KEYS.TEXT
                                  ) &&
                                    t.setCaption(
                                      n[u.MessageConstatnts.KEYS.TEXT]
                                    );
                                }
                                t.hasOwnProperty("file") && delete t.file;
                            }
                            break;
                          case u.MessageConstatnts.CATEGORY.CUSTOM:
                            t = new S.CustomMessage(
                              e[u.MessageConstatnts.KEYS.RECEIVER],
                              e[u.MessageConstatnts.KEYS.DATA][
                                u.MessageConstatnts.KEYS.CUSTOM_DATA
                              ],
                              e[u.MessageConstatnts.KEYS.RECEIVER_TYPE],
                              e.type
                            );
                        }
                        e[u.MessageConstatnts.KEYS.MY_RECEIPTS] &&
                          ((e[u.MessageConstatnts.KEYS.MY_RECEIPTS] =
                            e[u.MessageConstatnts.KEYS.MY_RECEIPTS]),
                          Object.keys(
                            e[u.MessageConstatnts.KEYS.MY_RECEIPTS]
                          ).map(function (t) {
                            var n = new f.MessageReceipt();
                            t == u.DELIVERY_RECEIPTS.DELIVERED_AT &&
                              (n.setReceiptType(
                                n.RECEIPT_TYPE.DELIVERY_RECEIPT
                              ),
                              n.setDeliveredAt(
                                e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                  u.DELIVERY_RECEIPTS.DELIVERED_AT
                                ]
                              ),
                              c.isFalsy(
                                e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                  u.DELIVERY_RECEIPTS.RECIPIENT
                                ]
                              )
                                ? (e[u.DELIVERY_RECEIPTS.DELIVERED_TO_ME_AT] =
                                    e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                      u.DELIVERY_RECEIPTS.DELIVERED_AT
                                    ])
                                : n.setSender(
                                    e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                      u.DELIVERY_RECEIPTS.RECIPIENT
                                    ]
                                  ),
                              n.setReceiverType(
                                e[u.MessageConstatnts.KEYS.RECEIVER_TYPE]
                              ),
                              n.setReceiver(
                                e[u.MessageConstatnts.KEYS.RECEIVER]
                              )),
                              e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                u.READ_RECEIPTS.READ_AT
                              ] &&
                                (n.setReceiptType(n.RECEIPT_TYPE.READ_RECEIPT),
                                n.setReadAt(
                                  e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                    u.READ_RECEIPTS.READ_AT
                                  ]
                                ),
                                c.isFalsy(
                                  e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                    u.READ_RECEIPTS.RECIPIENT
                                  ]
                                )
                                  ? (e[u.READ_RECEIPTS.READ_BY_ME_AT] =
                                      e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                        u.READ_RECEIPTS.READ_AT
                                      ])
                                  : n.setSender(
                                      e[u.MessageConstatnts.KEYS.MY_RECEIPTS][
                                        u.READ_RECEIPTS.RECIPIENT
                                      ]
                                    ),
                                n.setReceiverType(
                                  e[u.MessageConstatnts.KEYS.RECEIVER_TYPE]
                                ),
                                n.setReceiver(
                                  e[u.MessageConstatnts.KEYS.RECEIVER]
                                ));
                          }));
                        try {
                          if (
                            (Object.assign(t, e),
                            (e = t).parentId &&
                              ((e.parentMessageId = e.parentId),
                              delete e.parentId),
                            e instanceof r.TextMessage)
                          )
                            e.setSender(e.getSender()),
                              e.setReceiver(e.getReceiver()),
                              e.getData()[u.MessageConstatnts.KEYS.METADATA] &&
                                e.setMetadata(
                                  e.getData()[u.MessageConstatnts.KEYS.METADATA]
                                );
                          else if (e instanceof i.MediaMessage)
                            e.getData()[u.MessageConstatnts.KEYS.METADATA] &&
                              e.setMetadata(
                                e.getData()[u.MessageConstatnts.KEYS.METADATA]
                              ),
                              e.setSender(e.getSender()),
                              e.setReceiver(e.getReceiver());
                          else if (e instanceof d.Action)
                            e.setSender(e.getSender()),
                              e.setReceiver(e.getActionFor()),
                              e.setActionBy(e.getActionBy()),
                              e.setActionOn(e.getActionOn()),
                              e.setActionFor(e.getActionFor()),
                              e.setMessage(e.getMessage());
                          else if (e instanceof p.Call) {
                            try {
                              e.setSender(e.getSender());
                            } catch (t) {
                              c.Logger.error(
                                "MessageController: trasformJSONMessge: setSender",
                                t
                              );
                            }
                            try {
                              e.setCallInitiator(e.getCallInitiator());
                            } catch (t) {
                              c.Logger.error(
                                "MessageController: trasformJSONMessge: setCallInitiator",
                                t
                              );
                            }
                            try {
                              e.setReceiver(e.getCallReceiver()),
                                e.setCallReceiver(e.getCallReceiver());
                            } catch (t) {
                              c.Logger.error(
                                "MessageController: trasformJSONMessge: setCallreceiver",
                                t
                              );
                            }
                          } else
                            e instanceof S.CustomMessage &&
                              (e.getData()[u.MessageConstatnts.KEYS.METADATA] &&
                                e.setMetadata(
                                  e.getData()[u.MessageConstatnts.KEYS.METADATA]
                                ),
                              e.setSubType(
                                e.getData()[
                                  u.MessageConstatnts.KEYS.CUSTOM_SUB_TYPE
                                ]
                              ),
                              e.setSender(e.getSender()),
                              e.setReceiver(e.getReceiver()));
                        } catch (t) {
                          c.Logger.error(
                            "MessageController: trasformJSONMessge: Main",
                            t
                          ),
                            (e = null);
                        }
                        return e;
                      } catch (t) {
                        c.Logger.error(
                          "MessageController: trasformJSONMessge",
                          t
                        );
                      }
                    }),
                    (e.getOfflineHistory = function (t, n) {
                      void 0 === t && (t = 1e3), void 0 === n && (n = 1);
                      try {
                        a.MessagesStore.getInstance();
                        var r = [];
                        s.makeApiCall(
                          "getMessages",
                          {},
                          this.createData(t, n)
                        ).then(function (t) {
                          return (
                            c.isFalsy(t.data) ||
                              t.data.map(function (t) {
                                l.XMPPConnectionHelper.getInstance().trigerMessageHandler(
                                  t
                                ),
                                  r.push(e.trasformJSONMessge(t));
                              }),
                            !0
                          );
                        });
                      } catch (t) {
                        c.Logger.error(
                          "MessageController: getOfflineHistory",
                          t
                        );
                      }
                    }),
                    (e.getAllMessage = function (t, n, r, o) {
                      var i = this;
                      void 0 === t && (t = 100);
                      var a = [];
                      return new Promise(function (u, l) {
                        try {
                          s.makeApiCall(
                            "getMessages",
                            {},
                            i.createAllMessageData(t, n, r, o)
                          ).then(
                            function (t) {
                              c.isFalsy(t.data) ||
                                (t.data.map(function (t) {
                                  a.push(e.trasformJSONMessge(t));
                                }),
                                u(a));
                            },
                            function (e) {
                              c.Logger.error(
                                "Error on fetching all message",
                                e
                              ),
                                u([]);
                            }
                          );
                        } catch (e) {
                          l(new E.CometChatException(e));
                        }
                      });
                    }),
                    (e.createData = function (e, t) {
                      return (
                        void 0 === t && (t = 0),
                        {
                          per_page: e,
                          cursorValue: t,
                          cursorField:
                            u.MessageConstatnts.PAGINATION.CURSOR_FILEDS.ID,
                          cursorAffix: c.isFalsy(t)
                            ? u.MessageConstatnts.PAGINATION.AFFIX.PREPEND
                            : u.MessageConstatnts.PAGINATION.AFFIX.APPEND,
                        }
                      );
                    }),
                    (e.createAllMessageData = function (e, t, n, r) {
                      return {
                        per_page: e,
                        cursorValue: t,
                        cursorField: n,
                        cursorAffix: r,
                      };
                    }),
                    (e.isDeliveryReceipt = function (e) {
                      try {
                        return (
                          0 <
                          e.getElementsByTagName(u.DELIVERY_RECEIPTS.RECEIVED)
                            .length
                        );
                      } catch (e) {
                        c.Logger.error(
                          "MessageController: isDeliveryReceipts",
                          e
                        );
                      }
                    }),
                    (e.isReadRceipt = function (e) {
                      try {
                        return (
                          0 <
                          e.getElementsByTagName(u.READ_RECEIPTS.READ).length
                        );
                      } catch (e) {
                        c.Logger.error(
                          "MessageController: isDeliveryReceipts",
                          e
                        );
                      }
                    }),
                    (e.processDeliveryReceipt = function (e) {
                      return new Promise(function (t, n) {
                        try {
                          var r = e.getElementsByTagName(
                              u.DELIVERY_RECEIPTS.RECEIVED
                            )[0],
                            i = e.getElementsByTagName(
                              u.DELIVERY_RECEIPTS.DELIVERED_AT
                            )[0],
                            s = void 0;
                          if (e.getElementsByTagName("user")[0]) {
                            delete (s = new h.User(
                              JSON.parse(
                                unescape(
                                  o.parseHTML(e.getElementsByTagName("user")[0])
                                )
                                  .trim()
                                  .toString()
                              )
                            )).authToken;
                            var a = new f.MessageReceipt();
                            a.setSender(s),
                              r.getAttribute(
                                u.DELIVERY_RECEIPTS.RECEIVER_TYPE
                              ) == u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                ? (a.setReceiverType(
                                    u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                  ),
                                  a.setReceiver(
                                    r.getAttribute(
                                      u.DELIVERY_RECEIPTS.RECEIVER_ID
                                    )
                                  ))
                                : (a.setReceiverType(
                                    u.MessageConstatnts.RECEIVER_TYPE.USER
                                  ),
                                  a.setReceiver(
                                    o.getUidFromJid(
                                      e.getAttribute(
                                        u.MessageConstatnts.XMPP_KEYS.TO
                                      )
                                    )
                                  )),
                              a.setReceiptType(a.RECEIPT_TYPE.DELIVERY_RECEIPT),
                              a.setMessageId(
                                o.getmessageIdFromStanzaId(
                                  r.getAttribute(u.DELIVERY_RECEIPTS.ID)
                                )
                              ),
                              a.setTimestamp(
                                i.getAttribute(u.DELIVERY_RECEIPTS.TIME)
                              ),
                              a.setDeliveredAt(
                                i.getAttribute(u.DELIVERY_RECEIPTS.TIME)
                              ),
                              t(a);
                          } else
                            l.XMPPConnectionHelper.getInstance().getUsersVCard(
                              o.getUidFromJid(
                                e.getAttribute(
                                  u.MessageConstatnts.XMPP_KEYS.FROM
                                )
                              ),
                              function (n) {
                                var s = new f.MessageReceipt();
                                s.setSender(n),
                                  r.getAttribute(
                                    u.DELIVERY_RECEIPTS.RECEIVER_TYPE
                                  ) == u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                    ? (s.setReceiverType(
                                        u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                      ),
                                      s.setReceiver(
                                        r.getAttribute(
                                          u.DELIVERY_RECEIPTS.RECEIVER_ID
                                        )
                                      ))
                                    : (s.setReceiverType(
                                        u.MessageConstatnts.RECEIVER_TYPE.USER
                                      ),
                                      s.setReceiver(
                                        o.getUidFromJid(
                                          e.getAttribute(
                                            u.MessageConstatnts.XMPP_KEYS.TO
                                          )
                                        )
                                      )),
                                  s.setReceiptType(
                                    s.RECEIPT_TYPE.DELIVERY_RECEIPT
                                  ),
                                  s.setMessageId(
                                    o.getmessageIdFromStanzaId(
                                      r.getAttribute(u.DELIVERY_RECEIPTS.ID)
                                    )
                                  ),
                                  s.setTimestamp(
                                    i.getAttribute(u.DELIVERY_RECEIPTS.TIME)
                                  ),
                                  s.setDeliveredAt(
                                    i.getAttribute(u.DELIVERY_RECEIPTS.TIME)
                                  ),
                                  t(s);
                              }
                            );
                        } catch (s) {
                          n(new E.CometChatException(s));
                        }
                      });
                    }),
                    (e.processReadReceipt = function (e) {
                      return new Promise(function (t, n) {
                        try {
                          var r = e.getElementsByTagName(
                              u.READ_RECEIPTS.READ
                            )[0],
                            i = e.getElementsByTagName(
                              u.READ_RECEIPTS.READ_AT
                            )[0],
                            s = void 0;
                          if (e.getElementsByTagName("user")[0]) {
                            delete (s = new h.User(
                              JSON.parse(
                                unescape(
                                  o.parseHTML(e.getElementsByTagName("user")[0])
                                )
                                  .trim()
                                  .toString()
                              )
                            )).authToken;
                            var a = new f.MessageReceipt();
                            a.setSender(s),
                              r.getAttribute(u.READ_RECEIPTS.RECEIVER_TYPE) ==
                              u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                ? (a.setReceiverType(
                                    u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                  ),
                                  a.setReceiver(
                                    r.getAttribute(u.READ_RECEIPTS.RECEIVER_ID)
                                  ))
                                : (a.setReceiverType(
                                    u.MessageConstatnts.RECEIVER_TYPE.USER
                                  ),
                                  a.setReceiver(
                                    o.getUidFromJid(
                                      e.getAttribute(
                                        u.MessageConstatnts.XMPP_KEYS.TO
                                      )
                                    )
                                  )),
                              a.setReceiptType(a.RECEIPT_TYPE.READ_RECEIPT),
                              a.setMessageId(
                                o.getmessageIdFromStanzaId(
                                  r.getAttribute(u.READ_RECEIPTS.ID)
                                )
                              ),
                              a.setTimestamp(
                                i.getAttribute(u.READ_RECEIPTS.TIME)
                              ),
                              a.setReadAt(i.getAttribute(u.READ_RECEIPTS.TIME)),
                              t(a);
                          } else
                            l.XMPPConnectionHelper.getInstance().getUsersVCard(
                              o.getUidFromJid(
                                e.getAttribute(
                                  u.MessageConstatnts.XMPP_KEYS.FROM
                                )
                              ),
                              function (n) {
                                var s = new f.MessageReceipt();
                                s.setSender(n),
                                  r.getAttribute(
                                    u.READ_RECEIPTS.RECEIVER_TYPE
                                  ) == u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                    ? (s.setReceiverType(
                                        u.MessageConstatnts.RECEIVER_TYPE.GROUP
                                      ),
                                      s.setReceiver(
                                        r.getAttribute(
                                          u.READ_RECEIPTS.RECEIVER_ID
                                        )
                                      ))
                                    : (s.setReceiverType(
                                        u.MessageConstatnts.RECEIVER_TYPE.USER
                                      ),
                                      s.setReceiver(
                                        o.getUidFromJid(
                                          e.getAttribute(
                                            u.MessageConstatnts.XMPP_KEYS.TO
                                          )
                                        )
                                      )),
                                  s.setReceiptType(s.RECEIPT_TYPE.READ_RECEIPT),
                                  s.setMessageId(
                                    o.getmessageIdFromStanzaId(
                                      r.getAttribute(u.READ_RECEIPTS.ID)
                                    )
                                  ),
                                  s.setTimestamp(
                                    i.getAttribute(u.READ_RECEIPTS.TIME)
                                  ),
                                  s.setReadAt(
                                    i.getAttribute(u.READ_RECEIPTS.TIME)
                                  ),
                                  t(s);
                              }
                            );
                        } catch (s) {
                          n(new E.CometChatException(s));
                        }
                      });
                    }),
                    (e.getReceiptsFromJSON = function (e) {
                      return new Promise(function (t, n) {
                        try {
                          var r = [];
                          C.CometChat.getLoggedInUser().then(function (n) {
                            c.isFalsy(e.receipts)
                              ? t([])
                              : (e.receipts.data.map(function (t) {
                                  var o = new f.MessageReceipt();
                                  t[u.DELIVERY_RECEIPTS.DELIVERED_AT] &&
                                    (o.setReceiptType(
                                      o.RECEIPT_TYPE.DELIVERY_RECEIPT
                                    ),
                                    o.setDeliveredAt(
                                      t[u.DELIVERY_RECEIPTS.DELIVERED_AT]
                                    ),
                                    o.setTimestamp(
                                      t[u.DELIVERY_RECEIPTS.DELIVERED_AT]
                                    ),
                                    c.isFalsy(t[u.DELIVERY_RECEIPTS.RECIPIENT])
                                      ? o.setSender(n)
                                      : o.setSender(
                                          _.UsersController.trasformJSONUser(
                                            t[u.DELIVERY_RECEIPTS.RECIPIENT]
                                          )
                                        ),
                                    o.setReceiverType(
                                      e[u.MessageConstatnts.KEYS.RECEIVER_TYPE]
                                    ),
                                    o.setReceiver(
                                      e[u.MessageConstatnts.KEYS.RECEIVER]
                                    )),
                                    t[u.READ_RECEIPTS.READ_AT] &&
                                      (o.setReceiptType(
                                        o.RECEIPT_TYPE.READ_RECEIPT
                                      ),
                                      o.setReadAt(t[u.READ_RECEIPTS.READ_AT]),
                                      o.setTimestamp(
                                        t[t[u.READ_RECEIPTS.READ_AT]]
                                      ),
                                      c.isFalsy(t[u.READ_RECEIPTS.RECIPIENT])
                                        ? o.setSender(n)
                                        : o.setSender(
                                            _.UsersController.trasformJSONUser(
                                              t[u.READ_RECEIPTS.RECIPIENT]
                                            )
                                          ),
                                      o.setReceiverType(
                                        e[
                                          u.MessageConstatnts.KEYS.RECEIVER_TYPE
                                        ]
                                      ),
                                      o.setReceiver(
                                        e[u.MessageConstatnts.KEYS.RECEIVER]
                                      )),
                                    r.push(o);
                                }),
                                t(r));
                          });
                        } catch (t) {
                          n(new E.CometChatException(t));
                        }
                      });
                    }),
                    e
                  );
                })();
              t.MessageController = m;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(4),
                o = n(1),
                i = (function () {
                  function e() {}
                  return (
                    (e.trasformJSONUser = function (e) {
                      var t;
                      try {
                        (e.uid = e.uid.toString()),
                          (e.name = e.name.toString()),
                          e.status && "offline" !== e.status
                            ? (e.status = "online")
                            : (e.status = "offline"),
                          (t = new r.User(e)),
                          Object.assign(t, e),
                          (e = t);
                      } catch (e) {
                        o.Logger.error("UsersController:transformJSONUser", e);
                      }
                      return e;
                    }),
                    e
                  );
                })();
              t.UsersController = i;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = n(0),
                i = n(11),
                s = n(3),
                a = n(2),
                c = (function () {
                  function e(e) {
                    (this.store = o.constants.DEFAULT_STORE),
                      r.isFalsy(e) || (this.store = e),
                      (this.localStore = i.createInstance({
                        name: r.format(
                          o.LOCAL_STORE.STORE_STRING,
                          s.CometChat.getAppId(),
                          o.LOCAL_STORE.COMMON_STORE
                        ),
                      })),
                      this.localStore.setDriver([
                        i.LOCALSTORAGE,
                        i.INDEXEDDB,
                        i.WEBSQL,
                      ]);
                  }
                  return (
                    (e.getInstance = function () {
                      return (
                        null == e.localStorage && (e.localStorage = new e()),
                        e.localStorage
                      );
                    }),
                    (e.prototype.set = function (e, t) {
                      return this.localStore.setItem(e, JSON.stringify(t));
                    }),
                    (e.prototype.remove = function (e) {
                      this.localStore.removeItem(e);
                    }),
                    (e.prototype.update = function (e, t) {
                      this.remove(e), this.set(e, t);
                    }),
                    (e.prototype.get = function (e) {
                      var t = this;
                      return new Promise(function (n, r) {
                        try {
                          t.localStore.getItem(e).then(
                            function (e) {
                              try {
                                n(JSON.parse(e));
                              } catch (t) {
                                n(e);
                              }
                            },
                            function (e) {
                              r(e);
                            }
                          );
                        } catch (e) {
                          r(new a.CometChatException(e));
                        }
                      });
                    }),
                    (e.prototype.clearStore = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          e.localStore.keys().then(function (n) {
                            if (0 < n.length)
                              for (var r = 0; r < n.length; r++)
                                "appId" !== n[r] &&
                                  e.localStore.removeItem(n[r]),
                                  r === n.length - 1 && t(!0);
                          });
                        } catch (e) {
                          n(e);
                        }
                      });
                    }),
                    (e.prototype.clear = function (e) {}),
                    (e.prototype.selectStore = function (e) {
                      this.store = e;
                    }),
                    (e.localStorage = null),
                    e
                  );
                })();
              t.LocalStorage = c;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(0),
                o = n(1),
                i = n(3),
                s = n(2);
              (t.getUidFromJid = function (e) {
                try {
                  return e.substring(
                    e.lastIndexOf("]") + 1,
                    e.lastIndexOf("@")
                  );
                } catch (e) {
                  o.Logger.error("XMPPUtils: getUidFromJid", e);
                }
              }),
                (t.getappIdFromJid = function (e) {
                  try {
                    return e.substring(
                      e.lastIndexOf("[") + 1,
                      e.lastIndexOf("]")
                    );
                  } catch (e) {
                    o.Logger.error("XMPPUtils: getappIdFromJid", e);
                  }
                }),
                (t.getmessageIdFromStanzaId = function (e) {
                  try {
                    return e
                      ? e.substring(e.lastIndexOf("]") + 1, e.length)
                      : e;
                  } catch (t) {
                    return (
                      o.Logger.error("XMPPUtils: getmessageIdFromStanzaId", t),
                      e
                    );
                  }
                }),
                (t.parseHTML = function (e) {
                  try {
                    return void 0 !== e ? e.textContent : e;
                  } catch (t) {
                    return o.Logger.error("XMPPUtils: parseHTML", t), e;
                  }
                }),
                (t.getJidFromUid = function (e) {
                  return new Promise(function (t, n) {
                    try {
                      o.getAppSettings().then(
                        function (n) {
                          t(
                            o.format(
                              r.XMPP.bare_jid_string,
                              i.CometChat.getAppId(),
                              e,
                              o.getJidHost(n)
                            )
                          );
                        },
                        function (n) {
                          t(
                            o.format(
                              r.XMPP.bare_jid_string,
                              i.CometChat.getAppId(),
                              e,
                              r.XMPP.host
                            )
                          );
                        }
                      );
                    } catch (e) {
                      n(new s.CometChatException(e));
                    }
                  });
                }),
                (t.getGUIDFromJID = function (e) {
                  try {
                    return e.substring(e.indexOf("]") + 1, e.indexOf("@"));
                  } catch (e) {
                    o.Logger.error("XMPPUtils: getGUIDFromJID", e);
                  }
                }),
                (t.getGroupJidFromGUID = function (e) {
                  return new Promise(function (t, n) {
                    try {
                      o.getAppSettings().then(
                        function (n) {
                          t(
                            o.format(
                              r.XMPP.muc_jid_string,
                              i.CometChat.getAppId(),
                              e,
                              n[r.APP_SETTINGS.KEYS.GROUP_SERVICE],
                              o.getJidHost(n)
                            )
                          );
                        },
                        function (n) {
                          t(
                            o.format(
                              r.XMPP.muc_jid_string,
                              i.CometChat.getAppId(),
                              e,
                              i.CometChat.getAppId(),
                              r.XMPP.host
                            )
                          );
                        }
                      );
                    } catch (e) {
                      n(new s.CometChatException(e));
                    }
                  });
                }),
                (t.getFullJidForGroup = function (e) {
                  try {
                    return e.substring(e.indexOf("/") + 1);
                  } catch (e) {
                    o.Logger.error("XMPPUtils: getFullJidForGroup", e);
                  }
                }),
                (t.getGroupJidFullGroupJid = function (e) {
                  try {
                    return e.substring(0, e.indexOf("/"));
                  } catch (e) {
                    o.Logger.error("XMPPUtils: getGroupJidFullGroupJid", e);
                  }
                });
            },
            function (e, t, n) {
              (function (t) {
                e.exports = (function e(t, n, r) {
                  function o(s, a) {
                    if (!n[s]) {
                      if (!t[s]) {
                        if (i) return i(s, !0);
                        var c = new Error("Cannot find module '" + s + "'");
                        throw ((c.code = "MODULE_NOT_FOUND"), c);
                      }
                      var u = (n[s] = { exports: {} });
                      t[s][0].call(
                        u.exports,
                        function (e) {
                          return o(t[s][1][e] || e);
                        },
                        u,
                        u.exports,
                        e,
                        t,
                        n,
                        r
                      );
                    }
                    return n[s].exports;
                  }
                  for (var i = !1, s = 0; s < r.length; s++) o(r[s]);
                  return o;
                })(
                  {
                    1: [
                      function (e, n, r) {
                        (function (e) {
                          "use strict";
                          var t,
                            r,
                            o = e.MutationObserver || e.WebKitMutationObserver;
                          if (o) {
                            var i = 0,
                              s = new o(l),
                              a = e.document.createTextNode("");
                            s.observe(a, { characterData: !0 }),
                              (t = function () {
                                a.data = i = ++i % 2;
                              });
                          } else if (
                            e.setImmediate ||
                            void 0 === e.MessageChannel
                          )
                            t =
                              "document" in e &&
                              "onreadystatechange" in
                                e.document.createElement("script")
                                ? function () {
                                    var t = e.document.createElement("script");
                                    (t.onreadystatechange = function () {
                                      l(),
                                        (t.onreadystatechange = null),
                                        t.parentNode.removeChild(t),
                                        (t = null);
                                    }),
                                      e.document.documentElement.appendChild(t);
                                  }
                                : function () {
                                    setTimeout(l, 0);
                                  };
                          else {
                            var c = new e.MessageChannel();
                            (c.port1.onmessage = l),
                              (t = function () {
                                c.port2.postMessage(0);
                              });
                          }
                          var u = [];
                          function l() {
                            var e, t;
                            r = !0;
                            for (var n = u.length; n; ) {
                              for (t = u, u = [], e = -1; ++e < n; ) t[e]();
                              n = u.length;
                            }
                            r = !1;
                          }
                          n.exports = function (e) {
                            1 !== u.push(e) || r || t();
                          };
                        }.call(
                          this,
                          void 0 !== t
                            ? t
                            : "undefined" != typeof self
                            ? self
                            : "undefined" != typeof window
                            ? window
                            : {}
                        ));
                      },
                      {},
                    ],
                    2: [
                      function (e, t, n) {
                        "use strict";
                        var r = e(1);
                        function o() {}
                        var i = {},
                          s = ["REJECTED"],
                          a = ["FULFILLED"],
                          c = ["PENDING"];
                        function u(e) {
                          if ("function" != typeof e)
                            throw new TypeError("resolver must be a function");
                          (this.state = c),
                            (this.queue = []),
                            (this.outcome = void 0),
                            e !== o && f(this, e);
                        }
                        function l(e, t, n) {
                          (this.promise = e),
                            "function" == typeof t &&
                              ((this.onFulfilled = t),
                              (this.callFulfilled = this.otherCallFulfilled)),
                            "function" == typeof n &&
                              ((this.onRejected = n),
                              (this.callRejected = this.otherCallRejected));
                        }
                        function d(e, t, n) {
                          r(function () {
                            var r;
                            try {
                              r = t(n);
                            } catch (r) {
                              return i.reject(e, r);
                            }
                            r === e
                              ? i.reject(
                                  e,
                                  new TypeError(
                                    "Cannot resolve promise with itself"
                                  )
                                )
                              : i.resolve(e, r);
                          });
                        }
                        function p(e) {
                          var t = e && e.then;
                          if (
                            e &&
                            ("object" == typeof e || "function" == typeof e) &&
                            "function" == typeof t
                          )
                            return function () {
                              t.apply(e, arguments);
                            };
                        }
                        function f(e, t) {
                          var n = !1;
                          function r(t) {
                            n || ((n = !0), i.reject(e, t));
                          }
                          function o(t) {
                            n || ((n = !0), i.resolve(e, t));
                          }
                          var s = h(function () {
                            t(o, r);
                          });
                          "error" === s.status && r(s.value);
                        }
                        function h(e, t) {
                          var n = {};
                          try {
                            (n.value = e(t)), (n.status = "success");
                          } catch (e) {
                            (n.status = "error"), (n.value = e);
                          }
                          return n;
                        }
                        ((t.exports = u).prototype.catch = function (e) {
                          return this.then(null, e);
                        }),
                          (u.prototype.then = function (e, t) {
                            if (
                              ("function" != typeof e && this.state === a) ||
                              ("function" != typeof t && this.state === s)
                            )
                              return this;
                            var n = new this.constructor(o);
                            return (
                              this.state !== c
                                ? d(n, this.state === a ? e : t, this.outcome)
                                : this.queue.push(new l(n, e, t)),
                              n
                            );
                          }),
                          (l.prototype.callFulfilled = function (e) {
                            i.resolve(this.promise, e);
                          }),
                          (l.prototype.otherCallFulfilled = function (e) {
                            d(this.promise, this.onFulfilled, e);
                          }),
                          (l.prototype.callRejected = function (e) {
                            i.reject(this.promise, e);
                          }),
                          (l.prototype.otherCallRejected = function (e) {
                            d(this.promise, this.onRejected, e);
                          }),
                          (i.resolve = function (e, t) {
                            var n = h(p, t);
                            if ("error" === n.status)
                              return i.reject(e, n.value);
                            var r = n.value;
                            if (r) f(e, r);
                            else {
                              (e.state = a), (e.outcome = t);
                              for (var o = -1, s = e.queue.length; ++o < s; )
                                e.queue[o].callFulfilled(t);
                            }
                            return e;
                          }),
                          (i.reject = function (e, t) {
                            (e.state = s), (e.outcome = t);
                            for (var n = -1, r = e.queue.length; ++n < r; )
                              e.queue[n].callRejected(t);
                            return e;
                          }),
                          (u.resolve = function (e) {
                            return e instanceof this
                              ? e
                              : i.resolve(new this(o), e);
                          }),
                          (u.reject = function (e) {
                            var t = new this(o);
                            return i.reject(t, e);
                          }),
                          (u.all = function (e) {
                            var t = this;
                            if (
                              "[object Array]" !==
                              Object.prototype.toString.call(e)
                            )
                              return this.reject(
                                new TypeError("must be an array")
                              );
                            var n = e.length,
                              r = !1;
                            if (!n) return this.resolve([]);
                            for (
                              var s = new Array(n),
                                a = 0,
                                c = -1,
                                u = new this(o);
                              ++c < n;

                            )
                              l(e[c], c);
                            return u;
                            function l(e, o) {
                              t.resolve(e).then(
                                function (e) {
                                  (s[o] = e),
                                    ++a !== n ||
                                      r ||
                                      ((r = !0), i.resolve(u, s));
                                },
                                function (e) {
                                  r || ((r = !0), i.reject(u, e));
                                }
                              );
                            }
                          }),
                          (u.race = function (e) {
                            if (
                              "[object Array]" !==
                              Object.prototype.toString.call(e)
                            )
                              return this.reject(
                                new TypeError("must be an array")
                              );
                            var t = e.length,
                              n = !1;
                            if (!t) return this.resolve([]);
                            for (var r, s = -1, a = new this(o); ++s < t; )
                              (r = e[s]),
                                this.resolve(r).then(
                                  function (e) {
                                    n || ((n = !0), i.resolve(a, e));
                                  },
                                  function (e) {
                                    n || ((n = !0), i.reject(a, e));
                                  }
                                );
                            return a;
                          });
                      },
                      { 1: 1 },
                    ],
                    3: [
                      function (e, n, r) {
                        (function (t) {
                          "use strict";
                          "function" != typeof t.Promise && (t.Promise = e(2));
                        }.call(
                          this,
                          void 0 !== t
                            ? t
                            : "undefined" != typeof self
                            ? self
                            : "undefined" != typeof window
                            ? window
                            : {}
                        ));
                      },
                      { 2: 2 },
                    ],
                    4: [
                      function (e, t, n) {
                        "use strict";
                        var r =
                            "function" == typeof Symbol &&
                            "symbol" == typeof Symbol.iterator
                              ? function (e) {
                                  return typeof e;
                                }
                              : function (e) {
                                  return e &&
                                    "function" == typeof Symbol &&
                                    e.constructor === Symbol &&
                                    e !== Symbol.prototype
                                    ? "symbol"
                                    : typeof e;
                                },
                          o = (function () {
                            try {
                              if ("undefined" != typeof indexedDB)
                                return indexedDB;
                              if ("undefined" != typeof webkitIndexedDB)
                                return webkitIndexedDB;
                              if ("undefined" != typeof mozIndexedDB)
                                return mozIndexedDB;
                              if ("undefined" != typeof OIndexedDB)
                                return OIndexedDB;
                              if ("undefined" != typeof msIndexedDB)
                                return msIndexedDB;
                            } catch (e) {
                              return;
                            }
                          })();
                        function i(e, t) {
                          (e = e || []), (t = t || {});
                          try {
                            return new Blob(e, t);
                          } catch (o) {
                            if ("TypeError" !== o.name) throw o;
                            for (
                              var n = new (
                                  "undefined" != typeof BlobBuilder
                                    ? BlobBuilder
                                    : "undefined" != typeof MSBlobBuilder
                                    ? MSBlobBuilder
                                    : "undefined" != typeof MozBlobBuilder
                                    ? MozBlobBuilder
                                    : WebKitBlobBuilder
                                )(),
                                r = 0;
                              r < e.length;
                              r += 1
                            )
                              n.append(e[r]);
                            return n.getBlob(t.type);
                          }
                        }
                        "undefined" == typeof Promise && e(3);
                        var s = Promise;
                        function a(e, t) {
                          t &&
                            e.then(
                              function (e) {
                                t(null, e);
                              },
                              function (e) {
                                t(e);
                              }
                            );
                        }
                        function c(e, t, n) {
                          "function" == typeof t && e.then(t),
                            "function" == typeof n && e.catch(n);
                        }
                        function u(e) {
                          return "string" != typeof e && (e = String(e)), e;
                        }
                        function l() {
                          if (
                            arguments.length &&
                            "function" == typeof arguments[arguments.length - 1]
                          )
                            return arguments[arguments.length - 1];
                        }
                        var d = "local-forage-detect-blob-support",
                          p = void 0,
                          f = {},
                          h = Object.prototype.toString,
                          E = "readonly",
                          g = "readwrite";
                        function S(e) {
                          return "boolean" == typeof p
                            ? s.resolve(p)
                            : ((t = e),
                              new s(function (e) {
                                var n = t.transaction(d, g),
                                  r = i([""]);
                                n.objectStore(d).put(r, "key"),
                                  (n.onabort = function (t) {
                                    t.preventDefault(),
                                      t.stopPropagation(),
                                      e(!1);
                                  }),
                                  (n.oncomplete = function () {
                                    var t =
                                        navigator.userAgent.match(
                                          /Chrome\/(\d+)/
                                        ),
                                      n = navigator.userAgent.match(/Edge\//);
                                    e(n || !t || 43 <= parseInt(t[1], 10));
                                  });
                              }).catch(function () {
                                return !1;
                              })).then(function (e) {
                                return (p = e);
                              });
                          var t;
                        }
                        function C(e) {
                          var t = f[e.name],
                            n = {};
                          (n.promise = new s(function (e, t) {
                            (n.resolve = e), (n.reject = t);
                          })),
                            t.deferredOperations.push(n),
                            t.dbReady
                              ? (t.dbReady = t.dbReady.then(function () {
                                  return n.promise;
                                }))
                              : (t.dbReady = n.promise);
                        }
                        function _(e) {
                          var t = f[e.name].deferredOperations.pop();
                          if (t) return t.resolve(), t.promise;
                        }
                        function m(e, t) {
                          var n = f[e.name].deferredOperations.pop();
                          if (n) return n.reject(t), n.promise;
                        }
                        function T(e, t) {
                          return new s(function (n, r) {
                            if (
                              ((f[e.name] = f[e.name] || {
                                forages: [],
                                db: null,
                                dbReady: null,
                                deferredOperations: [],
                              }),
                              e.db)
                            ) {
                              if (!t) return n(e.db);
                              C(e), e.db.close();
                            }
                            var i = [e.name];
                            t && i.push(e.version);
                            var s = o.open.apply(o, i);
                            t &&
                              (s.onupgradeneeded = function (t) {
                                var n = s.result;
                                try {
                                  n.createObjectStore(e.storeName),
                                    t.oldVersion <= 1 && n.createObjectStore(d);
                                } catch (t) {
                                  if ("ConstraintError" !== t.name) throw t;
                                }
                              }),
                              (s.onerror = function (e) {
                                e.preventDefault(), r(s.error);
                              }),
                              (s.onsuccess = function () {
                                n(s.result), _(e);
                              });
                          });
                        }
                        function y(e) {
                          return T(e, !1);
                        }
                        function A(e) {
                          return T(e, !0);
                        }
                        function I(e, t) {
                          if (!e.db) return !0;
                          var n = !e.db.objectStoreNames.contains(e.storeName),
                            r = e.version < e.db.version,
                            o = e.version > e.db.version;
                          if (
                            (r && (e.version, (e.version = e.db.version)),
                            o || n)
                          ) {
                            if (n) {
                              var i = e.db.version + 1;
                              i > e.version && (e.version = i);
                            }
                            return !0;
                          }
                          return !1;
                        }
                        function v(e) {
                          return i(
                            [
                              (function (e) {
                                for (
                                  var t = e.length,
                                    n = new ArrayBuffer(t),
                                    r = new Uint8Array(n),
                                    o = 0;
                                  o < t;
                                  o++
                                )
                                  r[o] = e.charCodeAt(o);
                                return n;
                              })(atob(e.data)),
                            ],
                            { type: e.type }
                          );
                        }
                        function N(e) {
                          return e && e.__local_forage_encoded_blob;
                        }
                        function R(e) {
                          var t = this,
                            n = t._initReady().then(function () {
                              var e = f[t._dbInfo.name];
                              if (e && e.dbReady) return e.dbReady;
                            });
                          return c(n, e, e), n;
                        }
                        function O(e, t, n, r) {
                          void 0 === r && (r = 1);
                          try {
                            var o = e.db.transaction(e.storeName, t);
                            n(null, o);
                          } catch (o) {
                            if (
                              0 < r &&
                              (!e.db ||
                                "InvalidStateError" === o.name ||
                                "NotFoundError" === o.name)
                            )
                              return s
                                .resolve()
                                .then(function () {
                                  if (
                                    !e.db ||
                                    ("NotFoundError" === o.name &&
                                      !e.db.objectStoreNames.contains(
                                        e.storeName
                                      ) &&
                                      e.version <= e.db.version)
                                  )
                                    return (
                                      e.db && (e.version = e.db.version + 1),
                                      A(e)
                                    );
                                })
                                .then(function () {
                                  return (function (e) {
                                    C(e);
                                    for (
                                      var t = f[e.name], n = t.forages, r = 0;
                                      r < n.length;
                                      r++
                                    ) {
                                      var o = n[r];
                                      o._dbInfo.db &&
                                        (o._dbInfo.db.close(),
                                        (o._dbInfo.db = null));
                                    }
                                    return (
                                      (e.db = null),
                                      y(e)
                                        .then(function (t) {
                                          return (e.db = t), I(e) ? A(e) : t;
                                        })
                                        .then(function (r) {
                                          e.db = t.db = r;
                                          for (var o = 0; o < n.length; o++)
                                            n[o]._dbInfo.db = r;
                                        })
                                        .catch(function (t) {
                                          throw (m(e, t), t);
                                        })
                                    );
                                  })(e).then(function () {
                                    O(e, t, n, r - 1);
                                  });
                                })
                                .catch(n);
                            n(o);
                          }
                        }
                        var P = {
                            _driver: "asyncStorage",
                            _initStorage: function (e) {
                              var t = this,
                                n = { db: null };
                              if (e) for (var r in e) n[r] = e[r];
                              var o = f[n.name];
                              o ||
                                ((o = {
                                  forages: [],
                                  db: null,
                                  dbReady: null,
                                  deferredOperations: [],
                                }),
                                (f[n.name] = o)),
                                o.forages.push(t),
                                t._initReady ||
                                  ((t._initReady = t.ready), (t.ready = R));
                              var i = [];
                              function a() {
                                return s.resolve();
                              }
                              for (var c = 0; c < o.forages.length; c++) {
                                var u = o.forages[c];
                                u !== t && i.push(u._initReady().catch(a));
                              }
                              var l = o.forages.slice(0);
                              return s
                                .all(i)
                                .then(function () {
                                  return (n.db = o.db), y(n);
                                })
                                .then(function (e) {
                                  return (
                                    (n.db = e),
                                    I(n, t._defaultConfig.version) ? A(n) : e
                                  );
                                })
                                .then(function (e) {
                                  (n.db = o.db = e), (t._dbInfo = n);
                                  for (var r = 0; r < l.length; r++) {
                                    var i = l[r];
                                    i !== t &&
                                      ((i._dbInfo.db = n.db),
                                      (i._dbInfo.version = n.version));
                                  }
                                });
                            },
                            _support: (function () {
                              try {
                                if (!o) return !1;
                                var e =
                                    "undefined" != typeof openDatabase &&
                                    /(Safari|iPhone|iPad|iPod)/.test(
                                      navigator.userAgent
                                    ) &&
                                    !/Chrome/.test(navigator.userAgent) &&
                                    !/BlackBerry/.test(navigator.platform),
                                  t =
                                    "function" == typeof fetch &&
                                    -1 !==
                                      fetch.toString().indexOf("[native code");
                                return (
                                  (!e || t) &&
                                  "undefined" != typeof indexedDB &&
                                  "undefined" != typeof IDBKeyRange
                                );
                              } catch (e) {
                                return !1;
                              }
                            })(),
                            iterate: function (e, t) {
                              var n = this,
                                r = new s(function (t, r) {
                                  n.ready()
                                    .then(function () {
                                      O(n._dbInfo, E, function (o, i) {
                                        if (o) return r(o);
                                        try {
                                          var s = i
                                              .objectStore(n._dbInfo.storeName)
                                              .openCursor(),
                                            a = 1;
                                          (s.onsuccess = function () {
                                            var n = s.result;
                                            if (n) {
                                              var r = n.value;
                                              N(r) && (r = v(r));
                                              var o = e(r, n.key, a++);
                                              void 0 !== o
                                                ? t(o)
                                                : n.continue();
                                            } else t();
                                          }),
                                            (s.onerror = function () {
                                              r(s.error);
                                            });
                                        } catch (o) {
                                          r(o);
                                        }
                                      });
                                    })
                                    .catch(r);
                                });
                              return a(r, t), r;
                            },
                            getItem: function (e, t) {
                              var n = this;
                              e = u(e);
                              var r = new s(function (t, r) {
                                n.ready()
                                  .then(function () {
                                    O(n._dbInfo, E, function (o, i) {
                                      if (o) return r(o);
                                      try {
                                        var s = i
                                          .objectStore(n._dbInfo.storeName)
                                          .get(e);
                                        (s.onsuccess = function () {
                                          var e = s.result;
                                          void 0 === e && (e = null),
                                            N(e) && (e = v(e)),
                                            t(e);
                                        }),
                                          (s.onerror = function () {
                                            r(s.error);
                                          });
                                      } catch (o) {
                                        r(o);
                                      }
                                    });
                                  })
                                  .catch(r);
                              });
                              return a(r, t), r;
                            },
                            setItem: function (e, t, n) {
                              var r = this;
                              e = u(e);
                              var o = new s(function (n, o) {
                                var i;
                                r.ready()
                                  .then(function () {
                                    return (
                                      (i = r._dbInfo),
                                      "[object Blob]" === h.call(t)
                                        ? S(i.db).then(function (e) {
                                            return e
                                              ? t
                                              : ((n = t),
                                                new s(function (e, t) {
                                                  var r = new FileReader();
                                                  (r.onerror = t),
                                                    (r.onloadend = function (
                                                      t
                                                    ) {
                                                      var r = btoa(
                                                        t.target.result || ""
                                                      );
                                                      e({
                                                        __local_forage_encoded_blob:
                                                          !0,
                                                        data: r,
                                                        type: n.type,
                                                      });
                                                    }),
                                                    r.readAsBinaryString(n);
                                                }));
                                            var n;
                                          })
                                        : t
                                    );
                                  })
                                  .then(function (t) {
                                    O(r._dbInfo, g, function (i, s) {
                                      if (i) return o(i);
                                      try {
                                        var a = s.objectStore(
                                          r._dbInfo.storeName
                                        );
                                        null === t && (t = void 0);
                                        var c = a.put(t, e);
                                        (s.oncomplete = function () {
                                          void 0 === t && (t = null), n(t);
                                        }),
                                          (s.onabort = s.onerror =
                                            function () {
                                              var e = c.error
                                                ? c.error
                                                : c.transaction.error;
                                              o(e);
                                            });
                                      } catch (i) {
                                        o(i);
                                      }
                                    });
                                  })
                                  .catch(o);
                              });
                              return a(o, n), o;
                            },
                            removeItem: function (e, t) {
                              var n = this;
                              e = u(e);
                              var r = new s(function (t, r) {
                                n.ready()
                                  .then(function () {
                                    O(n._dbInfo, g, function (o, i) {
                                      if (o) return r(o);
                                      try {
                                        var s = i
                                          .objectStore(n._dbInfo.storeName)
                                          .delete(e);
                                        (i.oncomplete = function () {
                                          t();
                                        }),
                                          (i.onerror = function () {
                                            r(s.error);
                                          }),
                                          (i.onabort = function () {
                                            var e = s.error
                                              ? s.error
                                              : s.transaction.error;
                                            r(e);
                                          });
                                      } catch (o) {
                                        r(o);
                                      }
                                    });
                                  })
                                  .catch(r);
                              });
                              return a(r, t), r;
                            },
                            clear: function (e) {
                              var t = this,
                                n = new s(function (e, n) {
                                  t.ready()
                                    .then(function () {
                                      O(t._dbInfo, g, function (r, o) {
                                        if (r) return n(r);
                                        try {
                                          var i = o
                                            .objectStore(t._dbInfo.storeName)
                                            .clear();
                                          (o.oncomplete = function () {
                                            e();
                                          }),
                                            (o.onabort = o.onerror =
                                              function () {
                                                var e = i.error
                                                  ? i.error
                                                  : i.transaction.error;
                                                n(e);
                                              });
                                        } catch (r) {
                                          n(r);
                                        }
                                      });
                                    })
                                    .catch(n);
                                });
                              return a(n, e), n;
                            },
                            length: function (e) {
                              var t = this,
                                n = new s(function (e, n) {
                                  t.ready()
                                    .then(function () {
                                      O(t._dbInfo, E, function (r, o) {
                                        if (r) return n(r);
                                        try {
                                          var i = o
                                            .objectStore(t._dbInfo.storeName)
                                            .count();
                                          (i.onsuccess = function () {
                                            e(i.result);
                                          }),
                                            (i.onerror = function () {
                                              n(i.error);
                                            });
                                        } catch (r) {
                                          n(r);
                                        }
                                      });
                                    })
                                    .catch(n);
                                });
                              return a(n, e), n;
                            },
                            key: function (e, t) {
                              var n = this,
                                r = new s(function (t, r) {
                                  e < 0
                                    ? t(null)
                                    : n
                                        .ready()
                                        .then(function () {
                                          O(n._dbInfo, E, function (o, i) {
                                            if (o) return r(o);
                                            try {
                                              var s = i.objectStore(
                                                  n._dbInfo.storeName
                                                ),
                                                a = !1,
                                                c = s.openCursor();
                                              (c.onsuccess = function () {
                                                var n = c.result;
                                                n
                                                  ? 0 === e || a
                                                    ? t(n.key)
                                                    : ((a = !0), n.advance(e))
                                                  : t(null);
                                              }),
                                                (c.onerror = function () {
                                                  r(c.error);
                                                });
                                            } catch (o) {
                                              r(o);
                                            }
                                          });
                                        })
                                        .catch(r);
                                });
                              return a(r, t), r;
                            },
                            keys: function (e) {
                              var t = this,
                                n = new s(function (e, n) {
                                  t.ready()
                                    .then(function () {
                                      O(t._dbInfo, E, function (r, o) {
                                        if (r) return n(r);
                                        try {
                                          var i = o
                                              .objectStore(t._dbInfo.storeName)
                                              .openCursor(),
                                            s = [];
                                          (i.onsuccess = function () {
                                            var t = i.result;
                                            t
                                              ? (s.push(t.key), t.continue())
                                              : e(s);
                                          }),
                                            (i.onerror = function () {
                                              n(i.error);
                                            });
                                        } catch (r) {
                                          n(r);
                                        }
                                      });
                                    })
                                    .catch(n);
                                });
                              return a(n, e), n;
                            },
                            dropInstance: function (e, t) {
                              t = l.apply(this, arguments);
                              var n,
                                r = this.config();
                              if (
                                ((e = ("function" != typeof e && e) || {})
                                  .name ||
                                  ((e.name = e.name || r.name),
                                  (e.storeName = e.storeName || r.storeName)),
                                e.name)
                              ) {
                                var i =
                                  e.name === r.name && this._dbInfo.db
                                    ? s.resolve(this._dbInfo.db)
                                    : y(e).then(function (t) {
                                        var n = f[e.name],
                                          r = n.forages;
                                        n.db = t;
                                        for (var o = 0; o < r.length; o++)
                                          r[o]._dbInfo.db = t;
                                        return t;
                                      });
                                n = e.storeName
                                  ? i.then(function (t) {
                                      if (
                                        t.objectStoreNames.contains(e.storeName)
                                      ) {
                                        var n = t.version + 1;
                                        C(e);
                                        var r = f[e.name],
                                          i = r.forages;
                                        t.close();
                                        for (var a = 0; a < i.length; a++) {
                                          var c = i[a];
                                          (c._dbInfo.db = null),
                                            (c._dbInfo.version = n);
                                        }
                                        return new s(function (t, r) {
                                          var i = o.open(e.name, n);
                                          (i.onerror = function (e) {
                                            i.result.close(), r(e);
                                          }),
                                            (i.onupgradeneeded = function () {
                                              i.result.deleteObjectStore(
                                                e.storeName
                                              );
                                            }),
                                            (i.onsuccess = function () {
                                              var e = i.result;
                                              e.close(), t(e);
                                            });
                                        })
                                          .then(function (e) {
                                            r.db = e;
                                            for (var t = 0; t < i.length; t++) {
                                              var n = i[t];
                                              (n._dbInfo.db = e), _(n._dbInfo);
                                            }
                                          })
                                          .catch(function (t) {
                                            throw (
                                              ((m(e, t) || s.resolve()).catch(
                                                function () {}
                                              ),
                                              t)
                                            );
                                          });
                                      }
                                    })
                                  : i.then(function (t) {
                                      C(e);
                                      var n = f[e.name],
                                        r = n.forages;
                                      t.close();
                                      for (var i = 0; i < r.length; i++)
                                        r[i]._dbInfo.db = null;
                                      return new s(function (t, n) {
                                        var r = o.deleteDatabase(e.name);
                                        (r.onerror = r.onblocked =
                                          function (e) {
                                            var t = r.result;
                                            t && t.close(), n(e);
                                          }),
                                          (r.onsuccess = function () {
                                            var e = r.result;
                                            e && e.close(), t(e);
                                          });
                                      })
                                        .then(function (e) {
                                          n.db = e;
                                          for (var t = 0; t < r.length; t++)
                                            _(r[t]._dbInfo);
                                        })
                                        .catch(function (t) {
                                          throw (
                                            ((m(e, t) || s.resolve()).catch(
                                              function () {}
                                            ),
                                            t)
                                          );
                                        });
                                    });
                              } else n = s.reject("Invalid arguments");
                              return a(n, t), n;
                            },
                          },
                          M =
                            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                          L = /^~~local_forage_type~([^~]+)~/,
                          b = "__lfsc__:",
                          w = b.length,
                          D = "arbf",
                          U = "blob",
                          x = w + D.length,
                          Y = Object.prototype.toString;
                        function G(e) {
                          var t,
                            n,
                            r,
                            o,
                            i,
                            s = 0.75 * e.length,
                            a = e.length,
                            c = 0;
                          "=" === e[e.length - 1] &&
                            (s--, "=" === e[e.length - 2] && s--);
                          var u = new ArrayBuffer(s),
                            l = new Uint8Array(u);
                          for (t = 0; t < a; t += 4)
                            (n = M.indexOf(e[t])),
                              (r = M.indexOf(e[t + 1])),
                              (o = M.indexOf(e[t + 2])),
                              (i = M.indexOf(e[t + 3])),
                              (l[c++] = (n << 2) | (r >> 4)),
                              (l[c++] = ((15 & r) << 4) | (o >> 2)),
                              (l[c++] = ((3 & o) << 6) | (63 & i));
                          return u;
                        }
                        function k(e) {
                          var t,
                            n = new Uint8Array(e),
                            r = "";
                          for (t = 0; t < n.length; t += 3)
                            (r += M[n[t] >> 2]),
                              (r += M[((3 & n[t]) << 4) | (n[t + 1] >> 4)]),
                              (r +=
                                M[((15 & n[t + 1]) << 2) | (n[t + 2] >> 6)]),
                              (r += M[63 & n[t + 2]]);
                          return (
                            n.length % 3 == 2
                              ? (r = r.substring(0, r.length - 1) + "=")
                              : n.length % 3 == 1 &&
                                (r = r.substring(0, r.length - 2) + "=="),
                            r
                          );
                        }
                        var F = {
                          serialize: function (e, t) {
                            var n = "";
                            if (
                              (e && (n = Y.call(e)),
                              e &&
                                ("[object ArrayBuffer]" === n ||
                                  (e.buffer &&
                                    "[object ArrayBuffer]" ===
                                      Y.call(e.buffer))))
                            ) {
                              var r,
                                o = b;
                              e instanceof ArrayBuffer
                                ? ((r = e), (o += D))
                                : ((r = e.buffer),
                                  "[object Int8Array]" === n
                                    ? (o += "si08")
                                    : "[object Uint8Array]" === n
                                    ? (o += "ui08")
                                    : "[object Uint8ClampedArray]" === n
                                    ? (o += "uic8")
                                    : "[object Int16Array]" === n
                                    ? (o += "si16")
                                    : "[object Uint16Array]" === n
                                    ? (o += "ur16")
                                    : "[object Int32Array]" === n
                                    ? (o += "si32")
                                    : "[object Uint32Array]" === n
                                    ? (o += "ui32")
                                    : "[object Float32Array]" === n
                                    ? (o += "fl32")
                                    : "[object Float64Array]" === n
                                    ? (o += "fl64")
                                    : t(
                                        new Error(
                                          "Failed to get type for BinaryArray"
                                        )
                                      )),
                                t(o + k(r));
                            } else if ("[object Blob]" === n) {
                              var i = new FileReader();
                              (i.onload = function () {
                                var n =
                                  "~~local_forage_type~" +
                                  e.type +
                                  "~" +
                                  k(this.result);
                                t(b + U + n);
                              }),
                                i.readAsArrayBuffer(e);
                            } else
                              try {
                                t(JSON.stringify(e));
                              } catch (n) {
                                t(null, n);
                              }
                          },
                          deserialize: function (e) {
                            if (e.substring(0, w) !== b) return JSON.parse(e);
                            var t,
                              n = e.substring(x),
                              r = e.substring(w, x);
                            if (r === U && L.test(n)) {
                              var o = n.match(L);
                              (t = o[1]), (n = n.substring(o[0].length));
                            }
                            var s = G(n);
                            switch (r) {
                              case D:
                                return s;
                              case U:
                                return i([s], { type: t });
                              case "si08":
                                return new Int8Array(s);
                              case "ui08":
                                return new Uint8Array(s);
                              case "uic8":
                                return new Uint8ClampedArray(s);
                              case "si16":
                                return new Int16Array(s);
                              case "ur16":
                                return new Uint16Array(s);
                              case "si32":
                                return new Int32Array(s);
                              case "ui32":
                                return new Uint32Array(s);
                              case "fl32":
                                return new Float32Array(s);
                              case "fl64":
                                return new Float64Array(s);
                              default:
                                throw new Error("Unkown type: " + r);
                            }
                          },
                          stringToBuffer: G,
                          bufferToString: k,
                        };
                        function B(e, t, n, r) {
                          e.executeSql(
                            "CREATE TABLE IF NOT EXISTS " +
                              t.storeName +
                              " (id INTEGER PRIMARY KEY, key unique, value)",
                            [],
                            n,
                            r
                          );
                        }
                        function K(e, t, n, r, o, i) {
                          e.executeSql(
                            n,
                            r,
                            o,
                            function (e, s) {
                              s.code === s.SYNTAX_ERR
                                ? e.executeSql(
                                    "SELECT name FROM sqlite_master WHERE type='table' AND name = ?",
                                    [t.storeName],
                                    function (e, a) {
                                      a.rows.length
                                        ? i(e, s)
                                        : B(
                                            e,
                                            t,
                                            function () {
                                              e.executeSql(n, r, o, i);
                                            },
                                            i
                                          );
                                    },
                                    i
                                  )
                                : i(e, s);
                            },
                            i
                          );
                        }
                        function H(e, t, n, r) {
                          var o = this;
                          e = u(e);
                          var i = new s(function (i, s) {
                            o.ready()
                              .then(function () {
                                void 0 === t && (t = null);
                                var a = t,
                                  c = o._dbInfo;
                                c.serializer.serialize(t, function (t, u) {
                                  u
                                    ? s(u)
                                    : c.db.transaction(
                                        function (n) {
                                          K(
                                            n,
                                            c,
                                            "INSERT OR REPLACE INTO " +
                                              c.storeName +
                                              " (key, value) VALUES (?, ?)",
                                            [e, t],
                                            function () {
                                              i(a);
                                            },
                                            function (e, t) {
                                              s(t);
                                            }
                                          );
                                        },
                                        function (t) {
                                          if (t.code === t.QUOTA_ERR) {
                                            if (0 < r)
                                              return void i(
                                                H.apply(o, [e, a, n, r - 1])
                                              );
                                            s(t);
                                          }
                                        }
                                      );
                                });
                              })
                              .catch(s);
                          });
                          return a(i, n), i;
                        }
                        var V = {
                          _driver: "webSQLStorage",
                          _initStorage: function (e) {
                            var t = this,
                              n = { db: null };
                            if (e)
                              for (var r in e)
                                n[r] =
                                  "string" != typeof e[r]
                                    ? e[r].toString()
                                    : e[r];
                            var o = new s(function (e, r) {
                              try {
                                n.db = openDatabase(
                                  n.name,
                                  String(n.version),
                                  n.description,
                                  n.size
                                );
                              } catch (e) {
                                return r(e);
                              }
                              n.db.transaction(function (o) {
                                B(
                                  o,
                                  n,
                                  function () {
                                    (t._dbInfo = n), e();
                                  },
                                  function (e, t) {
                                    r(t);
                                  }
                                );
                              }, r);
                            });
                            return (n.serializer = F), o;
                          },
                          _support: "function" == typeof openDatabase,
                          iterate: function (e, t) {
                            var n = this,
                              r = new s(function (t, r) {
                                n.ready()
                                  .then(function () {
                                    var o = n._dbInfo;
                                    o.db.transaction(function (n) {
                                      K(
                                        n,
                                        o,
                                        "SELECT * FROM " + o.storeName,
                                        [],
                                        function (n, r) {
                                          for (
                                            var i = r.rows, s = i.length, a = 0;
                                            a < s;
                                            a++
                                          ) {
                                            var c = i.item(a),
                                              u = c.value;
                                            if (
                                              (u &&
                                                (u =
                                                  o.serializer.deserialize(u)),
                                              void 0 !==
                                                (u = e(u, c.key, a + 1)))
                                            )
                                              return void t(u);
                                          }
                                          t();
                                        },
                                        function (e, t) {
                                          r(t);
                                        }
                                      );
                                    });
                                  })
                                  .catch(r);
                              });
                            return a(r, t), r;
                          },
                          getItem: function (e, t) {
                            var n = this;
                            e = u(e);
                            var r = new s(function (t, r) {
                              n.ready()
                                .then(function () {
                                  var o = n._dbInfo;
                                  o.db.transaction(function (n) {
                                    K(
                                      n,
                                      o,
                                      "SELECT * FROM " +
                                        o.storeName +
                                        " WHERE key = ? LIMIT 1",
                                      [e],
                                      function (e, n) {
                                        var r = n.rows.length
                                          ? n.rows.item(0).value
                                          : null;
                                        r && (r = o.serializer.deserialize(r)),
                                          t(r);
                                      },
                                      function (e, t) {
                                        r(t);
                                      }
                                    );
                                  });
                                })
                                .catch(r);
                            });
                            return a(r, t), r;
                          },
                          setItem: function (e, t, n) {
                            return H.apply(this, [e, t, n, 1]);
                          },
                          removeItem: function (e, t) {
                            var n = this;
                            e = u(e);
                            var r = new s(function (t, r) {
                              n.ready()
                                .then(function () {
                                  var o = n._dbInfo;
                                  o.db.transaction(function (n) {
                                    K(
                                      n,
                                      o,
                                      "DELETE FROM " +
                                        o.storeName +
                                        " WHERE key = ?",
                                      [e],
                                      function () {
                                        t();
                                      },
                                      function (e, t) {
                                        r(t);
                                      }
                                    );
                                  });
                                })
                                .catch(r);
                            });
                            return a(r, t), r;
                          },
                          clear: function (e) {
                            var t = this,
                              n = new s(function (e, n) {
                                t.ready()
                                  .then(function () {
                                    var r = t._dbInfo;
                                    r.db.transaction(function (t) {
                                      K(
                                        t,
                                        r,
                                        "DELETE FROM " + r.storeName,
                                        [],
                                        function () {
                                          e();
                                        },
                                        function (e, t) {
                                          n(t);
                                        }
                                      );
                                    });
                                  })
                                  .catch(n);
                              });
                            return a(n, e), n;
                          },
                          length: function (e) {
                            var t = this,
                              n = new s(function (e, n) {
                                t.ready()
                                  .then(function () {
                                    var r = t._dbInfo;
                                    r.db.transaction(function (t) {
                                      K(
                                        t,
                                        r,
                                        "SELECT COUNT(key) as c FROM " +
                                          r.storeName,
                                        [],
                                        function (t, n) {
                                          var r = n.rows.item(0).c;
                                          e(r);
                                        },
                                        function (e, t) {
                                          n(t);
                                        }
                                      );
                                    });
                                  })
                                  .catch(n);
                              });
                            return a(n, e), n;
                          },
                          key: function (e, t) {
                            var n = this,
                              r = new s(function (t, r) {
                                n.ready()
                                  .then(function () {
                                    var o = n._dbInfo;
                                    o.db.transaction(function (n) {
                                      K(
                                        n,
                                        o,
                                        "SELECT key FROM " +
                                          o.storeName +
                                          " WHERE id = ? LIMIT 1",
                                        [e + 1],
                                        function (e, n) {
                                          var r = n.rows.length
                                            ? n.rows.item(0).key
                                            : null;
                                          t(r);
                                        },
                                        function (e, t) {
                                          r(t);
                                        }
                                      );
                                    });
                                  })
                                  .catch(r);
                              });
                            return a(r, t), r;
                          },
                          keys: function (e) {
                            var t = this,
                              n = new s(function (e, n) {
                                t.ready()
                                  .then(function () {
                                    var r = t._dbInfo;
                                    r.db.transaction(function (t) {
                                      K(
                                        t,
                                        r,
                                        "SELECT key FROM " + r.storeName,
                                        [],
                                        function (t, n) {
                                          for (
                                            var r = [], o = 0;
                                            o < n.rows.length;
                                            o++
                                          )
                                            r.push(n.rows.item(o).key);
                                          e(r);
                                        },
                                        function (e, t) {
                                          n(t);
                                        }
                                      );
                                    });
                                  })
                                  .catch(n);
                              });
                            return a(n, e), n;
                          },
                          dropInstance: function (e, t) {
                            t = l.apply(this, arguments);
                            var n = this.config();
                            (e = ("function" != typeof e && e) || {}).name ||
                              ((e.name = e.name || n.name),
                              (e.storeName = e.storeName || n.storeName));
                            var r,
                              o = this;
                            return (
                              a(
                                (r = e.name
                                  ? new s(function (t) {
                                      var r, i;
                                      (r =
                                        e.name === n.name
                                          ? o._dbInfo.db
                                          : openDatabase(e.name, "", "", 0)),
                                        e.storeName
                                          ? t({
                                              db: r,
                                              storeNames: [e.storeName],
                                            })
                                          : t(
                                              ((i = r),
                                              new s(function (e, t) {
                                                i.transaction(
                                                  function (n) {
                                                    n.executeSql(
                                                      "SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",
                                                      [],
                                                      function (t, n) {
                                                        for (
                                                          var r = [], o = 0;
                                                          o < n.rows.length;
                                                          o++
                                                        )
                                                          r.push(
                                                            n.rows.item(o).name
                                                          );
                                                        e({
                                                          db: i,
                                                          storeNames: r,
                                                        });
                                                      },
                                                      function (e, n) {
                                                        t(n);
                                                      }
                                                    );
                                                  },
                                                  function (e) {
                                                    t(e);
                                                  }
                                                );
                                              }))
                                            );
                                    }).then(function (e) {
                                      return new s(function (t, n) {
                                        e.db.transaction(
                                          function (r) {
                                            function o(e) {
                                              return new s(function (t, n) {
                                                r.executeSql(
                                                  "DROP TABLE IF EXISTS " + e,
                                                  [],
                                                  function () {
                                                    t();
                                                  },
                                                  function (e, t) {
                                                    n(t);
                                                  }
                                                );
                                              });
                                            }
                                            for (
                                              var i = [],
                                                a = 0,
                                                c = e.storeNames.length;
                                              a < c;
                                              a++
                                            )
                                              i.push(o(e.storeNames[a]));
                                            s.all(i)
                                              .then(function () {
                                                t();
                                              })
                                              .catch(function (e) {
                                                n(e);
                                              });
                                          },
                                          function (e) {
                                            n(e);
                                          }
                                        );
                                      });
                                    })
                                  : s.reject("Invalid arguments")),
                                t
                              ),
                              r
                            );
                          },
                        };
                        function j(e, t) {
                          var n = e.name + "/";
                          return (
                            e.storeName !== t.storeName &&
                              (n += e.storeName + "/"),
                            n
                          );
                        }
                        var J = {
                            _driver: "localStorageWrapper",
                            _initStorage: function (e) {
                              var t = {};
                              if (e) for (var n in e) t[n] = e[n];
                              return (
                                (t.keyPrefix = j(e, this._defaultConfig)),
                                !(function () {
                                  var e = "_localforage_support_test";
                                  try {
                                    return (
                                      localStorage.setItem(e, !0),
                                      localStorage.removeItem(e),
                                      !1
                                    );
                                  } catch (e) {
                                    return !0;
                                  }
                                })() || 0 < localStorage.length
                                  ? (((this._dbInfo = t).serializer = F),
                                    s.resolve())
                                  : s.reject()
                              );
                            },
                            _support: (function () {
                              try {
                                return (
                                  "undefined" != typeof localStorage &&
                                  "setItem" in localStorage &&
                                  !!localStorage.setItem
                                );
                              } catch (e) {
                                return !1;
                              }
                            })(),
                            iterate: function (e, t) {
                              var n = this,
                                r = n.ready().then(function () {
                                  for (
                                    var t = n._dbInfo,
                                      r = t.keyPrefix,
                                      o = r.length,
                                      i = localStorage.length,
                                      s = 1,
                                      a = 0;
                                    a < i;
                                    a++
                                  ) {
                                    var c = localStorage.key(a);
                                    if (0 === c.indexOf(r)) {
                                      var u = localStorage.getItem(c);
                                      if (
                                        (u && (u = t.serializer.deserialize(u)),
                                        void 0 !==
                                          (u = e(u, c.substring(o), s++)))
                                      )
                                        return u;
                                    }
                                  }
                                });
                              return a(r, t), r;
                            },
                            getItem: function (e, t) {
                              var n = this;
                              e = u(e);
                              var r = n.ready().then(function () {
                                var t = n._dbInfo,
                                  r = localStorage.getItem(t.keyPrefix + e);
                                return (
                                  r && (r = t.serializer.deserialize(r)), r
                                );
                              });
                              return a(r, t), r;
                            },
                            setItem: function (e, t, n) {
                              var r = this;
                              e = u(e);
                              var o = r.ready().then(function () {
                                void 0 === t && (t = null);
                                var n = t;
                                return new s(function (o, i) {
                                  var s = r._dbInfo;
                                  s.serializer.serialize(t, function (t, r) {
                                    if (r) i(r);
                                    else
                                      try {
                                        localStorage.setItem(
                                          s.keyPrefix + e,
                                          t
                                        ),
                                          o(n);
                                      } catch (t) {
                                        ("QuotaExceededError" !== t.name &&
                                          "NS_ERROR_DOM_QUOTA_REACHED" !==
                                            t.name) ||
                                          i(t),
                                          i(t);
                                      }
                                  });
                                });
                              });
                              return a(o, n), o;
                            },
                            removeItem: function (e, t) {
                              var n = this;
                              e = u(e);
                              var r = n.ready().then(function () {
                                var t = n._dbInfo;
                                localStorage.removeItem(t.keyPrefix + e);
                              });
                              return a(r, t), r;
                            },
                            clear: function (e) {
                              var t = this,
                                n = t.ready().then(function () {
                                  for (
                                    var e = t._dbInfo.keyPrefix,
                                      n = localStorage.length - 1;
                                    0 <= n;
                                    n--
                                  ) {
                                    var r = localStorage.key(n);
                                    0 === r.indexOf(e) &&
                                      localStorage.removeItem(r);
                                  }
                                });
                              return a(n, e), n;
                            },
                            length: function (e) {
                              var t = this.keys().then(function (e) {
                                return e.length;
                              });
                              return a(t, e), t;
                            },
                            key: function (e, t) {
                              var n = this,
                                r = n.ready().then(function () {
                                  var t,
                                    r = n._dbInfo;
                                  try {
                                    t = localStorage.key(e);
                                  } catch (r) {
                                    t = null;
                                  }
                                  return (
                                    t && (t = t.substring(r.keyPrefix.length)),
                                    t
                                  );
                                });
                              return a(r, t), r;
                            },
                            keys: function (e) {
                              var t = this,
                                n = t.ready().then(function () {
                                  for (
                                    var e = t._dbInfo,
                                      n = localStorage.length,
                                      r = [],
                                      o = 0;
                                    o < n;
                                    o++
                                  ) {
                                    var i = localStorage.key(o);
                                    0 === i.indexOf(e.keyPrefix) &&
                                      r.push(i.substring(e.keyPrefix.length));
                                  }
                                  return r;
                                });
                              return a(n, e), n;
                            },
                            dropInstance: function (e, t) {
                              if (
                                ((t = l.apply(this, arguments)),
                                !(e = ("function" != typeof e && e) || {}).name)
                              ) {
                                var n = this.config();
                                (e.name = e.name || n.name),
                                  (e.storeName = e.storeName || n.storeName);
                              }
                              var r,
                                o = this;
                              return (
                                a(
                                  (r = e.name
                                    ? new s(function (t) {
                                        e.storeName
                                          ? t(j(e, o._defaultConfig))
                                          : t(e.name + "/");
                                      }).then(function (e) {
                                        for (
                                          var t = localStorage.length - 1;
                                          0 <= t;
                                          t--
                                        ) {
                                          var n = localStorage.key(t);
                                          0 === n.indexOf(e) &&
                                            localStorage.removeItem(n);
                                        }
                                      })
                                    : s.reject("Invalid arguments")),
                                  t
                                ),
                                r
                              );
                            },
                          },
                          X = function (e, t) {
                            for (var n = e.length, r = 0; r < n; ) {
                              if (
                                (o = e[r]) === (i = t) ||
                                ("number" == typeof o &&
                                  "number" == typeof i &&
                                  isNaN(o) &&
                                  isNaN(i))
                              )
                                return !0;
                              r++;
                            }
                            var o, i;
                            return !1;
                          },
                          W =
                            Array.isArray ||
                            function (e) {
                              return (
                                "[object Array]" ===
                                Object.prototype.toString.call(e)
                              );
                            },
                          q = {},
                          z = {},
                          Q = { INDEXEDDB: P, WEBSQL: V, LOCALSTORAGE: J },
                          $ = [
                            Q.INDEXEDDB._driver,
                            Q.WEBSQL._driver,
                            Q.LOCALSTORAGE._driver,
                          ],
                          Z = ["dropInstance"],
                          ee = [
                            "clear",
                            "getItem",
                            "iterate",
                            "key",
                            "keys",
                            "length",
                            "removeItem",
                            "setItem",
                          ].concat(Z),
                          te = {
                            description: "",
                            driver: $.slice(),
                            name: "localforage",
                            size: 4980736,
                            storeName: "keyvaluepairs",
                            version: 1,
                          };
                        function ne(e, t) {
                          e[t] = function () {
                            var n = arguments;
                            return e.ready().then(function () {
                              return e[t].apply(e, n);
                            });
                          };
                        }
                        function re() {
                          for (var e = 1; e < arguments.length; e++) {
                            var t = arguments[e];
                            if (t)
                              for (var n in t)
                                t.hasOwnProperty(n) &&
                                  (W(t[n])
                                    ? (arguments[0][n] = t[n].slice())
                                    : (arguments[0][n] = t[n]));
                          }
                          return arguments[0];
                        }
                        var oe = new ((function () {
                          function e(t) {
                            for (var n in ((function (e, t) {
                              if (!(e instanceof t))
                                throw new TypeError(
                                  "Cannot call a class as a function"
                                );
                            })(this, e),
                            Q))
                              if (Q.hasOwnProperty(n)) {
                                var r = Q[n],
                                  o = r._driver;
                                (this[n] = o), q[o] || this.defineDriver(r);
                              }
                            (this._defaultConfig = re({}, te)),
                              (this._config = re({}, this._defaultConfig, t)),
                              (this._driverSet = null),
                              (this._initDriver = null),
                              (this._ready = !1),
                              (this._dbInfo = null),
                              this._wrapLibraryMethodsWithReady(),
                              this.setDriver(this._config.driver).catch(
                                function () {}
                              );
                          }
                          return (
                            (e.prototype.config = function (e) {
                              if (
                                "object" !== (void 0 === e ? "undefined" : r(e))
                              )
                                return "string" == typeof e
                                  ? this._config[e]
                                  : this._config;
                              if (this._ready)
                                return new Error(
                                  "Can't call config() after localforage has been used."
                                );
                              for (var t in e) {
                                if (
                                  ("storeName" === t &&
                                    (e[t] = e[t].replace(/\W/g, "_")),
                                  "version" === t && "number" != typeof e[t])
                                )
                                  return new Error(
                                    "Database version must be a number."
                                  );
                                this._config[t] = e[t];
                              }
                              return (
                                !("driver" in e && e.driver) ||
                                this.setDriver(this._config.driver)
                              );
                            }),
                            (e.prototype.defineDriver = function (e, t, n) {
                              var r = new s(function (t, n) {
                                try {
                                  var r = e._driver,
                                    o = new Error(
                                      "Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver"
                                    );
                                  if (!e._driver) return void n(o);
                                  for (
                                    var i = ee.concat("_initStorage"),
                                      c = 0,
                                      u = i.length;
                                    c < u;
                                    c++
                                  ) {
                                    var l = i[c];
                                    if (
                                      (!X(Z, l) || e[l]) &&
                                      "function" != typeof e[l]
                                    )
                                      return void n(o);
                                  }
                                  !(function () {
                                    for (
                                      var t = function (e) {
                                          return function () {
                                            var t = new Error(
                                                "Method " +
                                                  e +
                                                  " is not implemented by the current driver"
                                              ),
                                              n = s.reject(t);
                                            return (
                                              a(
                                                n,
                                                arguments[arguments.length - 1]
                                              ),
                                              n
                                            );
                                          };
                                        },
                                        n = 0,
                                        r = Z.length;
                                      n < r;
                                      n++
                                    ) {
                                      var o = Z[n];
                                      e[o] || (e[o] = t(o));
                                    }
                                  })();
                                  var d = function (n) {
                                    q[r], (q[r] = e), (z[r] = n), t();
                                  };
                                  "_support" in e
                                    ? e._support &&
                                      "function" == typeof e._support
                                      ? e._support().then(d, n)
                                      : d(!!e._support)
                                    : d(!0);
                                } catch (o) {
                                  n(o);
                                }
                              });
                              return c(r, t, n), r;
                            }),
                            (e.prototype.driver = function () {
                              return this._driver || null;
                            }),
                            (e.prototype.getDriver = function (e, t, n) {
                              var r = q[e]
                                ? s.resolve(q[e])
                                : s.reject(new Error("Driver not found."));
                              return c(r, t, n), r;
                            }),
                            (e.prototype.getSerializer = function (e) {
                              var t = s.resolve(F);
                              return c(t, e), t;
                            }),
                            (e.prototype.ready = function (e) {
                              var t = this,
                                n = t._driverSet.then(function () {
                                  return (
                                    null === t._ready &&
                                      (t._ready = t._initDriver()),
                                    t._ready
                                  );
                                });
                              return c(n, e, e), n;
                            }),
                            (e.prototype.setDriver = function (e, t, n) {
                              var r = this;
                              W(e) || (e = [e]);
                              var o = this._getSupportedDrivers(e);
                              function i() {
                                r._config.driver = r.driver();
                              }
                              function a(e) {
                                return (
                                  r._extend(e),
                                  i(),
                                  (r._ready = r._initStorage(r._config)),
                                  r._ready
                                );
                              }
                              var u =
                                null !== this._driverSet
                                  ? this._driverSet.catch(function () {
                                      return s.resolve();
                                    })
                                  : s.resolve();
                              return (
                                (this._driverSet = u
                                  .then(function () {
                                    var e = o[0];
                                    return (
                                      (r._dbInfo = null),
                                      (r._ready = null),
                                      r.getDriver(e).then(function (e) {
                                        var t;
                                        (r._driver = e._driver),
                                          i(),
                                          r._wrapLibraryMethodsWithReady(),
                                          (r._initDriver =
                                            ((t = o),
                                            function () {
                                              var e = 0;
                                              return (function n() {
                                                for (; e < t.length; ) {
                                                  var o = t[e];
                                                  return (
                                                    e++,
                                                    (r._dbInfo = null),
                                                    (r._ready = null),
                                                    r
                                                      .getDriver(o)
                                                      .then(a)
                                                      .catch(n)
                                                  );
                                                }
                                                i();
                                                var c = new Error(
                                                  "No available storage method found."
                                                );
                                                return (
                                                  (r._driverSet = s.reject(c)),
                                                  r._driverSet
                                                );
                                              })();
                                            }));
                                      })
                                    );
                                  })
                                  .catch(function () {
                                    i();
                                    var e = new Error(
                                      "No available storage method found."
                                    );
                                    return (
                                      (r._driverSet = s.reject(e)), r._driverSet
                                    );
                                  })),
                                c(this._driverSet, t, n),
                                this._driverSet
                              );
                            }),
                            (e.prototype.supports = function (e) {
                              return !!z[e];
                            }),
                            (e.prototype._extend = function (e) {
                              re(this, e);
                            }),
                            (e.prototype._getSupportedDrivers = function (e) {
                              for (
                                var t = [], n = 0, r = e.length;
                                n < r;
                                n++
                              ) {
                                var o = e[n];
                                this.supports(o) && t.push(o);
                              }
                              return t;
                            }),
                            (e.prototype._wrapLibraryMethodsWithReady =
                              function () {
                                for (var e = 0, t = ee.length; e < t; e++)
                                  ne(this, ee[e]);
                              }),
                            (e.prototype.createInstance = function (t) {
                              return new e(t);
                            }),
                            e
                          );
                        })())();
                        t.exports = oe;
                      },
                      { 3: 3 },
                    ],
                  },
                  {},
                  [4]
                )(4);
              }.call(this, n(28)));
            },
            function (e, t, n) {
              "use strict";
              (t.__esModule = !0),
                (t.SERVER_ERRORS = {
                  AUTH_ERR: {
                    code: "AUTH_ERR_AUTH_TOKEN_NOT_FOUND",
                    message:
                      "The auth token %s% does not exist. Please make sure you are logged in and have a valid auth token or try login again.",
                  },
                }),
                (t.ERRORS = {
                  PARAMETER_MISSING: {
                    code: "MISSING_PARAMETERS",
                    name: "Invalid or no parameter passed to the method.",
                  },
                }),
                (t.INIT_ERROR = {
                  NO_APP_ID: {
                    code: t.ERRORS.PARAMETER_MISSING.code,
                    name: t.ERRORS.PARAMETER_MISSING.name,
                    message:
                      "AppID cannot be empty. Please specify a valid appID.",
                    details: {},
                  },
                }),
                (t.GROUP_CREATION_ERRORS = {
                  EMPTY_PASSWORD: {
                    code: "ERR_EMPTY_GROUP_PASS",
                    details: void 0,
                    message: "Password is mandatory to join a group.",
                    name: void 0,
                  },
                }),
                (t.USERS_REQUEST_ERRORS = {
                  EMPTY_USERS_LIST: {
                    code: "EMPTY_USERS_LIST",
                    name: "EMPTY_USERS_LIST",
                    message: "The users list needs to have atleast one UID.",
                    details: {},
                  },
                }),
                (t.MESSAGES_REQUEST_ERRORS = {
                  REQUEST_IN_PROGRESS_ERROR: {
                    code: "REQUEST_IN_PROGRESS",
                    name: "REQUEST_IN_PROGRESS",
                    message: "Request in progress.",
                    details: {},
                  },
                  NOT_ENOUGH_PARAMS: {
                    code: "NOT_ENOUGH_PARAMETERS",
                    name: "NOT_ENOUGH_PARAMETERS",
                    message:
                      "`Timestamp`, `MessageId` or `updatedAfter` is required to use the 'fetchNext()' method.",
                    details: {},
                  },
                }),
                (t.MESSAGE_ERRORS = {
                  INVALID_CUSTOM_DATA: {
                    code: "-1",
                    name: "%s_CUSTOM_DATA",
                    message: "",
                    details: {},
                  },
                }),
                (t.LOGIN_ERROR = {
                  NOT_INITIALIZED: {
                    code: "-1",
                    name: "COMETCHAT_INITIALIZATION_NOT_DONE",
                    message:
                      "please initialize the cometchat before using login method.",
                    details: {},
                  },
                  UNAUTHORISED: {
                    code: 401,
                    name: "USER_NOT_AUTHORISED",
                    message:
                      "The `authToken` of the user is not authorised. Please verify again.",
                    details: {},
                  },
                  XMPP_CONNECTION_FAIL: {
                    code: -1,
                    name: "WS_CONNECTION_FAIL",
                    message: "WS Connection failed. %s",
                    details: {},
                  },
                  XMPP_CONNECTION_FAIL_PORT_ERROR: {
                    code: -1,
                    name: "WS_CONNECTION_FAIL",
                    message:
                      "WS Connection failed. Trying to connect with port: %s",
                    details: {},
                  },
                  XMPP_CONNECTION_FALLBACK_FAIL_PORT_ERROR: {
                    code: -1,
                    name: "WS_CONNECTION_FALLBACK_FAIL",
                    message:
                      "WS Connection fallback failed. Trying to connect with port: %s",
                    details: {},
                  },
                  XMPP_AUTH_FAIL: {
                    code: -1,
                    name: "WS_AUTH_FAIL",
                    message: "WS username/password not correct.",
                    details: {},
                  },
                  NO_INTERNET: {
                    code: -1,
                    name: "NO_INTERNET_CONNECTION",
                    message: "You do not have internet connection.",
                    details: {},
                  },
                  REQUEST_IN_PROGRESS: {
                    code: -1,
                    name: "LOGIN_IN_PROGRESS",
                    message:
                      "Please wait until the previous login request ends.",
                    details: {},
                  },
                }),
                (t.TYPINGNOTIFICATION_CONSTANTS = {
                  TOO_MANY_REQUEST: {
                    code: "TOO_MANY_REQUEST",
                    name: "TOO MANY REQUEST",
                    message:
                      "too many request, wait for `%s` seconds before sending next request.",
                    details: {},
                  },
                }),
                (t.FETCH_ERROR = {
                  ERROR_IN_API_CALL: {
                    code: "FAILED_TO_FETCH",
                    name: "FAILED_TO_FETCH",
                    message:
                      "There is an unknown issue with the API request. Please check your internet connection and verify the api call.",
                    details: {},
                  },
                });
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = (function () {
                function e(e, t, n, r) {
                  (this.receiverId = e),
                    (this.type = t),
                    (this.receiverType = n),
                    (this.category = r);
                }
                return (
                  (e.prototype.getId = function () {
                    return this.id;
                  }),
                  (e.prototype.setId = function (e) {
                    this.id = e;
                  }),
                  (e.prototype.getConversationId = function () {
                    return this.conversationId;
                  }),
                  (e.prototype.setConversationId = function (e) {
                    this.conversationId = e;
                  }),
                  (e.prototype.getParentMessageId = function () {
                    return this.parentMessageId;
                  }),
                  (e.prototype.setParentMessageId = function (e) {
                    this.parentMessageId = e;
                  }),
                  (e.prototype.getMuid = function () {
                    return this.muid;
                  }),
                  (e.prototype.setMuid = function (e) {
                    this.muid = e;
                  }),
                  (e.prototype.getSender = function () {
                    return this.sender;
                  }),
                  (e.prototype.setSender = function (e) {
                    this.sender = e;
                  }),
                  (e.prototype.getReceiver = function () {
                    return this.receiver;
                  }),
                  (e.prototype.setReceiver = function (e) {
                    this.receiver = e;
                  }),
                  (e.prototype.getReceiverId = function () {
                    return this.receiverId;
                  }),
                  (e.prototype.setReceiverId = function (e) {
                    this.receiverId = e;
                  }),
                  (e.prototype.getType = function () {
                    return this.type;
                  }),
                  (e.prototype.setType = function (e) {
                    this.type = e;
                  }),
                  (e.prototype.get = function () {
                    return this.id;
                  }),
                  (e.prototype.setReceiverType = function (e) {
                    this.receiverType = e;
                  }),
                  (e.prototype.getReceiverType = function () {
                    return this.receiverType;
                  }),
                  (e.prototype.setSentAt = function (e) {
                    this.sentAt = e;
                  }),
                  (e.prototype.getSentAt = function () {
                    return this.sentAt;
                  }),
                  (e.prototype.getStatus = function () {
                    return this.status;
                  }),
                  (e.prototype.setStatus = function (e) {
                    this.status = e;
                  }),
                  (e.prototype.getDeliveredAt = function () {
                    return this.deliveredAt;
                  }),
                  (e.prototype.setDeliveredAt = function (e) {
                    this.deliveredAt = e;
                  }),
                  (e.prototype.getDeliveredToMeAt = function () {
                    return this.deliveredToMeAt;
                  }),
                  (e.prototype.setDeliveredToMeAt = function (e) {
                    this.deliveredToMeAt = e;
                  }),
                  (e.prototype.getReadAt = function () {
                    return this.readAt;
                  }),
                  (e.prototype.setReadAt = function (e) {
                    this.readAt = e;
                  }),
                  (e.prototype.getReadByMeAt = function () {
                    return this.readByMeAt;
                  }),
                  (e.prototype.setReadByMeAt = function (e) {
                    this.readByMeAt = e;
                  }),
                  (e.prototype.getCategory = function () {
                    return this.category;
                  }),
                  (e.prototype.setCategory = function (e) {
                    this.category = e;
                  }),
                  (e.prototype.setEditedAt = function (e) {
                    this.editedAt = e;
                  }),
                  (e.prototype.getEditedAt = function () {
                    return this.editedAt;
                  }),
                  (e.prototype.setEditedBy = function (e) {
                    this.editedBy = e;
                  }),
                  (e.prototype.getEditedBy = function () {
                    return this.editedBy;
                  }),
                  (e.prototype.setDeletedAt = function (e) {
                    this.deletedAt = e;
                  }),
                  (e.prototype.getDeletedAt = function () {
                    return this.deletedAt;
                  }),
                  (e.prototype.setDeletedBy = function (e) {
                    this.deletedBy = e;
                  }),
                  (e.prototype.getDeletedBy = function () {
                    return this.deletedBy;
                  }),
                  (e.prototype.getReplyCount = function () {
                    return this.replyCount;
                  }),
                  (e.prototype.setReplyCount = function (e) {
                    this.replyCount = e;
                  }),
                  e
                );
              })();
              t.BaseMessage = r;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  }),
                i =
                  (this && this.__awaiter) ||
                  function (e, t, n, r) {
                    return new (n || (n = Promise))(function (o, i) {
                      function s(e) {
                        try {
                          c(r.next(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function a(e) {
                        try {
                          c(r.throw(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function c(e) {
                        e.done
                          ? o(e.value)
                          : new n(function (t) {
                              t(e.value);
                            }).then(s, a);
                      }
                      c((r = r.apply(e, t || [])).next());
                    });
                  },
                s =
                  (this && this.__generator) ||
                  function (e, t) {
                    var n,
                      r,
                      o,
                      i,
                      s = {
                        label: 0,
                        sent: function () {
                          if (1 & o[0]) throw o[1];
                          return o[1];
                        },
                        trys: [],
                        ops: [],
                      };
                    return (
                      (i = { next: a(0), throw: a(1), return: a(2) }),
                      "function" == typeof Symbol &&
                        (i[Symbol.iterator] = function () {
                          return this;
                        }),
                      i
                    );
                    function a(i) {
                      return function (a) {
                        return (function (i) {
                          if (n)
                            throw new TypeError(
                              "Generator is already executing."
                            );
                          for (; s; )
                            try {
                              if (
                                ((n = 1),
                                r &&
                                  (o =
                                    2 & i[0]
                                      ? r.return
                                      : i[0]
                                      ? r.throw ||
                                        ((o = r.return) && o.call(r), 0)
                                      : r.next) &&
                                  !(o = o.call(r, i[1])).done)
                              )
                                return o;
                              switch (
                                ((r = 0), o && (i = [2 & i[0], o.value]), i[0])
                              ) {
                                case 0:
                                case 1:
                                  o = i;
                                  break;
                                case 4:
                                  return s.label++, { value: i[1], done: !1 };
                                case 5:
                                  s.label++, (r = i[1]), (i = [0]);
                                  continue;
                                case 7:
                                  (i = s.ops.pop()), s.trys.pop();
                                  continue;
                                default:
                                  if (
                                    !(o =
                                      0 < (o = s.trys).length &&
                                      o[o.length - 1]) &&
                                    (6 === i[0] || 2 === i[0])
                                  ) {
                                    s = 0;
                                    continue;
                                  }
                                  if (
                                    3 === i[0] &&
                                    (!o || (i[1] > o[0] && i[1] < o[3]))
                                  ) {
                                    s.label = i[1];
                                    break;
                                  }
                                  if (6 === i[0] && s.label < o[1]) {
                                    (s.label = o[1]), (o = i);
                                    break;
                                  }
                                  if (o && s.label < o[2]) {
                                    (s.label = o[2]), s.ops.push(i);
                                    break;
                                  }
                                  o[2] && s.ops.pop(), s.trys.pop();
                                  continue;
                              }
                              i = t.call(e, s);
                            } catch (e) {
                              (i = [6, e]), (r = 0);
                            } finally {
                              n = o = 0;
                            }
                          if (5 & i[0]) throw i[1];
                          return { value: i[0] ? i[1] : void 0, done: !0 };
                        })([i, a]);
                      };
                    }
                  };
              t.__esModule = !0;
              var a = n(1),
                c = n(31),
                u = n(3),
                l = n(21),
                d = n(7),
                p = n(0),
                f = n(32),
                h = (n(46), n(47), n(48), n(23)),
                E = n(10),
                g = n(49),
                S = n(4),
                C = n(24),
                _ = n(33),
                m = n(9),
                T = n(35),
                y = n(25),
                A = n(36),
                I = n(26),
                v = n(8),
                N = n(38),
                R = n(2);
              c.Strophe.addConnectionPlugin("pubsub", {
                _connection: null,
                init: function (e) {
                  (this._connection = e),
                    c.Strophe.addNamespace(
                      "PUBSUB",
                      "http://jabber.org/protocol/pubsub"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_SUBSCRIBE_OPTIONS",
                      c.Strophe.NS.PUBSUB + "#subscribe_options"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_ERRORS",
                      c.Strophe.NS.PUBSUB + "#errors"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_EVENT",
                      c.Strophe.NS.PUBSUB + "#event"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_OWNER",
                      c.Strophe.NS.PUBSUB + "#owner"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_AUTO_CREATE",
                      c.Strophe.NS.PUBSUB + "#auto-create"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_PUBLISH_OPTIONS",
                      c.Strophe.NS.PUBSUB + "#publish-options"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_NODE_CONFIG",
                      c.Strophe.NS.PUBSUB + "#node_config"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_CREATE_AND_CONFIGURE",
                      c.Strophe.NS.PUBSUB + "#create-and-configure"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_SUBSCRIBE_AUTHORIZATION",
                      c.Strophe.NS.PUBSUB + "#subscribe_authorization"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_GET_PENDING",
                      c.Strophe.NS.PUBSUB + "#get-pending"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_MANAGE_SUBSCRIPTIONS",
                      c.Strophe.NS.PUBSUB + "#manage-subscriptions"
                    ),
                    c.Strophe.addNamespace(
                      "PUBSUB_META_DATA",
                      c.Strophe.NS.PUBSUB + "#meta-data"
                    );
                },
                createNode: function (e, t, n, r, o) {
                  var i = this._connection.getUniqueId("pubsubcreatenode"),
                    s = c.$iq({ from: e, to: t, type: "set", id: i }),
                    a = c.Strophe.xmlElement("configure", []),
                    u = c.Strophe.xmlElement("x", [["xmlns", "jabber:x:data"]]),
                    l = c.Strophe.xmlElement("field", [
                      ["var", "FORM_TYPE"],
                      ["type", "hidden"],
                    ]),
                    d = c.Strophe.xmlElement("value", []),
                    p = c.Strophe.xmlTextNode(
                      c.Strophe.NS.PUBSUB + "#node_config"
                    );
                  for (var f in (d.appendChild(p),
                  l.appendChild(d),
                  u.appendChild(l),
                  r)) {
                    var h = r[f];
                    u.appendChild(h);
                  }
                  return (
                    r.length && 0 != r.length && a.appendChild(u),
                    s
                      .c("pubsub", { xmlns: c.Strophe.NS.PUBSUB })
                      .c("create", { node: n })
                      .up()
                      .cnode(a),
                    this._connection.addHandler(o, null, "iq", null, i, null),
                    this._connection.send(s.tree()),
                    i
                  );
                },
                subscribe: function (e, t, n, r, o, i) {
                  var s = this._connection.getUniqueId("subscribenode"),
                    a = c.Strophe.xmlElement("options", []),
                    u = c.Strophe.xmlElement("x", [["xmlns", "jabber:x:data"]]),
                    l = c.Strophe.xmlElement("field", [
                      ["var", "FORM_TYPE"],
                      ["type", "hidden"],
                    ]),
                    d = c.Strophe.xmlElement("value", []),
                    p = c.Strophe.xmlTextNode(
                      c.Strophe.NS.PUBSUB_SUBSCRIBE_OPTIONS
                    );
                  d.appendChild(p), l.appendChild(d), u.appendChild(l);
                  var f = c.$iq({ from: e, to: t, type: "set", id: s });
                  if (r && r.length && 0 !== r.length) {
                    for (var h = 0; h < r.length; h++) {
                      var E = r[h];
                      u.appendChild(E);
                    }
                    a.appendChild(u),
                      f
                        .c("pubsub", { xmlns: c.Strophe.NS.PUBSUB })
                        .c("subscribe", { node: n, jid: e })
                        .up()
                        .cnode(a);
                  } else
                    f.c("pubsub", { xmlns: c.Strophe.NS.PUBSUB }).c(
                      "subscribe",
                      { node: n, jid: e }
                    );
                  return (
                    this._connection.addHandler(i, null, "iq", null, s, null),
                    this._connection.addHandler(
                      o,
                      null,
                      "message",
                      null,
                      null,
                      null
                    ),
                    this._connection.send(f.tree()),
                    s
                  );
                },
                unsubscribe: function (e, t, n, r) {
                  var o = this._connection.getUniqueId("unsubscribenode"),
                    i = c.$iq({ from: e, to: t, type: "set", id: o });
                  return (
                    i
                      .c("pubsub", { xmlns: c.Strophe.NS.PUBSUB })
                      .c("unsubscribe", { node: n, jid: e }),
                    this._connection.addHandler(r, null, "iq", null, o, null),
                    this._connection.send(i.tree()),
                    o
                  );
                },
                publish: function (e, t, n, r, o) {
                  var i = this._connection.getUniqueId("publishnode"),
                    s = c.Strophe.xmlElement("publish", [
                      ["node", n],
                      ["jid", e],
                    ]);
                  for (var a in r) {
                    var u = c.Strophe.xmlElement("item", []),
                      l = c.Strophe.xmlElement("entry", []),
                      d = c.Strophe.xmlTextNode(r[a]);
                    l.appendChild(d), u.appendChild(l), s.appendChild(u);
                  }
                  var p = c.$iq({ from: e, to: t, type: "set", id: i });
                  return (
                    p.c("pubsub", { xmlns: c.Strophe.NS.PUBSUB }).cnode(s),
                    this._connection.addHandler(o, null, "iq", null, i, null),
                    this._connection.send(p.tree()),
                    i
                  );
                },
                items: function (e, t, n, r, o) {
                  var i = c.$iq({ from: e, to: t, type: "get" });
                  return (
                    i
                      .c("pubsub", { xmlns: c.Strophe.NS.PUBSUB })
                      .c("items", { node: n }),
                    this._connection.sendIQ(i.tree(), r, o)
                  );
                },
              });
              var O = (function () {
                function e() {
                  (this.messageHandlers = []),
                    (this.XMPPConnectionHandlers = []),
                    (this.userHandlers = []),
                    (this.callHandlers = []),
                    (this.groupHandlers = []),
                    (this.loginHandlers = []),
                    (this.joinedGroups = []),
                    (this.iqHandlers = []);
                }
                return (
                  (e.getInstance = function () {
                    try {
                      return (
                        (null != this.xMPPConnectionHelper &&
                          null != this.xMPPConnectionHelper) ||
                          (this.xMPPConnectionHelper = new e()),
                        this.xMPPConnectionHelper
                      );
                    } catch (e) {
                      a.Logger.error("Error in getInstance", e);
                    }
                  }),
                  (e.prototype.XMPPConnect = function (t, n) {
                    var r = this,
                      o = "wss://",
                      i = "/ws/";
                    return (
                      t && ((o = "https://"), (i = "/http-bind/")),
                      new Promise(function (s, u) {
                        try {
                          a.isFalsy(n) &&
                            (n = t
                              ? e.XMPP_BIND_URL_HTTPS
                              : e.XMPP_BIND_URL_WS),
                            m.LocalStorage.getInstance()
                              .get(p.APP_SETTINGS.APP_SETTINGS)
                              .then(function (t) {
                                a.isFalsy(t)
                                  ? a.getAppSettings().then(function (t) {
                                      (e.XMPP_BIND_URL =
                                        o +
                                        a.getChatHost(t) +
                                        ":" +
                                        t[
                                          p.APP_SETTINGS.KEYS
                                            .CHAT_HTTPS_BIND_PORT
                                        ] +
                                        i),
                                        (r.connection =
                                          new c.Strophe.Connection(
                                            e.XMPP_BIND_URL
                                          )),
                                        s(!0);
                                    })
                                  : ((e.XMPP_BIND_URL =
                                      o +
                                      a.getChatHost(t) +
                                      ":" +
                                      t[
                                        p.APP_SETTINGS.KEYS.CHAT_HTTPS_BIND_PORT
                                      ] +
                                      i),
                                    (r.connection = new c.Strophe.Connection(
                                      e.XMPP_BIND_URL
                                    )),
                                    s(!0));
                              });
                        } catch (e) {
                          u(new R.CometChatException(e));
                        }
                      })
                    );
                  }),
                  (e.prototype.XMPPDisconnect = function () {
                    try {
                      this.connection
                        ? (this.connection.flush(),
                          this.connection.disconnect(),
                          clearInterval(this.pingInterval))
                        : a.Logger.info(
                            "XMPPPHelper",
                            "No connection object found"
                          );
                    } catch (e) {
                      a.Logger.error("XMPPHelper: XMPPDisconnect", e);
                    }
                  }),
                  (e.prototype.XMMPLogin = function (e, t, n, r) {
                    var o = this;
                    void 0 === t && (t = p.XMPP.deafult_password);
                    try {
                      this.XMPPConnect(n).then(function (n) {
                        o.connection.connected
                          ? r(c.Strophe.Status.CONNECTED)
                          : (clearInterval(o.pingInterval),
                            m.LocalStorage.getInstance()
                              .get(p.APP_SETTINGS.APP_SETTINGS)
                              .then(function (n) {
                                a.isFalsy(n)
                                  ? a.getAppSettings().then(function (n) {
                                      o.perfomAfterConnection(
                                        e,
                                        t,
                                        r,
                                        a.getChatHost(n),
                                        a.getJidHost(n)
                                      );
                                    })
                                  : o.perfomAfterConnection(
                                      e,
                                      t,
                                      r,
                                      a.getChatHost(n),
                                      a.getJidHost(n)
                                    );
                              }));
                      });
                    } catch (n) {
                      a.Logger.error("XMPPHelper: XMPPLogin", n);
                    }
                  }),
                  (e.prototype.getPresenceInfo = function (e, t) {
                    var n = this;
                    try {
                      var r = "somename" + new Date().getTime();
                      this.addIqHandler(r, function (e) {
                        t(e);
                      }),
                        a.getAppSettings().then(
                          function (t) {
                            var r = a.getJidHost(t),
                              o = c
                                .$iq({
                                  from: n.connection.jid,
                                  id: "CC^COMETCHAT-PRESENCE",
                                  type: "get",
                                  to: r,
                                })
                                .c("query", {
                                  xmlns: "jabber:iq:presencereq",
                                  action: "presence",
                                })
                                .t(JSON.stringify(e));
                            n.connection.send(o);
                          },
                          function (t) {
                            a.Logger.error("XMPPHelper: getPresenceInfo", t);
                            var r = c
                              .$iq({
                                from: n.connection.jid,
                                id: "CC^COMETCHAT-PRESENCE",
                                type: "get",
                                to: p.XMPP.host,
                              })
                              .c("query", {
                                xmlns: "jabber:iq:presencereq",
                                action: "presence",
                              })
                              .t(JSON.stringify(e));
                            n.connection.send(r);
                          }
                        );
                    } catch (r) {
                      a.Logger.error("XMPPHelper: getPresenceInfo", r);
                    }
                  }),
                  (e.prototype.sendTypingStarted = function (e, t, n) {
                    var r = this;
                    void 0 === t && (t = p.XMPP.CONVERSATION.TYPE.CHAT);
                    try {
                      e &&
                        this.connection &&
                        !u.CometChat.didMessagesPollingStart() &&
                        u.CometChat.getConnectionStatus() ==
                          p.CONNECTION_STATUS.CONNECTED &&
                        u.CometChat.getLoggedInUser().then(function (o) {
                          var i = new S.User(o);
                          i.setAuthToken(""),
                            r.connection.chatstates.sendComposing(e, t, i, n);
                        });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: sendTypingStarted", e);
                    }
                  }),
                  (e.prototype.sendTypingPaused = function (e, t, n) {
                    var r = this;
                    void 0 === t && (t = p.XMPP.CONVERSATION.TYPE.CHAT);
                    try {
                      e &&
                        this.connection &&
                        !u.CometChat.didMessagesPollingStart() &&
                        u.CometChat.getConnectionStatus() ==
                          p.CONNECTION_STATUS.CONNECTED &&
                        u.CometChat.getLoggedInUser().then(function (o) {
                          var i = new S.User(o);
                          i.setAuthToken(""),
                            r.connection.chatstates.sendPaused(e, t, i, n);
                        });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: sendTypingPaused", e);
                    }
                  }),
                  (e.prototype.addMessageEventListener = function (e, t) {
                    try {
                      (this.messageHandlers = this.messageHandlers.filter(
                        function (t) {
                          return t._name != e;
                        }
                      )),
                        (this.messageHandlers = this.messageHandlers.concat([
                          new l.MessageListener(e, t),
                        ]));
                    } catch (t) {
                      a.Logger.error("XMPPHelper: addMessageEventListener", t);
                    }
                  }),
                  (e.prototype.removeMessageEventListener = function (e) {
                    try {
                      this.messageHandlers = this.messageHandlers.filter(
                        function (t) {
                          return t._name !== e;
                        }
                      );
                    } catch (e) {
                      a.Logger.error(
                        "XMPPHelper: removeMessageEventListener",
                        e
                      );
                    }
                  }),
                  (e.prototype.addXMPPConnectionEventListener = function (
                    e,
                    t
                  ) {
                    try {
                      (this.XMPPConnectionHandlers =
                        this.XMPPConnectionHandlers.filter(function (t) {
                          return t._name != e;
                        })),
                        (this.XMPPConnectionHandlers =
                          this.XMPPConnectionHandlers.concat([new M(e, t)]));
                    } catch (t) {
                      a.Logger.error(
                        "XMPPHelper: addXMPPConnectionEventListener",
                        t
                      );
                    }
                  }),
                  (e.prototype.removeXMPPConnectionEventListener = function (
                    e
                  ) {
                    try {
                      this.XMPPConnectionHandlers =
                        this.XMPPConnectionHandlers.filter(function (t) {
                          return t._name !== e;
                        });
                    } catch (e) {
                      a.Logger.error(
                        "XMPPHelper: removeXMPPConnectionEventListener",
                        e
                      );
                    }
                  }),
                  (e.prototype.addCallEventListener = function (e, t) {
                    try {
                      (this.callHandlers = this.callHandlers.filter(function (
                        t
                      ) {
                        return t._name != e;
                      })),
                        (this.callHandlers = this.callHandlers.concat([
                          new l.CallListener(e, t),
                        ]));
                    } catch (t) {
                      a.Logger.error("XMPPHelper: addCallEventListener", t);
                    }
                  }),
                  (e.prototype.removeCallEventListener = function (e) {
                    try {
                      this.callHandlers = this.callHandlers.filter(function (
                        t
                      ) {
                        return t._name !== e;
                      });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: removeCallEventListener", e);
                    }
                  }),
                  (e.prototype.addUserEventListener = function (e, t) {
                    try {
                      (this.userHandlers = this.userHandlers.filter(function (
                        t
                      ) {
                        return t._name != e;
                      })),
                        (this.userHandlers = this.userHandlers.concat([
                          new l.UserListener(e, t),
                        ]));
                    } catch (t) {
                      a.Logger.error("XMPPHelper: addUserEventListener", t);
                    }
                  }),
                  (e.prototype.removeUserEventListener = function (e) {
                    try {
                      this.userHandlers = this.userHandlers.filter(function (
                        t
                      ) {
                        return t._name !== e;
                      });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: removeUserEventListener", e);
                    }
                  }),
                  (e.prototype.addGroupEventListener = function (e, t) {
                    try {
                      (this.groupHandlers = this.groupHandlers.filter(function (
                        t
                      ) {
                        return t._name != e;
                      })),
                        (this.groupHandlers = this.groupHandlers.concat([
                          new l.GroupListener(e, t),
                        ]));
                    } catch (t) {
                      a.Logger.error("XMPPHelper: addGroupEventListener", t);
                    }
                  }),
                  (e.prototype.removeGroupEventListener = function (e) {
                    try {
                      this.groupHandlers = this.groupHandlers.filter(function (
                        t
                      ) {
                        return t._name !== e;
                      });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: removeGroupEventListener", e);
                    }
                  }),
                  (e.prototype.addLoginEventListener = function (e, t) {
                    try {
                      (this.loginHandlers = this.loginHandlers.filter(function (
                        t
                      ) {
                        return t._name != e;
                      })),
                        (this.loginHandlers = this.loginHandlers.concat([
                          new l.LoginListener(e, t),
                        ]));
                    } catch (t) {
                      a.Logger.error("XMPPHelper: addLoginEventListener", t);
                    }
                  }),
                  (e.prototype.removeLoginEventListener = function (e) {
                    try {
                      this.loginHandlers = this.loginHandlers.filter(function (
                        t
                      ) {
                        return t._name !== e;
                      });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: removeLoginEventListener", e);
                    }
                  }),
                  (e.prototype.addIqHandler = function (e, t) {
                    try {
                      this.iqHandlers = this.iqHandlers.concat([
                        new l.Listener(e, t),
                      ]);
                    } catch (e) {
                      a.Logger.error("XMPPHelper: addIqHandler", e);
                    }
                  }),
                  (e.prototype.removeIqHandler = function (e) {
                    try {
                      this.iqHandlers = this.iqHandlers.filter(function (t) {
                        return t._name !== e;
                      });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: removeIqHandler", e);
                    }
                  }),
                  (e.prototype.joinMuc = function (e) {
                    var t = this;
                    try {
                      !u.CometChat.didMessagesPollingStart() &&
                        u.CometChat.getConnectionStatus() ==
                          p.CONNECTION_STATUS.CONNECTED &&
                        this.connection &&
                        a.getAppSettings().then(function (n) {
                          t.connection.muc.join(
                            a.format(
                              p.XMPP.muc_jid_string,
                              u.CometChat.getAppId(),
                              e.getGuid(),
                              u.CometChat.getAppId(),
                              a.getJidHost(n)
                            ),
                            t.connection.jid,
                            null,
                            null,
                            null,
                            null,
                            0
                          );
                        });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: joinMuc", e);
                    }
                  }),
                  (e.prototype.leaveMuc = function (e) {
                    var t = this;
                    try {
                      !u.CometChat.didMessagesPollingStart() &&
                        u.CometChat.getConnectionStatus() ==
                          p.CONNECTION_STATUS.CONNECTED &&
                        this.connection &&
                        a.getAppSettings().then(function (n) {
                          t.connection.muc.leave(
                            a.format(
                              p.XMPP.muc_jid_string,
                              u.CometChat.getAppId(),
                              e,
                              u.CometChat.getAppId(),
                              a.getJidHost(n)
                            ),
                            t.connection.jid
                          );
                        });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: leaveMuc", e);
                    }
                  }),
                  (e.prototype.getUsersVCard = function (e, t) {
                    var n = this;
                    try {
                      E.getJidFromUid(e).then(function (e) {
                        u.CometChat.getConnectionStatus() ===
                          p.CONNECTION_STATUS.CONNECTED &&
                          n.connection.vcard.get(function (e) {
                            t(g.VCardController.transformVCard(e));
                          }, e);
                      });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: getUsersVCard", e);
                    }
                  }),
                  (e.prototype.trigerMessageHandler = function (e, t) {
                    if (a.isFalsy(t))
                      (e = d.MessageController.trasformJSONMessge(e)),
                        this.messageHandlers.map(function (t) {
                          try {
                            if (t._eventListener)
                              if (e instanceof h.Action);
                              else if (e instanceof C.Call);
                              else {
                                var n = e;
                                switch (n.getType()) {
                                  case p.MessageConstatnts.TYPE.TEXT:
                                    a.isFalsy(
                                      t._eventListener.onTextMessageReceived
                                    ) ||
                                      t._eventListener.onTextMessageReceived(e);
                                    break;
                                  case p.MessageConstatnts.TYPE.CUSTOM:
                                    a.isFalsy(
                                      t._eventListener.onCustomMessageReceived
                                    ) ||
                                      t._eventListener.onCustomMessageReceived(
                                        e
                                      );
                                    break;
                                  default:
                                    n.getCategory() == p.MessageCategory.CUSTOM
                                      ? a.isFalsy(
                                          t._eventListener
                                            .onCustomMessageReceived
                                        ) ||
                                        t._eventListener.onCustomMessageReceived(
                                          e
                                        )
                                      : a.isFalsy(
                                          t._eventListener
                                            .onMediaMessageReceived
                                        ) ||
                                        t._eventListener.onMediaMessageReceived(
                                          e
                                        );
                                }
                              }
                          } catch (t) {
                            a.Logger.error(
                              "XMPPHelper: trigerMessageHandler",
                              t
                            );
                          }
                        }),
                        e instanceof C.Call && this.publishCallEvents(e),
                        e instanceof h.Action && this.publishActionEvents(e);
                    else if (
                      ((e = d.MessageController.trasformJSONMessge(e)),
                      this.messageHandlers[t]._eventListener)
                    )
                      try {
                        if (this.messageHandlers[t]._eventListener)
                          if (e instanceof h.Action);
                          else if (e instanceof C.Call);
                          else {
                            var n = e;
                            switch (n.getType()) {
                              case p.MessageConstatnts.TYPE.TEXT:
                                a.isFalsy(
                                  this.messageHandlers[t]._eventListener
                                    .onTextMessageReceived
                                ) ||
                                  this.messageHandlers[
                                    t
                                  ]._eventListener.onTextMessageReceived(e);
                                break;
                              case p.MessageConstatnts.TYPE.CUSTOM:
                                a.isFalsy(
                                  this.messageHandlers[t]._eventListener
                                    .onCustomMessageReceived
                                ) ||
                                  this.messageHandlers[
                                    t
                                  ]._eventListener.onCustomMessageReceived(e);
                                break;
                              default:
                                n.getCategory() == p.MessageCategory.CUSTOM
                                  ? a.isFalsy(
                                      this.messageHandlers[t]._eventListener
                                        .onCustomMessageReceived
                                    ) ||
                                    this.messageHandlers[
                                      t
                                    ]._eventListener.onCustomMessageReceived(e)
                                  : a.isFalsy(
                                      this.messageHandlers[t]._eventListener
                                        .onMediaMessageReceived
                                    ) ||
                                    this.messageHandlers[
                                      t
                                    ]._eventListener.onMediaMessageReceived(e);
                            }
                          }
                      } catch (t) {
                        a.Logger.error("XMPPHelper: trigerMessageHandler", t);
                      }
                  }),
                  (e.prototype.publishActionEvents = function (e) {
                    var t = this;
                    try {
                      switch (e.getAction()) {
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MEMBER_JOINED:
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MEMBER_INVITED:
                          this.groupHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onUserJoined) ||
                              t._eventListener.onUserJoined(
                                e,
                                e.getActionBy(),
                                e.getActionFor()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MEMBER_LEFT:
                          this.groupHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onUserLeft) ||
                              t._eventListener.onUserLeft(
                                e,
                                e.getActionBy(),
                                e.getActionFor()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MEMBER_BANNED:
                          this.groupHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onUserBanned) ||
                              t._eventListener.onUserBanned(
                                e,
                                e.getActionOn(),
                                e.getActionBy(),
                                e.getActionFor()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MEMBER_KICKED:
                          this.groupHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onUserKicked) ||
                              t._eventListener.onUserKicked(
                                e,
                                e.getActionOn(),
                                e.getActionBy(),
                                e.getActionFor()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE
                          .TYPE_MEMBER_UNBANNED:
                          this.groupHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onUserUnbanned) ||
                              t._eventListener.onUserUnbanned(
                                e,
                                e.getActionOn(),
                                e.getActionBy(),
                                e.getActionFor()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE
                          .TYPE_MEMBER_SCOPE_CHANGED:
                          this.groupHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onMemberScopeChanged) ||
                              t._eventListener.onMemberScopeChanged(
                                e,
                                e.getActionOn(),
                                e.getNewScope(),
                                e.getOldScope(),
                                e.getActionFor()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MESSAGE_EDITED:
                          this.messageHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onMessageEdited) ||
                              t._eventListener.onMessageEdited(e.getActionOn());
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE
                          .TYPE_MESSAGE_DELETED:
                          this.messageHandlers.map(function (t) {
                            a.isFalsy(t._eventListener.onMessageDeleted) ||
                              t._eventListener.onMessageDeleted(
                                e.getActionOn()
                              );
                          });
                          break;
                        case p.ActionConstatnts.ACTION_TYPE.TYPE_MEMBER_ADDED:
                          var n = e.getActionOn();
                          E.getJidFromUid(n.getUid()).then(function (n) {
                            n ==
                              c.Strophe.getBareJidFromJid(t.connection.jid) &&
                              (t.joinMuc(e.getActionFor()),
                              t.markAsDelivered(
                                e.getActionFor().guid,
                                "group",
                                e.getId()
                              ));
                          }),
                            this.groupHandlers.map(function (n) {
                              var r = e.getActionOn();
                              E.getJidFromUid(r.getUid()).then(function (r) {
                                r ==
                                  c.Strophe.getBareJidFromJid(
                                    t.connection.jid
                                  ) && t.joinMuc(e.getActionFor()),
                                  a.isFalsy(
                                    n._eventListener.onMemberAddedToGroup
                                  ) ||
                                    n._eventListener.onMemberAddedToGroup(
                                      e,
                                      e.getActionOn(),
                                      e.getActionBy(),
                                      e.getActionFor()
                                    );
                              });
                            });
                      }
                    } catch (n) {
                      a.Logger.error("XMPPHelper: publishActionEvents", n);
                    }
                  }),
                  (e.prototype.publishCallEvents = function (e) {
                    try {
                      var t = _.CallController.getInstance().getActiveCall();
                      switch (e.getStatus()) {
                        case p.CallConstants.CALL_STATUS.INITIATED:
                          e.getReceiverType() ==
                          p.CallConstants.RECEIVER_TYPE_GROUP
                            ? this.callHandlers.map(function (t) {
                                e
                                  .getCallInitiator()
                                  .getUid()
                                  .toLocaleLowerCase() !=
                                  u.CometChat.user
                                    .getUid()
                                    .toLocaleLowerCase() &&
                                  (a.isFalsy(
                                    t._eventListener.onIncomingCallReceived
                                  ) ||
                                    t._eventListener.onIncomingCallReceived(e));
                              })
                            : this.callHandlers.map(function (t) {
                                a.isFalsy(
                                  t._eventListener.onIncomingCallReceived
                                ) || t._eventListener.onIncomingCallReceived(e);
                              });
                          break;
                        case p.CallConstants.CALL_STATUS.ONGOING:
                          e.getReceiverType() ==
                          p.CallConstants.RECEIVER_TYPE_GROUP
                            ? e
                                .getCallInitiator()
                                .getUid()
                                .toLocaleLowerCase() ==
                                u.CometChat.user.getUid().toLocaleLowerCase() &&
                              this.callHandlers.map(function (t) {
                                a.isFalsy(
                                  t._eventListener.onOutgoingCallAccepted
                                ) || t._eventListener.onOutgoingCallAccepted(e);
                              })
                            : this.callHandlers.map(function (t) {
                                a.isFalsy(
                                  t._eventListener.onOutgoingCallAccepted
                                ) || t._eventListener.onOutgoingCallAccepted(e);
                              });
                          break;
                        case p.CallConstants.CALL_STATUS.UNANSWERED:
                          if (
                            e.getCallInitiator().getUid().toLocaleLowerCase() ==
                            u.CometChat.user.getUid().toLocaleLowerCase()
                          )
                            this.callHandlers.map(function (t) {
                              a.isFalsy(
                                t._eventListener.onOutgoingCallRejected
                              ) || t._eventListener.onOutgoingCallRejected(e);
                            });
                          else {
                            if (
                              null !== t &&
                              t.getSessionId() === e.getSessionId()
                            )
                              try {
                                _.CallController.getInstance().endCall();
                              } catch (e) {
                                a.Logger.error("CallError", e);
                              }
                            this.callHandlers.map(function (t) {
                              a.isFalsy(
                                t._eventListener.onIncomingCallCancelled
                              ) || t._eventListener.onIncomingCallCancelled(e);
                            });
                          }
                          break;
                        case p.CallConstants.CALL_STATUS.REJECTED:
                          if (
                            e.getReceiverType() ==
                            p.CallConstants.RECEIVER_TYPE_GROUP
                          )
                            e.getCallInitiator().getUid().toLocaleLowerCase() ==
                              u.CometChat.user.getUid().toLocaleLowerCase() &&
                              this.callHandlers.map(function (t) {
                                a.isFalsy(
                                  t._eventListener.onOutgoingCallRejected
                                ) || t._eventListener.onOutgoingCallRejected(e);
                              });
                          else {
                            if (
                              null !== t &&
                              t.getSessionId() === e.getSessionId()
                            )
                              try {
                                _.CallController.getInstance().endCall();
                              } catch (e) {
                                a.Logger.error("CallError", e);
                              }
                            this.callHandlers.map(function (t) {
                              a.isFalsy(
                                t._eventListener.onOutgoingCallRejected
                              ) || t._eventListener.onOutgoingCallRejected(e);
                            });
                          }
                          break;
                        case p.CallConstants.CALL_STATUS.BUSY:
                          e.getReceiverType() ==
                          p.CallConstants.RECEIVER_TYPE_GROUP
                            ? e
                                .getCallInitiator()
                                .getUid()
                                .toLocaleLowerCase() ==
                                u.CometChat.user.getUid().toLocaleLowerCase() &&
                              this.callHandlers.map(function (t) {
                                a.isFalsy(
                                  t._eventListener.onOutgoingCallRejected
                                ) || t._eventListener.onOutgoingCallRejected(e);
                              })
                            : this.callHandlers.map(function (n) {
                                if (
                                  null !== t &&
                                  t.getSessionId() === e.getSessionId()
                                )
                                  try {
                                    _.CallController.getInstance().endCall();
                                  } catch (n) {
                                    a.Logger.error("CallError", n);
                                  }
                                a.isFalsy(
                                  n._eventListener.onOutgoingCallRejected
                                ) || n._eventListener.onOutgoingCallRejected(e);
                              });
                          break;
                        case p.CallConstants.CALL_STATUS.CANCELLED:
                          if (
                            (this.callHandlers.map(function (t) {
                              a.isFalsy(
                                t._eventListener.onIncomingCallCancelled
                              ) || t._eventListener.onIncomingCallCancelled(e);
                            }),
                            null !== t && t.getSessionId() === e.getSessionId())
                          )
                            try {
                              _.CallController.getInstance().endCall();
                            } catch (e) {
                              a.Logger.error("CallError", e);
                            }
                          break;
                        case p.CallConstants.CALL_STATUS.ENDED:
                          if (
                            (_.CallController.getInstance().getCallListner() &&
                              _.CallController.getInstance()
                                .getCallListner()
                                ._eventListener.onCallEnded(e),
                            null !== t && t.getSessionId() === e.getSessionId())
                          )
                            try {
                              _.CallController.getInstance().endCall();
                            } catch (e) {
                              a.Logger.error("CallError", e);
                            }
                      }
                    } catch (e) {
                      a.Logger.error("XMPPHelper: publishCallEvents", e);
                    }
                  }),
                  (e.prototype.publishTypinStatusNotification = function (
                    e,
                    t
                  ) {
                    try {
                      switch (t) {
                        case p.TYPING_NOTIFICATION.ACTIONS.STARTED:
                          this.messageHandlers.map(function (t) {
                            t._eventListener.onTypingStarted &&
                              t._eventListener.onTypingStarted(e);
                          }),
                            A.TypingNotificationController.addIncomingTypingStarted(
                              e
                            );
                          break;
                        case p.TYPING_NOTIFICATION.ACTIONS.ENDED:
                          this.messageHandlers.map(function (t) {
                            t._eventListener.onTypingEnded &&
                              t._eventListener.onTypingEnded(e);
                          }),
                            A.TypingNotificationController.removeIncomingTypingStarted(
                              e
                            );
                      }
                    } catch (t) {
                      a.Logger.error(
                        "XMPPHelper: publishTypingStatusNotification",
                        t
                      );
                    }
                  }),
                  (e.prototype.publishDeliveryReceipt = function (e) {
                    var t = this;
                    try {
                      e.getElementsByTagName("forwarded")[0] &&
                        (e = e.getElementsByTagName("message")[0]),
                        d.MessageController.processDeliveryReceipt(e).then(
                          function (e) {
                            t.messageHandlers.map(function (t) {
                              t._eventListener.onMessagesDelivered &&
                                t._eventListener.onMessagesDelivered(e);
                            });
                          },
                          function (e) {
                            a.Logger.error("Error in publish delivery", e);
                          }
                        );
                    } catch (e) {
                      a.Logger.error("XMPPHelper: publishDeliveryReceipt", e);
                    }
                  }),
                  (e.prototype.publishReadReceipt = function (e) {
                    var t = this;
                    try {
                      e.getElementsByTagName("forwarded")[0] &&
                        (e = e.getElementsByTagName("message")[0]),
                        d.MessageController.processReadReceipt(e).then(
                          function (e) {
                            t.messageHandlers.map(function (t) {
                              t._eventListener.onMessagesRead &&
                                t._eventListener.onMessagesRead(e);
                            });
                          },
                          function (e) {
                            a.Logger.error("Error in publish read", e);
                          }
                        );
                    } catch (e) {
                      a.Logger.error("XMPPHelper: publishReadReceipt", e);
                    }
                  }),
                  (e.prototype.markAsRead = function (e, t, n) {
                    var r = this;
                    try {
                      var o = u.CometChat.getMode();
                      !u.CometChat.didMessagesPollingStart() &&
                        u.CometChat.getConnectionStatus() ==
                          p.CONNECTION_STATUS.CONNECTED &&
                        this.connection &&
                        (a.isFalsy(o) ||
                          (o && o === p.APP_SETTINGS.KEYS.DEFAULT_MODE)) &&
                        u.CometChat.getLoggedInUser().then(function (o) {
                          var i = new S.User(o);
                          i.setAuthToken("");
                          var s = JSON.stringify(i);
                          t == p.MessageConstatnts.RECEIVER_TYPE.USER
                            ? E.getJidFromUid(e).then(function (o) {
                                var i = c
                                    .$msg({
                                      to: o,
                                      from: r.connection.jid,
                                      id: r.connection.getUniqueId(),
                                      type: p.MessageConstatnts.XMPP_KEYS
                                        .TYPE_USER,
                                    })
                                    .c("user", {
                                      xmlns: "com.cometchat.models:User",
                                    })
                                    .t(s)
                                    .up(),
                                  a = c.Strophe.xmlElement("read", {
                                    type: t,
                                    receiverId: e,
                                    xmlns: "urn:xmpp:receipts",
                                    id: "[" + u.CometChat.getAppId() + "]" + n,
                                  });
                                i.tree().appendChild(a), r.connection.send(i);
                              })
                            : E.getGroupJidFromGUID(e).then(function (o) {
                                var i = c
                                    .$msg({
                                      to: o,
                                      from: r.connection.jid,
                                      id: r.connection.getUniqueId(),
                                      type: p.MessageConstatnts.XMPP_KEYS
                                        .TYPE_GROUP,
                                    })
                                    .c("user", {
                                      xmlns: "com.cometchat.models:User",
                                    })
                                    .t(s)
                                    .up(),
                                  a = c.Strophe.xmlElement("read", {
                                    type: t,
                                    receiverId: e,
                                    xmlns: c.Strophe.NS.RECEIPTS,
                                    id: "[" + u.CometChat.getAppId() + "]" + n,
                                  });
                                i.tree().appendChild(a), r.connection.send(i);
                              });
                        });
                    } catch (o) {
                      a.Logger.error("XMPPHelper: markAsRead", o);
                    }
                  }),
                  (e.prototype.markAsDelivered = function (e, t, n) {
                    var r = this;
                    try {
                      var o = u.CometChat.getMode();
                      !u.CometChat.didMessagesPollingStart() &&
                        u.CometChat.getConnectionStatus() ==
                          p.CONNECTION_STATUS.CONNECTED &&
                        this.connection &&
                        (a.isFalsy(o) ||
                          (o && o === p.APP_SETTINGS.KEYS.DEFAULT_MODE)) &&
                        u.CometChat.getLoggedInUser().then(function (o) {
                          var i = new S.User(o);
                          i.setAuthToken("");
                          var s = JSON.stringify(i);
                          t == p.MessageConstatnts.RECEIVER_TYPE.USER
                            ? E.getJidFromUid(e).then(function (o) {
                                var i = c
                                    .$msg({
                                      to: o,
                                      from: r.connection.jid,
                                      id: r.connection.getUniqueId(),
                                      type: p.MessageConstatnts.XMPP_KEYS
                                        .TYPE_USER,
                                    })
                                    .c("user", {
                                      xmlns: "com.cometchat.models:User",
                                    })
                                    .t(s)
                                    .up(),
                                  a = c.Strophe.xmlElement("delivered", {
                                    type: t,
                                    receiverId: e,
                                    xmlns: "urn:xmpp:receipts",
                                    id: "[" + u.CometChat.getAppId() + "]" + n,
                                  });
                                i.tree().appendChild(a), r.connection.send(i);
                              })
                            : E.getGroupJidFromGUID(e).then(function (o) {
                                var i = c
                                    .$msg({
                                      to: o,
                                      from: r.connection.jid,
                                      id: r.connection.getUniqueId(),
                                      type: p.MessageConstatnts.XMPP_KEYS
                                        .TYPE_GROUP,
                                    })
                                    .c("user", {
                                      xmlns: "com.cometchat.models:User",
                                    })
                                    .t(s)
                                    .up(),
                                  a = c.Strophe.xmlElement("delivered", {
                                    type: t,
                                    receiverId: e,
                                    xmlns: c.Strophe.NS.RECEIPTS,
                                    id: "[" + u.CometChat.getAppId() + "]" + n,
                                  });
                                i.tree().appendChild(a), r.connection.send(i);
                              });
                        });
                    } catch (o) {
                      a.Logger.error("XMPPHelper: markAsDelivered", o);
                    }
                  }),
                  (e.prototype.subscribeToTopic = function (e) {
                    var t = this;
                    try {
                      m.LocalStorage.getInstance()
                        .get(p.APP_SETTINGS.APP_SETTINGS)
                        .then(function (n) {
                          a.isFalsy(n)
                            ? a.getAppSettings().then(function (n) {
                                t.connection.pubsub.subscribe(
                                  t.connection.jid,
                                  p.XMPP.PUBSUB_CHANNEL + "." + a.getJidHost(n),
                                  e,
                                  {},
                                  function () {
                                    a.Logger.info(
                                      "XMPPHelper: subscribeToTopic",
                                      "onEvent"
                                    );
                                  },
                                  function () {
                                    a.Logger.info(
                                      "XMPPHelper: subscribeToTopic",
                                      "onsubscribe"
                                    );
                                  }
                                );
                              })
                            : t.connection.pubsub.subscribe(
                                t.connection.jid,
                                p.XMPP.PUBSUB_CHANNEL + "." + a.getJidHost(n),
                                e,
                                {},
                                function () {
                                  a.Logger.info(
                                    "XMPPHelper: subscribeToTopic",
                                    "onEvent"
                                  );
                                },
                                function () {
                                  a.Logger.info(
                                    "XMPPHelper: subscribeToTopic",
                                    "onsubscribe"
                                  );
                                }
                              );
                        });
                    } catch (e) {
                      a.Logger.error("XMPPHelper: subscribeToTopic", e);
                    }
                  }),
                  (e.prototype.getRooms = function () {
                    var e = this;
                    return new Promise(function (t, n) {
                      try {
                        u.CometChat.didMessagesPollingStart() ||
                        u.CometChat.getConnectionStatus() !=
                          p.CONNECTION_STATUS.CONNECTED
                          ? a.Logger.info(
                              "getRooms()",
                              "No rooms found since WS is not connected"
                            )
                          : void 0 !== e.connection
                          ? m.LocalStorage.getInstance()
                              .get(p.APP_SETTINGS.APP_SETTINGS)
                              .then(
                                function (n) {
                                  a.isFalsy(n)
                                    ? a.getAppSettings().then(function (n) {
                                        e.connection.muc.listRooms(
                                          u.CometChat.getAppId() +
                                            "." +
                                            a.getJidHost(n),
                                          function (n) {
                                            var r =
                                              n.getElementsByTagName("item");
                                            (r = Array.prototype.slice.call(r)),
                                              (e.joinedGroups = []),
                                              r.map(function (t) {
                                                e.joinedGroups.push(
                                                  E.getUidFromJid(
                                                    t.getAttribute("jid")
                                                  )
                                                );
                                              }),
                                              t(e.joinedGroups);
                                          }
                                        );
                                      })
                                    : e.connection.muc.listRooms(
                                        u.CometChat.getAppId() +
                                          "." +
                                          a.getJidHost(n),
                                        function (n) {
                                          var r =
                                            n.getElementsByTagName("item");
                                          (r = Array.prototype.slice.call(r)),
                                            (e.joinedGroups = []),
                                            r.map(function (t) {
                                              e.joinedGroups.push(
                                                E.getUidFromJid(
                                                  t.getAttribute("jid")
                                                )
                                              );
                                            }),
                                            t(e.joinedGroups);
                                        }
                                      );
                                },
                                function (e) {
                                  n(new R.CometChatException(e));
                                }
                              )
                          : e.addXMPPConnectionEventListener(
                              "XMPPConnectionListener",
                              new P({
                                onConnected: function () {
                                  e.getRooms().then(function (n) {
                                    t(n),
                                      e.removeXMPPConnectionEventListener(
                                        "XMPPConnectionListener"
                                      );
                                  });
                                },
                              })
                            );
                      } catch (e) {
                        n(new R.CometChatException(e));
                      }
                    });
                  }),
                  (e.prototype.restart = function () {
                    return i(this, void 0, void 0, function () {
                      var e, t;
                      return s(this, function (n) {
                        switch (n.label) {
                          case 0:
                            return (
                              (e = u.CometChat.getInstance(
                                u.CometChat.getAppId()
                              )),
                              (t = e.getAuthToken()),
                              [4, u.CometChat.logout()]
                            );
                          case 1:
                            return n.sent(), [4, u.CometChat.login(t)];
                          case 2:
                            return n.sent(), [2];
                        }
                      });
                    });
                  }),
                  (e.prototype.pushToTypingListeners = function (
                    e,
                    t,
                    n,
                    r,
                    o
                  ) {
                    n.setSender(e),
                      t && n.setMetadata(JSON.parse(t)),
                      0 < r.length &&
                        A.TypingNotificationController.addIncomingTypingStarted(
                          n
                        ),
                      0 < o.length &&
                        A.TypingNotificationController.removeIncomingTypingStarted(
                          n
                        ),
                      this.messageHandlers.map(function (e) {
                        0 < r.length &&
                          e._eventListener.onTypingStarted &&
                          e._eventListener.onTypingStarted(n),
                          0 < o.length &&
                            e._eventListener.onTypingEnded &&
                            e._eventListener.onTypingEnded(n);
                      });
                  }),
                  (e.prototype.perfomAfterConnection = function (
                    t,
                    n,
                    r,
                    o,
                    l
                  ) {
                    var g = this;
                    this.connection.connect(
                      a.format(
                        p.XMPP.jid_string,
                        u.CometChat.getAppId(),
                        t,
                        o,
                        u.CometChat.getSessionId()
                      ),
                      n,
                      function (t, n) {
                        try {
                          if (
                            (a.isFalsy(r) || r(t, n),
                            t == c.Strophe.Status.CONNECTED)
                          ) {
                            switch (
                              (u.CometChat.setSuccessfulTimeStamp(
                                new Date().getTime()
                              ),
                              g.connection.sendPresence(
                                c
                                  .$pres()
                                  .c("priority")
                                  .t("1")
                                  .up()
                                  .c("status")
                                  .t("online")
                              ),
                              g.connection.muc.init(g.connection),
                              g.connection.vcard.init(g.connection),
                              g.connection.chatstates.init(g.connection),
                              g.connection.receipts.init(g.connection),
                              g.connection.pubsub.init(g.connection),
                              (g.pingInterval = setInterval(function () {
                                g.connection &&
                                  g.connection._proto &&
                                  g.connection._proto.socket &&
                                  g.connection.ping.ping(
                                    l,
                                    function () {
                                      return i(g, void 0, void 0, function () {
                                        return s(this, function (e) {
                                          return (
                                            a.Logger.info(
                                              "ping result",
                                              "successful"
                                            ),
                                            u.CometChat.setSuccessfulTimeStamp(
                                              new Date().getTime()
                                            ),
                                            u.CometChat.getConnectionStatus() !=
                                              p.CONNECTION_STATUS.CONNECTED &&
                                              (this.XMPPDisconnect(),
                                              u.CometChat.getInstance().makeXMPPConnection()),
                                            [2]
                                          );
                                        });
                                      });
                                    },
                                    function () {
                                      a.Logger.info(
                                        "ping result",
                                        "unsuccessful"
                                      ),
                                        u.CometChat.getInstance().setConnectionStatus(
                                          p.CONNECTION_STATUS.DISCONNECTED
                                        ),
                                        g.XMPPConnectionHandlers.map(function (
                                          e
                                        ) {
                                          try {
                                            e._XMPPeventListener &&
                                              (a.isFalsy(
                                                e._XMPPeventListener
                                                  .onDisconnected
                                              ) ||
                                                e._XMPPeventListener.onDisconnected());
                                          } catch (e) {
                                            a.Logger.error(
                                              "XMPPConnectionHandlers: Disconnected Status",
                                              e
                                            );
                                          }
                                        }),
                                        g.XMPPDisconnect(),
                                        u.CometChat.getInstance().accidentallyDisconnected();
                                    },
                                    2e3
                                  );
                              }, 25e3)),
                              u.CometChat.appSettings.getIsAutoJoinEnabled() &&
                                m.LocalStorage.getInstance()
                                  .get(p.APP_SETTINGS.APP_SETTINGS)
                                  .then(function (e) {
                                    a.isFalsy(e)
                                      ? a.getAppSettings().then(function (e) {
                                          g.connection.muc.listRooms(
                                            u.CometChat.getAppId() +
                                              "." +
                                              a.getJidHost(e),
                                            function (e) {
                                              var t =
                                                e.getElementsByTagName("item");
                                              (t =
                                                Array.prototype.slice.call(
                                                  t
                                                )).map(function (e) {
                                                g.connection.muc.join(
                                                  e.getAttribute("jid"),
                                                  g.connection.jid
                                                );
                                              });
                                            }
                                          );
                                        })
                                      : g.connection.muc.listRooms(
                                          u.CometChat.getAppId() +
                                            "." +
                                            a.getJidHost(e),
                                          function (e) {
                                            var t =
                                              e.getElementsByTagName("item");
                                            (t =
                                              Array.prototype.slice.call(
                                                t
                                              )).map(function (e) {
                                              g.connection.muc.join(
                                                e.getAttribute("jid"),
                                                g.connection.jid,
                                                null,
                                                null,
                                                null,
                                                null,
                                                0,
                                                null
                                              );
                                            });
                                          }
                                        );
                                  }),
                              u.CometChat.appSettings.getSubscriptionType())
                            ) {
                              case N.AppSettings.SUBSCRIPTION_TYPE_ALL_USERS:
                                g.subscribeToTopic(
                                  a.format(
                                    p.XMPP.pubsub_global_string,
                                    u.CometChat.getAppId()
                                  )
                                );
                                break;
                              case N.AppSettings.SUBSCRIPTION_TYPE_FRIENDS:
                              case N.AppSettings.SUBSCRIPTION_TYPE_NONE:
                                break;
                              case N.AppSettings.SUBSCRIPTION_TYPE_ROLES:
                                u.CometChat.appSettings
                                  .getRoles()
                                  .map(function (e) {
                                    g.subscribeToTopic(
                                      a.format(
                                        p.XMPP.pubsub_role_string,
                                        u.CometChat.getAppId(),
                                        e
                                      )
                                    );
                                  });
                            }
                            g.connection.send(
                              c
                                .$iq({
                                  from: c.Strophe.getBareJidFromJid(
                                    g.connection.jid
                                  ),
                                  id: "enable1",
                                  type: "set",
                                })
                                .c("enable", { xmlns: "urn:xmpp:carbons:2" })
                            ),
                              g.connection.addHandler(
                                function (e) {
                                  if (
                                    !(0 < e.getElementsByTagName("x").length)
                                  ) {
                                    var t =
                                      f.PresenceController.transformPresence(e);
                                    g.getUsersVCard(t.getUid(), function (e) {
                                      a.isFalsy(e.getUid()) ||
                                        (u.CometChat.appSettings.getSubscriptionType() ==
                                          N.AppSettings
                                            .SUBSCRIPTION_TYPE_FRIENDS &&
                                          g.userHandlers.map(function (n) {
                                            if (n)
                                              switch (
                                                (e.setLastActiveAt(
                                                  t.getLastActiveAt()
                                                ),
                                                t.getStatus())
                                              ) {
                                                case p.PresenceConstatnts.STATUS
                                                  .ONLINE:
                                                  e.setStatus(
                                                    p.PresenceConstatnts.STATUS
                                                      .ONLINE
                                                  ),
                                                    a.isFalsy(
                                                      n._eventListener
                                                        .onUserOnline
                                                    ) ||
                                                      n._eventListener.onUserOnline(
                                                        e
                                                      );
                                                  break;
                                                default:
                                                  e.setStatus(
                                                    p.PresenceConstatnts.STATUS
                                                      .OFFLINE
                                                  ),
                                                    a.isFalsy(
                                                      n._eventListener
                                                        .onUserOffline
                                                    ) ||
                                                      n._eventListener.onUserOffline(
                                                        e
                                                      );
                                              }
                                          }));
                                    });
                                  }
                                  return !0;
                                },
                                null,
                                "presence"
                              ),
                              g.connection.addHandler(
                                function (e) {
                                  0 <
                                    e.getElementsByTagName("muc_join").length &&
                                    g.connection.muc.join(
                                      e.getAttribute(
                                        p.MessageConstatnts.XMPP_KEYS.FROM
                                      ),
                                      g.connection.jid,
                                      null,
                                      null,
                                      null,
                                      null,
                                      0
                                    );
                                  var t = e.getElementsByTagName("presence");
                                  return (
                                    0 <
                                      (t = Array.prototype.slice.call(t))
                                        .length &&
                                      g.iqHandlers.map(function (e) {
                                        e._callback(
                                          f.PresenceController.transformPresences(
                                            t
                                          )
                                        );
                                      }),
                                    !0
                                  );
                                },
                                null,
                                "iq"
                              ),
                              g.connection.addHandler(
                                function (e) {
                                  return (
                                    0 <
                                      e.getElementsByTagName("settings")
                                        .length && g.restart(),
                                    !0
                                  );
                                },
                                null,
                                "iq"
                              ),
                              m.LocalStorage.getInstance()
                                .get(p.APP_SETTINGS.APP_SETTINGS)
                                .then(function (e) {
                                  a.isFalsy(e)
                                    ? a.getAppSettings().then(function (e) {
                                        g.connection.addHandler(
                                          function (e) {
                                            var t = JSON.parse(
                                                unescape(
                                                  E.parseHTML(
                                                    e.getElementsByTagName(
                                                      "body"
                                                    )[0]
                                                  )
                                                )
                                                  .trim()
                                                  .toString()
                                              ),
                                              n =
                                                v.UsersController.trasformJSONUser(
                                                  t
                                                );
                                            return (
                                              g.userHandlers.map(function (e) {
                                                if (e)
                                                  switch (n.getStatus()) {
                                                    case p.PresenceConstatnts
                                                      .STATUS.OFFLINE:
                                                      a.isFalsy(
                                                        e._eventListener
                                                          .onUserOffline
                                                      ) ||
                                                        e._eventListener.onUserOffline(
                                                          n
                                                        );
                                                      break;
                                                    default:
                                                      a.isFalsy(
                                                        e._eventListener
                                                          .onUserOnline
                                                      ) ||
                                                        e._eventListener.onUserOnline(
                                                          n
                                                        );
                                                  }
                                              }),
                                              !0
                                            );
                                          },
                                          null,
                                          "message",
                                          null,
                                          null,
                                          p.XMPP.PUBSUB_CHANNEL +
                                            "." +
                                            a.getJidHost(e),
                                          null
                                        );
                                      })
                                    : g.connection.addHandler(
                                        function (e) {
                                          var t = JSON.parse(
                                              unescape(
                                                E.parseHTML(
                                                  e.getElementsByTagName(
                                                    "body"
                                                  )[0]
                                                )
                                              )
                                                .trim()
                                                .toString()
                                            ),
                                            n =
                                              v.UsersController.trasformJSONUser(
                                                t
                                              );
                                          return (
                                            g.userHandlers.map(function (e) {
                                              if (e)
                                                switch (n.getStatus()) {
                                                  case p.PresenceConstatnts
                                                    .STATUS.OFFLINE:
                                                    a.isFalsy(
                                                      e._eventListener
                                                        .onUserOffline
                                                    ) ||
                                                      e._eventListener.onUserOffline(
                                                        n
                                                      );
                                                    break;
                                                  default:
                                                    a.isFalsy(
                                                      e._eventListener
                                                        .onUserOnline
                                                    ) ||
                                                      e._eventListener.onUserOnline(
                                                        n
                                                      );
                                                }
                                            }),
                                            !0
                                          );
                                        },
                                        null,
                                        "message",
                                        null,
                                        null,
                                        p.XMPP.PUBSUB_CHANNEL +
                                          "." +
                                          a.getJidHost(e),
                                        null
                                      );
                                }),
                              g.connection.addHandler(
                                function (t) {
                                  var n;
                                  try {
                                    if (
                                      u.CometChat.getConnectionStatus() ==
                                      p.CONNECTION_STATUS.CONNECTED
                                    ) {
                                      try {
                                        if (
                                          ((n =
                                            d.MessageController.trasformXMPPMessage(
                                              t
                                            )),
                                          a.isFalsy(n))
                                        )
                                          if (
                                            d.MessageController.isDeliveryReceipt(
                                              t
                                            )
                                          )
                                            (t.getAttribute(
                                              p.MessageConstatnts.XMPP_KEYS.TYPE
                                            ) ==
                                              p.MessageConstatnts.XMPP_KEYS
                                                .TYPE_GROUP &&
                                              E.getFullJidForGroup(
                                                t.getAttribute(
                                                  p.MessageConstatnts.XMPP_KEYS
                                                    .FROM
                                                )
                                              ) ==
                                                e.getInstance().connection
                                                  .jid) ||
                                              g.publishDeliveryReceipt(t);
                                          else {
                                            if (
                                              !d.MessageController.isReadRceipt(
                                                t
                                              )
                                            )
                                              return !0;
                                            (t.getAttribute(
                                              p.MessageConstatnts.XMPP_KEYS.TYPE
                                            ) ==
                                              p.MessageConstatnts.XMPP_KEYS
                                                .TYPE_GROUP &&
                                              E.getFullJidForGroup(
                                                t.getAttribute(
                                                  p.MessageConstatnts.XMPP_KEYS
                                                    .FROM
                                                )
                                              ) ==
                                                e.getInstance().connection
                                                  .jid) ||
                                              g.publishReadReceipt(t);
                                          }
                                        else
                                          t.getAttribute(
                                            p.MessageConstatnts.XMPP_KEYS.TYPE
                                          ) ==
                                          p.MessageConstatnts.XMPP_KEYS
                                            .TYPE_GROUP
                                            ? E.getFullJidForGroup(
                                                t.getAttribute(
                                                  p.MessageConstatnts.XMPP_KEYS
                                                    .FROM
                                                )
                                              ) ==
                                                e.getInstance().connection
                                                  .jid ||
                                              d.MessageController.checkIfCabon(
                                                t
                                              ) ||
                                              g.connection.receipts._processReceipt(
                                                t,
                                                n.getId()
                                              )
                                            : d.MessageController.checkIfCabon(
                                                t
                                              )
                                            ? g.trigerMessageHandler(t)
                                            : g.connection.receipts._processReceipt(
                                                t,
                                                n.getId()
                                              );
                                        d.MessageController.isReadRceipt(t) ||
                                        d.MessageController.isDeliveryReceipt(t)
                                          ? (t = n)
                                          : (t.getAttribute(
                                              p.MessageConstatnts.XMPP_KEYS.TYPE
                                            ) ==
                                              p.MessageConstatnts.XMPP_KEYS
                                                .TYPE_GROUP &&
                                              E.getFullJidForGroup(
                                                t.getAttribute(
                                                  p.MessageConstatnts.XMPP_KEYS
                                                    .FROM
                                                )
                                              ) ==
                                                e.getInstance().connection
                                                  .jid) ||
                                            (t = n);
                                      } catch (n) {
                                        return (
                                          a.Logger.error(
                                            "Error in processing incoming message",
                                            { e: n, message: t }
                                          ),
                                          !0
                                        );
                                      }
                                      if (!a.isFalsy(t)) {
                                        try {
                                          y.MessageListnerMaping.getInstance().set(
                                            "all",
                                            parseInt(t.id)
                                          ),
                                            u.CometChat.setLastMessageId(t.id);
                                        } catch (n) {
                                          a.Logger.error(
                                            "Error in storing  incoming message id",
                                            { e: n }
                                          );
                                        }
                                        g.messageHandlers.map(function (e) {
                                          return i(
                                            g,
                                            void 0,
                                            void 0,
                                            function () {
                                              var n, r, o;
                                              return s(this, function (i) {
                                                switch (i.label) {
                                                  case 0:
                                                    return (
                                                      i.trys.push([0, 5, , 6]),
                                                      e
                                                        ? t instanceof h.Action
                                                          ? [3, 4]
                                                          : [3, 1]
                                                        : [3, 4]
                                                    );
                                                  case 1:
                                                    return t instanceof C.Call
                                                      ? [3, 4]
                                                      : [3, 2];
                                                  case 2:
                                                    return (
                                                      (n = t),
                                                      (r =
                                                        d.MessageController.trasformJSONMessge(
                                                          n
                                                        )),
                                                      [
                                                        4,
                                                        I.ExtensionController.hookOnMessageReceived(
                                                          r
                                                        ),
                                                      ]
                                                    );
                                                  case 3:
                                                    switch (
                                                      (n = i.sent()).getType()
                                                    ) {
                                                      case p
                                                        .MessageConstatnts.TYPE.TEXT:
                                                        a.isFalsy(
                                                          e._eventListener
                                                            .onTextMessageReceived
                                                        ) ||
                                                          e._eventListener.onTextMessageReceived(
                                                            n
                                                          );
                                                        break;
                                                      case p
                                                        .MessageConstatnts.TYPE.CUSTOM:
                                                        a.isFalsy(
                                                          e._eventListener
                                                            .onCustomMessageReceived
                                                        ) ||
                                                          e._eventListener.onCustomMessageReceived(
                                                            n
                                                          );
                                                        break;
                                                      default:
                                                        n.getCategory() ==
                                                        p.MessageCategory.CUSTOM
                                                          ? a.isFalsy(
                                                              e._eventListener
                                                                .onCustomMessageReceived
                                                            ) ||
                                                            e._eventListener.onCustomMessageReceived(
                                                              t
                                                            )
                                                          : a.isFalsy(
                                                              e._eventListener
                                                                .onMediaMessageReceived
                                                            ) ||
                                                            e._eventListener.onMediaMessageReceived(
                                                              t
                                                            );
                                                    }
                                                    i.label = 4;
                                                  case 4:
                                                    return [3, 6];
                                                  case 5:
                                                    return (
                                                      (o = i.sent()),
                                                      a.Logger.error(
                                                        "Error in processing incoming message",
                                                        { e: o }
                                                      ),
                                                      [3, 6]
                                                    );
                                                  case 6:
                                                    return [2];
                                                }
                                              });
                                            }
                                          );
                                        }),
                                          t instanceof C.Call &&
                                            g.publishCallEvents(t),
                                          t instanceof h.Action &&
                                            g.publishActionEvents(t);
                                      }
                                    }
                                  } catch (n) {
                                    a.Logger.error(
                                      "Error in message processing",
                                      { error: n }
                                    );
                                  }
                                  return !0;
                                },
                                null,
                                "message"
                              ),
                              g.connection.addHandler(
                                function (t) {
                                  try {
                                    if (
                                      0 < t.getElementsByTagName("error").length
                                    )
                                      return !0;
                                    if (
                                      !t.getElementsByTagName("composing") &&
                                      !t.getElementsByTagName("paused")
                                    )
                                      return !0;
                                    t.getElementsByTagName("forwarded")[0] &&
                                      (t =
                                        t.getElementsByTagName("message")[0]);
                                    var n,
                                      r,
                                      o = t.getElementsByTagName("composing"),
                                      i = t.getElementsByTagName("paused"),
                                      s = t.getAttribute("from"),
                                      c = t.getAttribute("type"),
                                      u = t.getAttribute("to"),
                                      l = void 0;
                                    if (
                                      (t.getElementsByTagName("body")[0] &&
                                        (n = unescape(
                                          E.parseHTML(
                                            t.getElementsByTagName("body")[0]
                                          )
                                        )
                                          .trim()
                                          .toString()),
                                      0 < o.length || 0 < i.length)
                                    )
                                      switch (c) {
                                        case p.XMPP.CONVERSATION.TYPE.CHAT:
                                          (r = new T.TypingIndicator(
                                            E.getUidFromJid(u),
                                            p.MessageConstatnts.RECEIVER_TYPE.USER
                                          )),
                                            t.getElementsByTagName("user")[0]
                                              ? (delete (l = new S.User(
                                                  JSON.parse(
                                                    unescape(
                                                      E.parseHTML(
                                                        t.getElementsByTagName(
                                                          "user"
                                                        )[0]
                                                      )
                                                    )
                                                      .trim()
                                                      .toString()
                                                  )
                                                )).authToken,
                                                g.pushToTypingListeners(
                                                  l,
                                                  n,
                                                  r,
                                                  o,
                                                  i
                                                ))
                                              : g.getUsersVCard(
                                                  E.getUidFromJid(s),
                                                  function (e) {
                                                    g.pushToTypingListeners(
                                                      e,
                                                      n,
                                                      r,
                                                      o,
                                                      i
                                                    );
                                                  }
                                                );
                                          break;
                                        case p.XMPP.CONVERSATION.TYPE
                                          .GROUP_CHAT:
                                          if (
                                            E.getFullJidForGroup(
                                              t.getAttribute(
                                                p.MessageConstatnts.XMPP_KEYS
                                                  .FROM
                                              )
                                            ) == e.getInstance().connection.jid
                                          )
                                            return !0;
                                          (r = new T.TypingIndicator(
                                            E.getGUIDFromJID(s),
                                            p.MessageConstatnts.RECEIVER_TYPE.GROUP
                                          )),
                                            t.getElementsByTagName("user")[0]
                                              ? (delete (l = new S.User(
                                                  JSON.parse(
                                                    unescape(
                                                      E.parseHTML(
                                                        t.getElementsByTagName(
                                                          "user"
                                                        )[0]
                                                      )
                                                    )
                                                      .trim()
                                                      .toString()
                                                  )
                                                )).authToken,
                                                g.pushToTypingListeners(
                                                  l,
                                                  n,
                                                  r,
                                                  o,
                                                  i
                                                ))
                                              : g.getUsersVCard(
                                                  E.getUidFromJid(s),
                                                  function (e) {
                                                    g.pushToTypingListeners(
                                                      e,
                                                      n,
                                                      r,
                                                      o,
                                                      i
                                                    );
                                                  }
                                                );
                                      }
                                  } catch (t) {
                                    a.Logger.error(
                                      "error in message processing",
                                      { error: t }
                                    );
                                  }
                                  return !0;
                                },
                                null,
                                "message"
                              );
                          }
                        } catch (t) {
                          a.Logger.error(
                            "XMPPHelper: performAfterConnection",
                            t
                          );
                        }
                      }
                    );
                  }),
                  (e.XMPP_HOST = p.XMPP.host),
                  (e.XMPP_PORT = p.XMPP.port),
                  (e.xMPPConnectionHelper = new e()),
                  (e.XMPP_BIND_URL =
                    "wss://" + e.XMPP_HOST + ":" + e.XMPP_PORT + p.XMPP.ws_url),
                  (e.XMPP_BIND_URL_WS =
                    "wss://" + e.XMPP_HOST + ":" + e.XMPP_PORT + p.XMPP.ws_url),
                  (e.XMPP_BIND_URL_HTTPS =
                    "https://" +
                    e.XMPP_HOST +
                    ":" +
                    e.XMPP_PORT +
                    p.XMPP.bind_url),
                  e
                );
              })();
              t.XMPPConnectionHelper = O;
              var P = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                (this.onConnected = void 0),
                  (this.inConnecting = void 0),
                  (this.onDisconnected = void 0),
                  (this.onFeatureThrottled = void 0),
                  a.isFalsy(e[0].onConnected) ||
                    (this.onConnected = e[0].onConnected),
                  a.isFalsy(e[0].inConnecting) ||
                    (this.inConnecting = e[0].inConnecting),
                  a.isFalsy(e[0].onDisconnected) ||
                    (this.onDisconnected = e[0].onDisconnected),
                  a.isFalsy(e[0].onFeatureThrottled) ||
                    (this.onFeatureThrottled = e[0].onFeatureThrottled);
              };
              t.XMPPConnectionEventListener = P;
              var M = (function (e) {
                function t(t, n, r, o) {
                  var i = e.call(this, t, o) || this;
                  return (i._XMPPeventListener = n), r && (i._cursor = r), i;
                }
                return o(t, e), t;
              })(
                (t.XMPPListener = function (e, t) {
                  (this._name = e), (this._callback = t);
                })
              );
              t.XMPPConnectionListener = M;
            },
            function (e, t, n) {
              var r;
              window,
                (r = function () {
                  return (function (e) {
                    var t = {};
                    function n(r) {
                      if (t[r]) return t[r].exports;
                      var o = (t[r] = { i: r, l: !1, exports: {} });
                      return (
                        e[r].call(o.exports, o, o.exports, n),
                        (o.l = !0),
                        o.exports
                      );
                    }
                    return (
                      (n.m = e),
                      (n.c = t),
                      (n.d = function (e, t, r) {
                        n.o(e, t) ||
                          Object.defineProperty(e, t, {
                            enumerable: !0,
                            get: r,
                          });
                      }),
                      (n.r = function (e) {
                        "undefined" != typeof Symbol &&
                          Symbol.toStringTag &&
                          Object.defineProperty(e, Symbol.toStringTag, {
                            value: "Module",
                          }),
                          Object.defineProperty(e, "__esModule", { value: !0 });
                      }),
                      (n.t = function (e, t) {
                        if ((1 & t && (e = n(e)), 8 & t)) return e;
                        if (4 & t && "object" == typeof e && e && e.__esModule)
                          return e;
                        var r = Object.create(null);
                        if (
                          (n.r(r),
                          Object.defineProperty(r, "default", {
                            enumerable: !0,
                            value: e,
                          }),
                          2 & t && "string" != typeof e)
                        )
                          for (var o in e)
                            n.d(
                              r,
                              o,
                              function (t) {
                                return e[t];
                              }.bind(null, o)
                            );
                        return r;
                      }),
                      (n.n = function (e) {
                        var t =
                          e && e.__esModule
                            ? function () {
                                return e.default;
                              }
                            : function () {
                                return e;
                              };
                        return n.d(t, "a", t), t;
                      }),
                      (n.o = function (e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                      }),
                      (n.p = ""),
                      n((n.s = "./src/strophe.js"))
                    );
                  })({
                    "./src/bosh.js": function (e, t, n) {
                      "use strict";
                      n.r(t);
                      var r = n("./src/core.js"),
                        o = r.default.Strophe,
                        i = r.default.$build;
                      (o.Request = function (e, t, n, r) {
                        (this.id = ++o._requestId),
                          (this.xmlData = e),
                          (this.data = o.serialize(e)),
                          (this.origFunc = t),
                          (this.func = t),
                          (this.rid = n),
                          (this.date = NaN),
                          (this.sends = r || 0),
                          (this.abort = !1),
                          (this.dead = null),
                          (this.age = function () {
                            return this.date
                              ? (new Date() - this.date) / 1e3
                              : 0;
                          }),
                          (this.timeDead = function () {
                            return this.dead
                              ? (new Date() - this.dead) / 1e3
                              : 0;
                          }),
                          (this.xhr = this._newXHR());
                      }),
                        (o.Request.prototype = {
                          getResponse: function () {
                            var e = null;
                            if (
                              this.xhr.responseXML &&
                              this.xhr.responseXML.documentElement
                            ) {
                              if (
                                "parsererror" ===
                                (e = this.xhr.responseXML.documentElement)
                                  .tagName
                              )
                                throw (
                                  (o.error("invalid response received"),
                                  o.error(
                                    "responseText: " + this.xhr.responseText
                                  ),
                                  o.error(
                                    "responseXML: " +
                                      o.serialize(this.xhr.responseXML)
                                  ),
                                  new Error("parsererror"))
                                );
                            } else if (this.xhr.responseText) {
                              if (
                                (o.debug(
                                  "Got responseText but no responseXML; attempting to parse it with DOMParser..."
                                ),
                                !(e = new DOMParser().parseFromString(
                                  this.xhr.responseText,
                                  "application/xml"
                                ).documentElement))
                              )
                                throw new Error("Parsing produced null node");
                              if (e.querySelector("parsererror")) {
                                o.error(
                                  "invalid response received: " +
                                    e.querySelector("parsererror").textContent
                                ),
                                  o.error(
                                    "responseText: " + this.xhr.responseText
                                  );
                                var t = new Error();
                                throw (
                                  ((t.name = o.ErrorCondition.BAD_FORMAT), t)
                                );
                              }
                            }
                            return e;
                          },
                          _newXHR: function () {
                            var e = null;
                            return (
                              window.XMLHttpRequest
                                ? (e = new XMLHttpRequest()).overrideMimeType &&
                                  e.overrideMimeType("text/xml; charset=utf-8")
                                : window.ActiveXObject &&
                                  (e = new ActiveXObject("Microsoft.XMLHTTP")),
                              (e.onreadystatechange = this.func.bind(
                                null,
                                this
                              )),
                              e
                            );
                          },
                        }),
                        (o.Bosh = function (e) {
                          (this._conn = e),
                            (this.rid = Math.floor(4294967295 * Math.random())),
                            (this.sid = null),
                            (this.hold = 1),
                            (this.wait = 60),
                            (this.window = 5),
                            (this.errors = 0),
                            (this.inactivity = null),
                            (this.lastResponseHeaders = null),
                            (this._requests = []);
                        }),
                        (o.Bosh.prototype = {
                          strip: null,
                          _buildBody: function () {
                            var e = i("body", {
                              rid: this.rid++,
                              xmlns: o.NS.HTTPBIND,
                            });
                            return (
                              null !== this.sid && e.attrs({ sid: this.sid }),
                              this._conn.options.keepalive &&
                                this._conn._sessionCachingSupported() &&
                                this._cacheSession(),
                              e
                            );
                          },
                          _reset: function () {
                            (this.rid = Math.floor(4294967295 * Math.random())),
                              (this.sid = null),
                              (this.errors = 0),
                              this._conn._sessionCachingSupported() &&
                                window.sessionStorage.removeItem(
                                  "strophe-bosh-session"
                                ),
                              this._conn.nextValidRid(this.rid);
                          },
                          _connect: function (e, t, n) {
                            (this.wait = e || this.wait),
                              (this.hold = t || this.hold),
                              (this.errors = 0);
                            var r = this._buildBody().attrs({
                              to: this._conn.domain,
                              "xml:lang": "en",
                              wait: this.wait,
                              hold: this.hold,
                              content: "text/xml; charset=utf-8",
                              ver: "1.6",
                              "xmpp:version": "1.0",
                              "xmlns:xmpp": o.NS.BOSH,
                            });
                            n && r.attrs({ route: n });
                            var i = this._conn._connect_cb;
                            this._requests.push(
                              new o.Request(
                                r.tree(),
                                this._onRequestStateChange.bind(
                                  this,
                                  i.bind(this._conn)
                                ),
                                r.tree().getAttribute("rid")
                              )
                            ),
                              this._throttledRequestHandler();
                          },
                          _attach: function (e, t, n, r, i, s, a) {
                            (this._conn.jid = e),
                              (this.sid = t),
                              (this.rid = n),
                              (this._conn.connect_callback = r),
                              (this._conn.domain = o.getDomainFromJid(
                                this._conn.jid
                              )),
                              (this._conn.authenticated = !0),
                              (this._conn.connected = !0),
                              (this.wait = i || this.wait),
                              (this.hold = s || this.hold),
                              (this.window = a || this.window),
                              this._conn._changeConnectStatus(
                                o.Status.ATTACHED,
                                null
                              );
                          },
                          _restore: function (e, t, n, r, i) {
                            var s = JSON.parse(
                              window.sessionStorage.getItem(
                                "strophe-bosh-session"
                              )
                            );
                            if (
                              !(
                                null != s &&
                                s.rid &&
                                s.sid &&
                                s.jid &&
                                (null == e ||
                                  o.getBareJidFromJid(s.jid) ===
                                    o.getBareJidFromJid(e) ||
                                  (null === o.getNodeFromJid(e) &&
                                    o.getDomainFromJid(s.jid) === e))
                              )
                            ) {
                              var a = new Error(
                                "_restore: no restoreable session."
                              );
                              throw ((a.name = "StropheSessionError"), a);
                            }
                            (this._conn.restored = !0),
                              this._attach(s.jid, s.sid, s.rid, t, n, r, i);
                          },
                          _cacheSession: function () {
                            this._conn.authenticated
                              ? this._conn.jid &&
                                this.rid &&
                                this.sid &&
                                window.sessionStorage.setItem(
                                  "strophe-bosh-session",
                                  JSON.stringify({
                                    jid: this._conn.jid,
                                    rid: this.rid,
                                    sid: this.sid,
                                  })
                                )
                              : window.sessionStorage.removeItem(
                                  "strophe-bosh-session"
                                );
                          },
                          _connect_cb: function (e) {
                            var t = e.getAttribute("type");
                            if (null !== t && "terminate" === t) {
                              var n = e.getAttribute("condition");
                              o.error("BOSH-Connection failed: " + n);
                              var r = e.getElementsByTagName("conflict");
                              return (
                                null !== n
                                  ? ("remote-stream-error" === n &&
                                      0 < r.length &&
                                      (n = "conflict"),
                                    this._conn._changeConnectStatus(
                                      o.Status.CONNFAIL,
                                      n
                                    ))
                                  : this._conn._changeConnectStatus(
                                      o.Status.CONNFAIL,
                                      "unknown"
                                    ),
                                this._conn._doDisconnect(n),
                                o.Status.CONNFAIL
                              );
                            }
                            this.sid || (this.sid = e.getAttribute("sid"));
                            var i = e.getAttribute("requests");
                            i && (this.window = parseInt(i, 10));
                            var s = e.getAttribute("hold");
                            s && (this.hold = parseInt(s, 10));
                            var a = e.getAttribute("wait");
                            a && (this.wait = parseInt(a, 10));
                            var c = e.getAttribute("inactivity");
                            c && (this.inactivity = parseInt(c, 10));
                          },
                          _disconnect: function (e) {
                            this._sendTerminate(e);
                          },
                          _doDisconnect: function () {
                            (this.sid = null),
                              (this.rid = Math.floor(
                                4294967295 * Math.random()
                              )),
                              this._conn._sessionCachingSupported() &&
                                window.sessionStorage.removeItem(
                                  "strophe-bosh-session"
                                ),
                              this._conn.nextValidRid(this.rid);
                          },
                          _emptyQueue: function () {
                            return 0 === this._requests.length;
                          },
                          _callProtocolErrorHandlers: function (e) {
                            var t = this._getRequestStatus(e),
                              n = this._conn.protocolErrorHandlers.HTTP[t];
                            n && n.call(this, t);
                          },
                          _hitError: function (e) {
                            this.errors++,
                              o.warn(
                                "request errored, status: " +
                                  e +
                                  ", number of errors: " +
                                  this.errors
                              ),
                              4 < this.errors &&
                                this._conn._onDisconnectTimeout();
                          },
                          _no_auth_received: function (e) {
                            o.warn(
                              "Server did not yet offer a supported authentication mechanism. Sending a blank poll request."
                            ),
                              (e = e
                                ? e.bind(this._conn)
                                : this._conn._connect_cb.bind(this._conn));
                            var t = this._buildBody();
                            this._requests.push(
                              new o.Request(
                                t.tree(),
                                this._onRequestStateChange.bind(this, e),
                                t.tree().getAttribute("rid")
                              )
                            ),
                              this._throttledRequestHandler();
                          },
                          _onDisconnectTimeout: function () {
                            this._abortAllRequests();
                          },
                          _abortAllRequests: function () {
                            for (; 0 < this._requests.length; ) {
                              var e = this._requests.pop();
                              (e.abort = !0),
                                e.xhr.abort(),
                                (e.xhr.onreadystatechange = function () {});
                            }
                          },
                          _onIdle: function () {
                            var e = this._conn._data;
                            if (
                              (this._conn.authenticated &&
                                0 === this._requests.length &&
                                0 === e.length &&
                                !this._conn.disconnecting &&
                                (o.info(
                                  "no requests during idle cycle, sending blank request"
                                ),
                                e.push(null)),
                              !this._conn.paused)
                            ) {
                              if (this._requests.length < 2 && 0 < e.length) {
                                for (
                                  var t = this._buildBody(), n = 0;
                                  n < e.length;
                                  n++
                                )
                                  null !== e[n] &&
                                    ("restart" === e[n]
                                      ? t.attrs({
                                          to: this._conn.domain,
                                          "xml:lang": "en",
                                          "xmpp:restart": "true",
                                          "xmlns:xmpp": o.NS.BOSH,
                                        })
                                      : t.cnode(e[n]).up());
                                delete this._conn._data,
                                  (this._conn._data = []),
                                  this._requests.push(
                                    new o.Request(
                                      t.tree(),
                                      this._onRequestStateChange.bind(
                                        this,
                                        this._conn._dataRecv.bind(this._conn)
                                      ),
                                      t.tree().getAttribute("rid")
                                    )
                                  ),
                                  this._throttledRequestHandler();
                              }
                              if (0 < this._requests.length) {
                                var r = this._requests[0].age();
                                null !== this._requests[0].dead &&
                                  this._requests[0].timeDead() >
                                    Math.floor(
                                      o.SECONDARY_TIMEOUT * this.wait
                                    ) &&
                                  this._throttledRequestHandler(),
                                  r > Math.floor(o.TIMEOUT * this.wait) &&
                                    (o.warn(
                                      "Request " +
                                        this._requests[0].id +
                                        " timed out, over " +
                                        Math.floor(o.TIMEOUT * this.wait) +
                                        " seconds since last activity"
                                    ),
                                    this._throttledRequestHandler());
                              }
                            }
                          },
                          _getRequestStatus: function (e, t) {
                            var n;
                            if (4 === e.xhr.readyState)
                              try {
                                n = e.xhr.status;
                              } catch (e) {
                                o.error(
                                  "Caught an error while retrieving a request's status, reqStatus: " +
                                    n
                                );
                              }
                            return (
                              void 0 === n &&
                                (n = "number" == typeof t ? t : 0),
                              n
                            );
                          },
                          _onRequestStateChange: function (e, t) {
                            if (
                              (o.debug(
                                "request id " +
                                  t.id +
                                  "." +
                                  t.sends +
                                  " state changed to " +
                                  t.xhr.readyState
                              ),
                              t.abort)
                            )
                              t.abort = !1;
                            else if (4 === t.xhr.readyState) {
                              var n = this._getRequestStatus(t);
                              if (
                                ((this.lastResponseHeaders =
                                  t.xhr.getAllResponseHeaders()),
                                this.disconnecting && 400 <= n)
                              )
                                return (
                                  this._hitError(n),
                                  void this._callProtocolErrorHandlers(t)
                                );
                              var r = 0 < n && n < 500,
                                i = t.sends > this._conn.maxRetries;
                              if (
                                ((r || i) &&
                                  (this._removeRequest(t),
                                  o.debug(
                                    "request id " +
                                      t.id +
                                      " should now be removed"
                                  )),
                                200 === n)
                              ) {
                                var s = this._requests[0] === t;
                                (this._requests[1] === t ||
                                  (s &&
                                    0 < this._requests.length &&
                                    this._requests[0].age() >
                                      Math.floor(
                                        o.SECONDARY_TIMEOUT * this.wait
                                      ))) &&
                                  this._restartRequest(0),
                                  this._conn.nextValidRid(Number(t.rid) + 1),
                                  o.debug(
                                    "request id " +
                                      t.id +
                                      "." +
                                      t.sends +
                                      " got 200"
                                  ),
                                  e(t),
                                  (this.errors = 0);
                              } else
                                0 === n || (400 <= n && n < 600) || 12e3 <= n
                                  ? (o.error(
                                      "request id " +
                                        t.id +
                                        "." +
                                        t.sends +
                                        " error " +
                                        n +
                                        " happened"
                                    ),
                                    this._hitError(n),
                                    this._callProtocolErrorHandlers(t),
                                    400 <= n &&
                                      n < 500 &&
                                      (this._conn._changeConnectStatus(
                                        o.Status.DISCONNECTING,
                                        null
                                      ),
                                      this._conn._doDisconnect()))
                                  : o.error(
                                      "request id " +
                                        t.id +
                                        "." +
                                        t.sends +
                                        " error " +
                                        n +
                                        " happened"
                                    );
                              r || i
                                ? i &&
                                  !this._conn.connected &&
                                  this._conn._changeConnectStatus(
                                    o.Status.CONNFAIL,
                                    "giving-up"
                                  )
                                : this._throttledRequestHandler();
                            }
                          },
                          _processRequest: function (e) {
                            var t = this,
                              n = this._requests[e],
                              r = this._getRequestStatus(n, -1);
                            if (n.sends > this._conn.maxRetries)
                              this._conn._onDisconnectTimeout();
                            else {
                              var i = n.age(),
                                s =
                                  !isNaN(i) &&
                                  i > Math.floor(o.TIMEOUT * this.wait),
                                a =
                                  null !== n.dead &&
                                  n.timeDead() >
                                    Math.floor(o.SECONDARY_TIMEOUT * this.wait),
                                c =
                                  4 === n.xhr.readyState && (r < 1 || 500 <= r);
                              if (
                                ((s || a || c) &&
                                  (a &&
                                    o.error(
                                      "Request ".concat(
                                        this._requests[e].id,
                                        " timed out (secondary), restarting"
                                      )
                                    ),
                                  (n.abort = !0),
                                  n.xhr.abort(),
                                  (n.xhr.onreadystatechange = function () {}),
                                  (this._requests[e] = new o.Request(
                                    n.xmlData,
                                    n.origFunc,
                                    n.rid,
                                    n.sends
                                  )),
                                  (n = this._requests[e])),
                                0 === n.xhr.readyState)
                              ) {
                                o.debug(
                                  "request id " +
                                    n.id +
                                    "." +
                                    n.sends +
                                    " posting"
                                );
                                try {
                                  var u =
                                    this._conn.options.contentType ||
                                    "text/xml; charset=utf-8";
                                  n.xhr.open(
                                    "POST",
                                    this._conn.service,
                                    !this._conn.options.sync
                                  ),
                                    void 0 !== n.xhr.setRequestHeader &&
                                      n.xhr.setRequestHeader("Content-Type", u),
                                    this._conn.options.withCredentials &&
                                      (n.xhr.withCredentials = !0);
                                } catch (e) {
                                  return (
                                    o.error("XHR open failed: " + e.toString()),
                                    this._conn.connected ||
                                      this._conn._changeConnectStatus(
                                        o.Status.CONNFAIL,
                                        "bad-service"
                                      ),
                                    void this._conn.disconnect()
                                  );
                                }
                                var l = function () {
                                  if (
                                    ((n.date = new Date()),
                                    t._conn.options.customHeaders)
                                  ) {
                                    var e = t._conn.options.customHeaders;
                                    for (var r in e)
                                      Object.prototype.hasOwnProperty.call(
                                        e,
                                        r
                                      ) && n.xhr.setRequestHeader(r, e[r]);
                                  }
                                  n.xhr.send(n.data);
                                };
                                if (1 < n.sends) {
                                  var d =
                                    1e3 *
                                    Math.min(
                                      Math.floor(o.TIMEOUT * this.wait),
                                      Math.pow(n.sends, 3)
                                    );
                                  setTimeout(function () {
                                    l();
                                  }, d);
                                } else l();
                                n.sends++,
                                  this._conn.xmlOutput !==
                                    o.Connection.prototype.xmlOutput &&
                                    (n.xmlData.nodeName === this.strip &&
                                    n.xmlData.childNodes.length
                                      ? this._conn.xmlOutput(
                                          n.xmlData.childNodes[0]
                                        )
                                      : this._conn.xmlOutput(n.xmlData)),
                                  this._conn.rawOutput !==
                                    o.Connection.prototype.rawOutput &&
                                    this._conn.rawOutput(n.data);
                              } else
                                o.debug(
                                  "_processRequest: " +
                                    (0 === e ? "first" : "second") +
                                    " request has readyState of " +
                                    n.xhr.readyState
                                );
                            }
                          },
                          _removeRequest: function (e) {
                            o.debug("removing request");
                            for (var t = this._requests.length - 1; 0 <= t; t--)
                              e === this._requests[t] &&
                                this._requests.splice(t, 1);
                            (e.xhr.onreadystatechange = function () {}),
                              this._throttledRequestHandler();
                          },
                          _restartRequest: function (e) {
                            var t = this._requests[e];
                            null === t.dead && (t.dead = new Date()),
                              this._processRequest(e);
                          },
                          _reqToData: function (e) {
                            try {
                              return e.getResponse();
                            } catch (e) {
                              if ("parsererror" !== e.message) throw e;
                              this._conn.disconnect("strophe-parsererror");
                            }
                          },
                          _sendTerminate: function (e) {
                            o.info("_sendTerminate was called");
                            var t = this._buildBody().attrs({
                              type: "terminate",
                            });
                            e && t.cnode(e.tree());
                            var n = new o.Request(
                              t.tree(),
                              this._onRequestStateChange.bind(
                                this,
                                this._conn._dataRecv.bind(this._conn)
                              ),
                              t.tree().getAttribute("rid")
                            );
                            this._requests.push(n),
                              this._throttledRequestHandler();
                          },
                          _send: function () {
                            var e = this;
                            clearTimeout(this._conn._idleTimeout),
                              this._throttledRequestHandler(),
                              (this._conn._idleTimeout = setTimeout(
                                function () {
                                  return e._conn._onIdle();
                                },
                                100
                              ));
                          },
                          _sendRestart: function () {
                            this._throttledRequestHandler(),
                              clearTimeout(this._conn._idleTimeout);
                          },
                          _throttledRequestHandler: function () {
                            this._requests
                              ? o.debug(
                                  "_throttledRequestHandler called with " +
                                    this._requests.length +
                                    " requests"
                                )
                              : o.debug(
                                  "_throttledRequestHandler called with undefined requests"
                                ),
                              this._requests &&
                                0 !== this._requests.length &&
                                (0 < this._requests.length &&
                                  this._processRequest(0),
                                1 < this._requests.length &&
                                  Math.abs(
                                    this._requests[0].rid -
                                      this._requests[1].rid
                                  ) < this.window &&
                                  this._processRequest(1));
                          },
                        });
                    },
                    "./src/core.js": function (e, t, n) {
                      "use strict";
                      n.r(t);
                      var r = n("./src/md5.js"),
                        o = n("./src/sha1.js"),
                        i = n("./src/utils.js");
                      function s(e) {
                        return (s =
                          "function" == typeof Symbol &&
                          "symbol" == typeof Symbol.iterator
                            ? function (e) {
                                return typeof e;
                              }
                            : function (e) {
                                return e &&
                                  "function" == typeof Symbol &&
                                  e.constructor === Symbol &&
                                  e !== Symbol.prototype
                                  ? "symbol"
                                  : typeof e;
                              })(e);
                      }
                      function a(e, t) {
                        return new l.Builder(e, t);
                      }
                      function c(e) {
                        return new l.Builder("iq", e);
                      }
                      function u(e) {
                        return new l.Builder("presence", e);
                      }
                      var l = {
                        VERSION: "1.3.0",
                        NS: {
                          HTTPBIND: "http://jabber.org/protocol/httpbind",
                          BOSH: "urn:xmpp:xbosh",
                          CLIENT: "jabber:client",
                          AUTH: "jabber:iq:auth",
                          ROSTER: "jabber:iq:roster",
                          PROFILE: "jabber:iq:profile",
                          DISCO_INFO: "http://jabber.org/protocol/disco#info",
                          DISCO_ITEMS: "http://jabber.org/protocol/disco#items",
                          MUC: "http://jabber.org/protocol/muc",
                          SASL: "urn:ietf:params:xml:ns:xmpp-sasl",
                          STREAM: "http://etherx.jabber.org/streams",
                          FRAMING: "urn:ietf:params:xml:ns:xmpp-framing",
                          BIND: "urn:ietf:params:xml:ns:xmpp-bind",
                          SESSION: "urn:ietf:params:xml:ns:xmpp-session",
                          VERSION: "jabber:iq:version",
                          STANZAS: "urn:ietf:params:xml:ns:xmpp-stanzas",
                          XHTML_IM: "http://jabber.org/protocol/xhtml-im",
                          XHTML: "http://www.w3.org/1999/xhtml",
                        },
                        XHTML: {
                          tags: [
                            "a",
                            "blockquote",
                            "br",
                            "cite",
                            "em",
                            "img",
                            "li",
                            "ol",
                            "p",
                            "span",
                            "strong",
                            "ul",
                            "body",
                          ],
                          attributes: {
                            a: ["href"],
                            blockquote: ["style"],
                            br: [],
                            cite: ["style"],
                            em: [],
                            img: ["src", "alt", "style", "height", "width"],
                            li: ["style"],
                            ol: ["style"],
                            p: ["style"],
                            span: ["style"],
                            strong: [],
                            ul: ["style"],
                            body: [],
                          },
                          css: [
                            "background-color",
                            "color",
                            "font-family",
                            "font-size",
                            "font-style",
                            "font-weight",
                            "margin-left",
                            "margin-right",
                            "text-align",
                            "text-decoration",
                          ],
                          validTag: function (e) {
                            for (var t = 0; t < l.XHTML.tags.length; t++)
                              if (e === l.XHTML.tags[t]) return !0;
                            return !1;
                          },
                          validAttribute: function (e, t) {
                            if (
                              void 0 !== l.XHTML.attributes[e] &&
                              0 < l.XHTML.attributes[e].length
                            )
                              for (
                                var n = 0;
                                n < l.XHTML.attributes[e].length;
                                n++
                              )
                                if (t === l.XHTML.attributes[e][n]) return !0;
                            return !1;
                          },
                          validCSS: function (e) {
                            for (var t = 0; t < l.XHTML.css.length; t++)
                              if (e === l.XHTML.css[t]) return !0;
                            return !1;
                          },
                        },
                        Status: {
                          ERROR: 0,
                          CONNECTING: 1,
                          CONNFAIL: 2,
                          AUTHENTICATING: 3,
                          AUTHFAIL: 4,
                          CONNECTED: 5,
                          DISCONNECTED: 6,
                          DISCONNECTING: 7,
                          ATTACHED: 8,
                          REDIRECT: 9,
                          CONNTIMEOUT: 10,
                        },
                        ErrorCondition: {
                          BAD_FORMAT: "bad-format",
                          CONFLICT: "conflict",
                          MISSING_JID_NODE: "x-strophe-bad-non-anon-jid",
                          NO_AUTH_MECH: "no-auth-mech",
                          UNKNOWN_REASON: "unknown",
                        },
                        LogLevel: {
                          DEBUG: 0,
                          INFO: 1,
                          WARN: 2,
                          ERROR: 3,
                          FATAL: 4,
                        },
                        ElementType: {
                          NORMAL: 1,
                          TEXT: 3,
                          CDATA: 4,
                          FRAGMENT: 11,
                        },
                        TIMEOUT: 1.1,
                        SECONDARY_TIMEOUT: 0.1,
                        addNamespace: function (e, t) {
                          l.NS[e] = t;
                        },
                        forEachChild: function (e, t, n) {
                          for (var r = 0; r < e.childNodes.length; r++) {
                            var o = e.childNodes[r];
                            o.nodeType !== l.ElementType.NORMAL ||
                              (t && !this.isTagEqual(o, t)) ||
                              n(o);
                          }
                        },
                        isTagEqual: function (e, t) {
                          return e.tagName === t;
                        },
                        _xmlGenerator: null,
                        _makeGenerator: function () {
                          var e;
                          return (
                            void 0 === document.implementation.createDocument ||
                            (document.implementation.createDocument &&
                              document.documentMode &&
                              document.documentMode < 10)
                              ? (e = this._getIEXmlDom()).appendChild(
                                  e.createElement("strophe")
                                )
                              : (e = document.implementation.createDocument(
                                  "jabber:client",
                                  "strophe",
                                  null
                                )),
                            e
                          );
                        },
                        xmlGenerator: function () {
                          return (
                            l._xmlGenerator ||
                              (l._xmlGenerator = l._makeGenerator()),
                            l._xmlGenerator
                          );
                        },
                        _getIEXmlDom: function () {
                          for (
                            var e = null,
                              t = [
                                "Msxml2.DOMDocument.6.0",
                                "Msxml2.DOMDocument.5.0",
                                "Msxml2.DOMDocument.4.0",
                                "MSXML2.DOMDocument.3.0",
                                "MSXML2.DOMDocument",
                                "MSXML.DOMDocument",
                                "Microsoft.XMLDOM",
                              ],
                              n = 0;
                            n < t.length && null === e;
                            n++
                          )
                            try {
                              e = new ActiveXObject(t[n]);
                            } catch (t) {
                              e = null;
                            }
                          return e;
                        },
                        xmlElement: function (e) {
                          if (!e) return null;
                          for (
                            var t = l.xmlGenerator().createElement(e), n = 1;
                            n < arguments.length;
                            n++
                          ) {
                            var r = arguments[n];
                            if (r)
                              if ("string" == typeof r || "number" == typeof r)
                                t.appendChild(l.xmlTextNode(r));
                              else if (
                                "object" === s(r) &&
                                "function" == typeof r.sort
                              )
                                for (var o = 0; o < r.length; o++) {
                                  var i = r[o];
                                  "object" === s(i) &&
                                    "function" == typeof i.sort &&
                                    void 0 !== i[1] &&
                                    null !== i[1] &&
                                    t.setAttribute(i[0], i[1]);
                                }
                              else if ("object" === s(r))
                                for (var a in r)
                                  Object.prototype.hasOwnProperty.call(r, a) &&
                                    void 0 !== r[a] &&
                                    null !== r[a] &&
                                    t.setAttribute(a, r[a]);
                          }
                          return t;
                        },
                        xmlescape: function (e) {
                          return (e = (e = (e = (e = e.replace(
                            /\&/g,
                            "&amp;"
                          )).replace(/</g, "&lt;")).replace(
                            />/g,
                            "&gt;"
                          )).replace(/'/g, "&apos;")).replace(/"/g, "&quot;");
                        },
                        xmlunescape: function (e) {
                          return (e = (e = (e = (e = e.replace(
                            /\&amp;/g,
                            "&"
                          )).replace(/&lt;/g, "<")).replace(
                            /&gt;/g,
                            ">"
                          )).replace(/&apos;/g, "'")).replace(/&quot;/g, '"');
                        },
                        xmlTextNode: function (e) {
                          return l.xmlGenerator().createTextNode(e);
                        },
                        xmlHtmlNode: function (e) {
                          var t;
                          return (
                            DOMParser
                              ? (t = new DOMParser().parseFromString(
                                  e,
                                  "text/xml"
                                ))
                              : (((t = new ActiveXObject(
                                  "Microsoft.XMLDOM"
                                )).async = "false"),
                                t.loadXML(e)),
                            t
                          );
                        },
                        getText: function (e) {
                          if (!e) return null;
                          var t = "";
                          0 === e.childNodes.length &&
                            e.nodeType === l.ElementType.TEXT &&
                            (t += e.nodeValue);
                          for (var n = 0; n < e.childNodes.length; n++)
                            e.childNodes[n].nodeType === l.ElementType.TEXT &&
                              (t += e.childNodes[n].nodeValue);
                          return l.xmlescape(t);
                        },
                        copyElement: function (e) {
                          var t;
                          if (e.nodeType === l.ElementType.NORMAL) {
                            t = l.xmlElement(e.tagName);
                            for (var n = 0; n < e.attributes.length; n++)
                              t.setAttribute(
                                e.attributes[n].nodeName,
                                e.attributes[n].value
                              );
                            for (var r = 0; r < e.childNodes.length; r++)
                              t.appendChild(l.copyElement(e.childNodes[r]));
                          } else
                            e.nodeType === l.ElementType.TEXT &&
                              (t = l
                                .xmlGenerator()
                                .createTextNode(e.nodeValue));
                          return t;
                        },
                        createHtml: function (e) {
                          var t;
                          if (e.nodeType === l.ElementType.NORMAL) {
                            var n = e.nodeName.toLowerCase();
                            if (l.XHTML.validTag(n))
                              try {
                                t = l.xmlElement(n);
                                for (
                                  var r = 0;
                                  r < l.XHTML.attributes[n].length;
                                  r++
                                ) {
                                  var o = l.XHTML.attributes[n][r],
                                    i = e.getAttribute(o);
                                  if (
                                    null != i &&
                                    "" !== i &&
                                    !1 !== i &&
                                    0 !== i
                                  )
                                    if (
                                      ("style" === o &&
                                        "object" === s(i) &&
                                        void 0 !== i.cssText &&
                                        (i = i.cssText),
                                      "style" === o)
                                    ) {
                                      for (
                                        var a = [], c = i.split(";"), u = 0;
                                        u < c.length;
                                        u++
                                      ) {
                                        var d = c[u].split(":"),
                                          p = d[0]
                                            .replace(/^\s*/, "")
                                            .replace(/\s*$/, "")
                                            .toLowerCase();
                                        if (l.XHTML.validCSS(p)) {
                                          var f = d[1]
                                            .replace(/^\s*/, "")
                                            .replace(/\s*$/, "");
                                          a.push(p + ": " + f);
                                        }
                                      }
                                      0 < a.length &&
                                        ((i = a.join("; ")),
                                        t.setAttribute(o, i));
                                    } else t.setAttribute(o, i);
                                }
                                for (var h = 0; h < e.childNodes.length; h++)
                                  t.appendChild(l.createHtml(e.childNodes[h]));
                              } catch (e) {
                                t = l.xmlTextNode("");
                              }
                            else {
                              t = l.xmlGenerator().createDocumentFragment();
                              for (var E = 0; E < e.childNodes.length; E++)
                                t.appendChild(l.createHtml(e.childNodes[E]));
                            }
                          } else if (e.nodeType === l.ElementType.FRAGMENT) {
                            t = l.xmlGenerator().createDocumentFragment();
                            for (var g = 0; g < e.childNodes.length; g++)
                              t.appendChild(l.createHtml(e.childNodes[g]));
                          } else
                            e.nodeType === l.ElementType.TEXT &&
                              (t = l.xmlTextNode(e.nodeValue));
                          return t;
                        },
                        escapeNode: function (e) {
                          return "string" != typeof e
                            ? e
                            : e
                                .replace(/^\s+|\s+$/g, "")
                                .replace(/\\/g, "\\5c")
                                .replace(/ /g, "\\20")
                                .replace(/\"/g, "\\22")
                                .replace(/\&/g, "\\26")
                                .replace(/\'/g, "\\27")
                                .replace(/\//g, "\\2f")
                                .replace(/:/g, "\\3a")
                                .replace(/</g, "\\3c")
                                .replace(/>/g, "\\3e")
                                .replace(/@/g, "\\40");
                        },
                        unescapeNode: function (e) {
                          return "string" != typeof e
                            ? e
                            : e
                                .replace(/\\20/g, " ")
                                .replace(/\\22/g, '"')
                                .replace(/\\26/g, "&")
                                .replace(/\\27/g, "'")
                                .replace(/\\2f/g, "/")
                                .replace(/\\3a/g, ":")
                                .replace(/\\3c/g, "<")
                                .replace(/\\3e/g, ">")
                                .replace(/\\40/g, "@")
                                .replace(/\\5c/g, "\\");
                        },
                        getNodeFromJid: function (e) {
                          return e.indexOf("@") < 0 ? null : e.split("@")[0];
                        },
                        getDomainFromJid: function (e) {
                          var t = l.getBareJidFromJid(e);
                          if (t.indexOf("@") < 0) return t;
                          var n = t.split("@");
                          return n.splice(0, 1), n.join("@");
                        },
                        getResourceFromJid: function (e) {
                          var t = e.split("/");
                          return t.length < 2
                            ? null
                            : (t.splice(0, 1), t.join("/"));
                        },
                        getBareJidFromJid: function (e) {
                          return e ? e.split("/")[0] : null;
                        },
                        _handleError: function (e) {
                          void 0 !== e.stack && l.fatal(e.stack),
                            e.sourceURL
                              ? l.fatal(
                                  "error: " +
                                    this.handler +
                                    " " +
                                    e.sourceURL +
                                    ":" +
                                    e.line +
                                    " - " +
                                    e.name +
                                    ": " +
                                    e.message
                                )
                              : e.fileName
                              ? l.fatal(
                                  "error: " +
                                    this.handler +
                                    " " +
                                    e.fileName +
                                    ":" +
                                    e.lineNumber +
                                    " - " +
                                    e.name +
                                    ": " +
                                    e.message
                                )
                              : l.fatal("error: " + e.message);
                        },
                        log: function (e, t) {
                          e === this.LogLevel.FATAL &&
                            "object" === s(window.console) &&
                            "function" == typeof window.console.error &&
                            window.console.error(t);
                        },
                        debug: function (e) {
                          this.log(this.LogLevel.DEBUG, e);
                        },
                        info: function (e) {
                          this.log(this.LogLevel.INFO, e);
                        },
                        warn: function (e) {
                          this.log(this.LogLevel.WARN, e);
                        },
                        error: function (e) {
                          this.log(this.LogLevel.ERROR, e);
                        },
                        fatal: function (e) {
                          this.log(this.LogLevel.FATAL, e);
                        },
                        serialize: function (e) {
                          if (!e) return null;
                          "function" == typeof e.tree && (e = e.tree());
                          var t = (function (e) {
                            return (
                              (function (e) {
                                if (Array.isArray(e)) {
                                  for (
                                    var t = 0, n = new Array(e.length);
                                    t < e.length;
                                    t++
                                  )
                                    n[t] = e[t];
                                  return n;
                                }
                              })(e) ||
                              (function (e) {
                                if (
                                  Symbol.iterator in Object(e) ||
                                  "[object Arguments]" ===
                                    Object.prototype.toString.call(e)
                                )
                                  return Array.from(e);
                              })(e) ||
                              (function () {
                                throw new TypeError(
                                  "Invalid attempt to spread non-iterable instance"
                                );
                              })()
                            );
                          })(Array(e.attributes.length).keys()).map(function (
                            t
                          ) {
                            return e.attributes[t].nodeName;
                          });
                          t.sort();
                          var n = t.reduce(function (t, n) {
                            return ""
                              .concat(t, " ")
                              .concat(n, '="')
                              .concat(
                                l.xmlescape(e.attributes.getNamedItem(n).value),
                                '"'
                              );
                          }, "<".concat(e.nodeName));
                          if (0 < e.childNodes.length) {
                            n += ">";
                            for (var r = 0; r < e.childNodes.length; r++) {
                              var o = e.childNodes[r];
                              switch (o.nodeType) {
                                case l.ElementType.NORMAL:
                                  n += l.serialize(o);
                                  break;
                                case l.ElementType.TEXT:
                                  n += l.xmlescape(o.nodeValue);
                                  break;
                                case l.ElementType.CDATA:
                                  n += "<![CDATA[" + o.nodeValue + "]]>";
                              }
                            }
                            n += "</" + e.nodeName + ">";
                          } else n += "/>";
                          return n;
                        },
                        _requestId: 0,
                        _connectionPlugins: {},
                        addConnectionPlugin: function (e, t) {
                          l._connectionPlugins[e] = t;
                        },
                        Builder: function (e, t) {
                          ("presence" !== e && "message" !== e && "iq" !== e) ||
                            (t && !t.xmlns
                              ? (t.xmlns = l.NS.CLIENT)
                              : t || (t = { xmlns: l.NS.CLIENT })),
                            (this.nodeTree = l.xmlElement(e, t)),
                            (this.node = this.nodeTree);
                        },
                      };
                      (l.Builder.prototype = {
                        tree: function () {
                          return this.nodeTree;
                        },
                        toString: function () {
                          return l.serialize(this.nodeTree);
                        },
                        up: function () {
                          return (this.node = this.node.parentNode), this;
                        },
                        root: function () {
                          return (this.node = this.nodeTree), this;
                        },
                        attrs: function (e) {
                          for (var t in e)
                            Object.prototype.hasOwnProperty.call(e, t) &&
                              (void 0 === e[t]
                                ? this.node.removeAttribute(t)
                                : this.node.setAttribute(t, e[t]));
                          return this;
                        },
                        c: function (e, t, n) {
                          var r = l.xmlElement(e, t, n);
                          return (
                            this.node.appendChild(r),
                            "string" != typeof n &&
                              "number" != typeof n &&
                              (this.node = r),
                            this
                          );
                        },
                        cnode: function (e) {
                          var t,
                            n = l.xmlGenerator();
                          try {
                            t = void 0 !== n.importNode;
                          } catch (e) {
                            t = !1;
                          }
                          var r = t ? n.importNode(e, !0) : l.copyElement(e);
                          return (
                            this.node.appendChild(r), (this.node = r), this
                          );
                        },
                        t: function (e) {
                          var t = l.xmlTextNode(e);
                          return this.node.appendChild(t), this;
                        },
                        h: function (e) {
                          var t = document.createElement("body");
                          t.innerHTML = e;
                          for (
                            var n = l.createHtml(t);
                            0 < n.childNodes.length;

                          )
                            this.node.appendChild(n.childNodes[0]);
                          return this;
                        },
                      }),
                        (l.Handler = function (e, t, n, r, o, i, s) {
                          (this.handler = e),
                            (this.ns = t),
                            (this.name = n),
                            (this.type = r),
                            (this.id = o),
                            (this.options = s || {
                              matchBareFromJid: !1,
                              ignoreNamespaceFragment: !1,
                            }),
                            this.options.matchBare &&
                              (l.warn(
                                'The "matchBare" option is deprecated, use "matchBareFromJid" instead.'
                              ),
                              (this.options.matchBareFromJid =
                                this.options.matchBare),
                              delete this.options.matchBare),
                            this.options.matchBareFromJid
                              ? (this.from = i ? l.getBareJidFromJid(i) : null)
                              : (this.from = i),
                            (this.user = !0);
                        }),
                        (l.Handler.prototype = {
                          getNamespace: function (e) {
                            var t = e.getAttribute("xmlns");
                            return (
                              t &&
                                this.options.ignoreNamespaceFragment &&
                                (t = t.split("#")[0]),
                              t
                            );
                          },
                          namespaceMatch: function (e) {
                            var t = this,
                              n = !1;
                            return (
                              !this.ns ||
                              (l.forEachChild(e, null, function (e) {
                                t.getNamespace(e) === t.ns && (n = !0);
                              }),
                              n || this.getNamespace(e) === this.ns)
                            );
                          },
                          isMatch: function (e) {
                            var t = e.getAttribute("from");
                            this.options.matchBareFromJid &&
                              (t = l.getBareJidFromJid(t));
                            var n = e.getAttribute("type");
                            return !(
                              !this.namespaceMatch(e) ||
                              (this.name && !l.isTagEqual(e, this.name)) ||
                              (this.type &&
                                (Array.isArray(this.type)
                                  ? -1 === this.type.indexOf(n)
                                  : n !== this.type)) ||
                              (this.id && e.getAttribute("id") !== this.id) ||
                              (this.from && t !== this.from)
                            );
                          },
                          run: function (e) {
                            var t = null;
                            try {
                              t = this.handler(e);
                            } catch (e) {
                              throw (l._handleError(e), e);
                            }
                            return t;
                          },
                          toString: function () {
                            return (
                              "{Handler: " +
                              this.handler +
                              "(" +
                              this.name +
                              "," +
                              this.id +
                              "," +
                              this.ns +
                              ")}"
                            );
                          },
                        }),
                        (l.TimedHandler = function (e, t) {
                          (this.period = e),
                            (this.handler = t),
                            (this.lastCalled = new Date().getTime()),
                            (this.user = !0);
                        }),
                        (l.TimedHandler.prototype = {
                          run: function () {
                            return (
                              (this.lastCalled = new Date().getTime()),
                              this.handler()
                            );
                          },
                          reset: function () {
                            this.lastCalled = new Date().getTime();
                          },
                          toString: function () {
                            return (
                              "{TimedHandler: " +
                              this.handler +
                              "(" +
                              this.period +
                              ")}"
                            );
                          },
                        }),
                        (l.Connection = function (e, t) {
                          var n = this;
                          (this.service = e), (this.options = t || {});
                          var r = this.options.protocol || "";
                          for (var o in (0 === e.indexOf("ws:") ||
                          0 === e.indexOf("wss:") ||
                          0 === r.indexOf("ws")
                            ? (this._proto = new l.Websocket(this))
                            : (this._proto = new l.Bosh(this)),
                          (this.jid = ""),
                          (this.domain = null),
                          (this.features = null),
                          (this._sasl_data = {}),
                          (this.do_session = !1),
                          (this.do_bind = !1),
                          (this.timedHandlers = []),
                          (this.handlers = []),
                          (this.removeTimeds = []),
                          (this.removeHandlers = []),
                          (this.addTimeds = []),
                          (this.addHandlers = []),
                          (this.protocolErrorHandlers = {
                            HTTP: {},
                            websocket: {},
                          }),
                          (this._idleTimeout = null),
                          (this._disconnectTimeout = null),
                          (this.authenticated = !1),
                          (this.connected = !1),
                          (this.disconnecting = !1),
                          (this.do_authentication = !0),
                          (this.paused = !1),
                          (this.restored = !1),
                          (this._data = []),
                          (this._uniqueId = 0),
                          (this._sasl_success_handler = null),
                          (this._sasl_failure_handler = null),
                          (this._sasl_challenge_handler = null),
                          (this.maxRetries = 5),
                          (this._idleTimeout = setTimeout(function () {
                            return n._onIdle();
                          }, 100)),
                          i.default.addCookies(this.options.cookies),
                          this.registerSASLMechanisms(this.options.mechanisms),
                          l._connectionPlugins))
                            if (
                              Object.prototype.hasOwnProperty.call(
                                l._connectionPlugins,
                                o
                              )
                            ) {
                              var s = function () {};
                              (s.prototype = l._connectionPlugins[o]),
                                (this[o] = new s()),
                                this[o].init(this);
                            }
                        }),
                        (l.Connection.prototype = {
                          reset: function () {
                            this._proto._reset(),
                              (this.do_session = !1),
                              (this.do_bind = !1),
                              (this.timedHandlers = []),
                              (this.handlers = []),
                              (this.removeTimeds = []),
                              (this.removeHandlers = []),
                              (this.addTimeds = []),
                              (this.addHandlers = []),
                              (this.authenticated = !1),
                              (this.connected = !1),
                              (this.disconnecting = !1),
                              (this.restored = !1),
                              (this._data = []),
                              (this._requests = []),
                              (this._uniqueId = 0);
                          },
                          pause: function () {
                            this.paused = !0;
                          },
                          resume: function () {
                            this.paused = !1;
                          },
                          getUniqueId: function (e) {
                            var t =
                              "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
                                /[xy]/g,
                                function (e) {
                                  var t = (16 * Math.random()) | 0;
                                  return ("x" === e ? t : (3 & t) | 8).toString(
                                    16
                                  );
                                }
                              );
                            return "string" == typeof e || "number" == typeof e
                              ? t + ":" + e
                              : t + "";
                          },
                          addProtocolErrorHandler: function (e, t, n) {
                            this.protocolErrorHandlers[e][t] = n;
                          },
                          connect: function (e, t, n, r, o, i, s) {
                            (this.jid = e),
                              (this.authzid = l.getBareJidFromJid(this.jid)),
                              (this.authcid = s || l.getNodeFromJid(this.jid)),
                              (this.pass = t),
                              (this.servtype = "xmpp"),
                              (this.connect_callback = n),
                              (this.disconnecting = !1),
                              (this.connected = !1),
                              (this.authenticated = !1),
                              (this.restored = !1),
                              (this.domain = l.getDomainFromJid(this.jid)),
                              this._changeConnectStatus(
                                l.Status.CONNECTING,
                                null
                              ),
                              this._proto._connect(r, o, i);
                          },
                          attach: function (e, t, n, r, o, i, s) {
                            if (!(this._proto instanceof l.Bosh)) {
                              var a = new Error(
                                'The "attach" method can only be used with a BOSH connection.'
                              );
                              throw ((a.name = "StropheSessionError"), a);
                            }
                            this._proto._attach(e, t, n, r, o, i, s);
                          },
                          restore: function (e, t, n, r, o) {
                            if (!this._sessionCachingSupported()) {
                              var i = new Error(
                                'The "restore" method can only be used with a BOSH connection.'
                              );
                              throw ((i.name = "StropheSessionError"), i);
                            }
                            this._proto._restore(e, t, n, r, o);
                          },
                          _sessionCachingSupported: function () {
                            if (this._proto instanceof l.Bosh) {
                              if (!JSON) return !1;
                              try {
                                sessionStorage.setItem(
                                  "_strophe_",
                                  "_strophe_"
                                ),
                                  sessionStorage.removeItem("_strophe_");
                              } catch (e) {
                                return !1;
                              }
                              return !0;
                            }
                            return !1;
                          },
                          xmlInput: function (e) {},
                          xmlOutput: function (e) {},
                          rawInput: function (e) {},
                          rawOutput: function (e) {},
                          nextValidRid: function (e) {},
                          send: function (e) {
                            if (null !== e) {
                              if ("function" == typeof e.sort)
                                for (var t = 0; t < e.length; t++)
                                  this._queueData(e[t]);
                              else
                                "function" == typeof e.tree
                                  ? this._queueData(e.tree())
                                  : this._queueData(e);
                              this._proto._send();
                            }
                          },
                          flush: function () {
                            clearTimeout(this._idleTimeout), this._onIdle();
                          },
                          sendPresence: function (e, t, n, r) {
                            var o = this,
                              i = null;
                            "function" == typeof e.tree && (e = e.tree());
                            var s = e.getAttribute("id");
                            if (
                              (s ||
                                ((s = this.getUniqueId("sendPresence")),
                                e.setAttribute("id", s)),
                              "function" == typeof t || "function" == typeof n)
                            ) {
                              var a = this.addHandler(
                                function (e) {
                                  i && o.deleteTimedHandler(i),
                                    "error" === e.getAttribute("type")
                                      ? n && n(e)
                                      : t && t(e);
                                },
                                null,
                                "presence",
                                null,
                                s
                              );
                              r &&
                                (i = this.addTimedHandler(r, function () {
                                  return o.deleteHandler(a), n && n(null), !1;
                                }));
                            }
                            return this.send(e), s;
                          },
                          sendIQ: function (e, t, n, r) {
                            var o = this,
                              i = null;
                            "function" == typeof e.tree && (e = e.tree());
                            var s = e.getAttribute("id");
                            if (
                              (s ||
                                ((s = this.getUniqueId("sendIQ")),
                                e.setAttribute("id", s)),
                              "function" == typeof t || "function" == typeof n)
                            ) {
                              var a = this.addHandler(
                                function (e) {
                                  i && o.deleteTimedHandler(i);
                                  var r = e.getAttribute("type");
                                  if ("result" === r) t && t(e);
                                  else {
                                    if ("error" !== r) {
                                      var s = new Error(
                                        "Got bad IQ type of ".concat(r)
                                      );
                                      throw ((s.name = "StropheError"), s);
                                    }
                                    n && n(e);
                                  }
                                },
                                null,
                                "iq",
                                ["error", "result"],
                                s
                              );
                              r &&
                                (i = this.addTimedHandler(r, function () {
                                  return o.deleteHandler(a), n && n(null), !1;
                                }));
                            }
                            return this.send(e), s;
                          },
                          _queueData: function (e) {
                            if (null === e || !e.tagName || !e.childNodes) {
                              var t = new Error("Cannot queue non-DOMElement.");
                              throw ((t.name = "StropheError"), t);
                            }
                            this._data.push(e);
                          },
                          _sendRestart: function () {
                            var e = this;
                            this._data.push("restart"),
                              this._proto._sendRestart(),
                              (this._idleTimeout = setTimeout(function () {
                                return e._onIdle();
                              }, 100));
                          },
                          addTimedHandler: function (e, t) {
                            var n = new l.TimedHandler(e, t);
                            return this.addTimeds.push(n), n;
                          },
                          deleteTimedHandler: function (e) {
                            this.removeTimeds.push(e);
                          },
                          addHandler: function (e, t, n, r, o, i, s) {
                            var a = new l.Handler(e, t, n, r, o, i, s);
                            return this.addHandlers.push(a), a;
                          },
                          deleteHandler: function (e) {
                            this.removeHandlers.push(e);
                            var t = this.addHandlers.indexOf(e);
                            0 <= t && this.addHandlers.splice(t, 1);
                          },
                          registerSASLMechanisms: function (e) {
                            (this.mechanisms = {}),
                              (e = e || [
                                l.SASLAnonymous,
                                l.SASLExternal,
                                l.SASLMD5,
                                l.SASLOAuthBearer,
                                l.SASLXOAuth2,
                                l.SASLPlain,
                                l.SASLSHA1,
                              ]).forEach(this.registerSASLMechanism.bind(this));
                          },
                          registerSASLMechanism: function (e) {
                            this.mechanisms[e.prototype.name] = e;
                          },
                          disconnect: function (e) {
                            if (
                              (this._changeConnectStatus(
                                l.Status.DISCONNECTING,
                                e
                              ),
                              l.info("Disconnect was called because: " + e),
                              this.connected)
                            ) {
                              var t = !1;
                              (this.disconnecting = !0),
                                this.authenticated &&
                                  (t = u({
                                    xmlns: l.NS.CLIENT,
                                    type: "unavailable",
                                  })),
                                (this._disconnectTimeout =
                                  this._addSysTimedHandler(
                                    3e3,
                                    this._onDisconnectTimeout.bind(this)
                                  )),
                                this._proto._disconnect(t);
                            } else
                              l.info(
                                "Disconnect was called before Strophe connected to the server"
                              ),
                                this._proto._abortAllRequests(),
                                this._doDisconnect();
                          },
                          _changeConnectStatus: function (e, t, n) {
                            for (var r in l._connectionPlugins)
                              if (
                                Object.prototype.hasOwnProperty.call(
                                  l._connectionPlugins,
                                  r
                                )
                              ) {
                                var o = this[r];
                                if (o.statusChanged)
                                  try {
                                    o.statusChanged(e, t);
                                  } catch (e) {
                                    l.error(
                                      ""
                                        .concat(
                                          r,
                                          " plugin caused an exception changing status: "
                                        )
                                        .concat(e)
                                    );
                                  }
                              }
                            if (this.connect_callback)
                              try {
                                this.connect_callback(e, t, n);
                              } catch (e) {
                                l._handleError(e),
                                  l.error(
                                    "User connection callback caused an exception: ".concat(
                                      e
                                    )
                                  );
                              }
                          },
                          _doDisconnect: function (e) {
                            "number" == typeof this._idleTimeout &&
                              clearTimeout(this._idleTimeout),
                              null !== this._disconnectTimeout &&
                                (this.deleteTimedHandler(
                                  this._disconnectTimeout
                                ),
                                (this._disconnectTimeout = null)),
                              l.info("_doDisconnect was called"),
                              this._proto._doDisconnect(),
                              (this.authenticated = !1),
                              (this.disconnecting = !1),
                              (this.restored = !1),
                              (this.handlers = []),
                              (this.timedHandlers = []),
                              (this.removeTimeds = []),
                              (this.removeHandlers = []),
                              (this.addTimeds = []),
                              (this.addHandlers = []),
                              this._changeConnectStatus(
                                l.Status.DISCONNECTED,
                                e
                              ),
                              (this.connected = !1);
                          },
                          _dataRecv: function (e, t) {
                            var n = this;
                            l.info("_dataRecv called");
                            var r = this._proto._reqToData(e);
                            if (null !== r) {
                              for (
                                this.xmlInput !==
                                  l.Connection.prototype.xmlInput &&
                                  (r.nodeName === this._proto.strip &&
                                  r.childNodes.length
                                    ? this.xmlInput(r.childNodes[0])
                                    : this.xmlInput(r)),
                                  this.rawInput !==
                                    l.Connection.prototype.rawInput &&
                                    (t
                                      ? this.rawInput(t)
                                      : this.rawInput(l.serialize(r)));
                                0 < this.removeHandlers.length;

                              ) {
                                var o = this.removeHandlers.pop(),
                                  i = this.handlers.indexOf(o);
                                0 <= i && this.handlers.splice(i, 1);
                              }
                              for (; 0 < this.addHandlers.length; )
                                this.handlers.push(this.addHandlers.pop());
                              if (
                                this.disconnecting &&
                                this._proto._emptyQueue()
                              )
                                this._doDisconnect();
                              else {
                                var s = r.getAttribute("type");
                                if (null !== s && "terminate" === s) {
                                  if (this.disconnecting) return;
                                  var a = r.getAttribute("condition"),
                                    c = r.getElementsByTagName("conflict");
                                  return (
                                    null !== a
                                      ? ("remote-stream-error" === a &&
                                          0 < c.length &&
                                          (a = "conflict"),
                                        this._changeConnectStatus(
                                          l.Status.CONNFAIL,
                                          a
                                        ))
                                      : this._changeConnectStatus(
                                          l.Status.CONNFAIL,
                                          l.ErrorCondition.UNKOWN_REASON
                                        ),
                                    void this._doDisconnect(a)
                                  );
                                }
                                l.forEachChild(r, null, function (e) {
                                  var t = n.handlers;
                                  n.handlers = [];
                                  for (var r = 0; r < t.length; r++) {
                                    var o = t[r];
                                    try {
                                      (!o.isMatch(e) ||
                                        (!n.authenticated && o.user) ||
                                        o.run(e)) &&
                                        n.handlers.push(o);
                                    } catch (e) {
                                      l.warn(
                                        "Removing Strophe handlers due to uncaught exception: " +
                                          e.message
                                      );
                                    }
                                  }
                                });
                              }
                            }
                          },
                          mechanisms: {},
                          _connect_cb: function (e, t, n) {
                            var r;
                            l.info("_connect_cb was called"),
                              (this.connected = !0);
                            try {
                              r = this._proto._reqToData(e);
                            } catch (e) {
                              if (e.name !== l.ErrorCondition.BAD_FORMAT)
                                throw e;
                              this._changeConnectStatus(
                                l.Status.CONNFAIL,
                                l.ErrorCondition.BAD_FORMAT
                              ),
                                this._doDisconnect(l.ErrorCondition.BAD_FORMAT);
                            }
                            if (
                              r &&
                              (this.xmlInput !==
                                l.Connection.prototype.xmlInput &&
                                (r.nodeName === this._proto.strip &&
                                r.childNodes.length
                                  ? this.xmlInput(r.childNodes[0])
                                  : this.xmlInput(r)),
                              this.rawInput !==
                                l.Connection.prototype.rawInput &&
                                (n
                                  ? this.rawInput(n)
                                  : this.rawInput(l.serialize(r))),
                              this._proto._connect_cb(r) !== l.Status.CONNFAIL)
                            )
                              if (
                                r.getElementsByTagNameNS
                                  ? 0 <
                                    r.getElementsByTagNameNS(
                                      l.NS.STREAM,
                                      "features"
                                    ).length
                                  : 0 <
                                      r.getElementsByTagName("stream:features")
                                        .length ||
                                    0 <
                                      r.getElementsByTagName("features").length
                              ) {
                                var o = [],
                                  i = r.getElementsByTagName("mechanism");
                                if (0 < i.length)
                                  for (var s = 0; s < i.length; s++) {
                                    var a = l.getText(i[s]);
                                    this.mechanisms[a] &&
                                      o.push(this.mechanisms[a]);
                                  }
                                0 !== o.length ||
                                0 !== r.getElementsByTagName("auth").length
                                  ? !1 !== this.do_authentication &&
                                    this.authenticate(o)
                                  : this._proto._no_auth_received(t);
                              } else this._proto._no_auth_received(t);
                          },
                          sortMechanismsByPriority: function (e) {
                            for (var t = 0; t < e.length - 1; ++t) {
                              for (var n = t, r = t + 1; r < e.length; ++r)
                                e[r].prototype.priority >
                                  e[n].prototype.priority && (n = r);
                              if (n !== t) {
                                var o = e[t];
                                (e[t] = e[n]), (e[n] = o);
                              }
                            }
                            return e;
                          },
                          _attemptSASLAuth: function (e) {
                            e = this.sortMechanismsByPriority(e || []);
                            for (var t = !1, n = 0; n < e.length; ++n)
                              if (e[n].prototype.test(this)) {
                                (this._sasl_success_handler =
                                  this._addSysHandler(
                                    this._sasl_success_cb.bind(this),
                                    null,
                                    "success",
                                    null,
                                    null
                                  )),
                                  (this._sasl_failure_handler =
                                    this._addSysHandler(
                                      this._sasl_failure_cb.bind(this),
                                      null,
                                      "failure",
                                      null,
                                      null
                                    )),
                                  (this._sasl_challenge_handler =
                                    this._addSysHandler(
                                      this._sasl_challenge_cb.bind(this),
                                      null,
                                      "challenge",
                                      null,
                                      null
                                    )),
                                  (this._sasl_mechanism = new e[n]()),
                                  this._sasl_mechanism.onStart(this);
                                var r = a("auth", {
                                  xmlns: l.NS.SASL,
                                  mechanism: this._sasl_mechanism.name,
                                });
                                if (this._sasl_mechanism.isClientFirst) {
                                  var o = this._sasl_mechanism.onChallenge(
                                    this,
                                    null
                                  );
                                  r.t(btoa(o));
                                }
                                this.send(r.tree()), (t = !0);
                                break;
                              }
                            return t;
                          },
                          _attemptLegacyAuth: function () {
                            null === l.getNodeFromJid(this.jid)
                              ? (this._changeConnectStatus(
                                  l.Status.CONNFAIL,
                                  l.ErrorCondition.MISSING_JID_NODE
                                ),
                                this.disconnect(
                                  l.ErrorCondition.MISSING_JID_NODE
                                ))
                              : (this._changeConnectStatus(
                                  l.Status.AUTHENTICATING,
                                  null
                                ),
                                this._addSysHandler(
                                  this._auth1_cb.bind(this),
                                  null,
                                  null,
                                  null,
                                  "_auth_1"
                                ),
                                this.send(
                                  c({
                                    type: "get",
                                    to: this.domain,
                                    id: "_auth_1",
                                  })
                                    .c("query", { xmlns: l.NS.AUTH })
                                    .c("username", {})
                                    .t(l.getNodeFromJid(this.jid))
                                    .tree()
                                ));
                          },
                          authenticate: function (e) {
                            this._attemptSASLAuth(e) ||
                              this._attemptLegacyAuth();
                          },
                          _sasl_challenge_cb: function (e) {
                            var t = atob(l.getText(e)),
                              n = this._sasl_mechanism.onChallenge(this, t),
                              r = a("response", { xmlns: l.NS.SASL });
                            return (
                              "" !== n && r.t(btoa(n)), this.send(r.tree()), !0
                            );
                          },
                          _auth1_cb: function (e) {
                            var t = c({ type: "set", id: "_auth_2" })
                              .c("query", { xmlns: l.NS.AUTH })
                              .c("username", {})
                              .t(l.getNodeFromJid(this.jid))
                              .up()
                              .c("password")
                              .t(this.pass);
                            return (
                              l.getResourceFromJid(this.jid) ||
                                (this.jid =
                                  l.getBareJidFromJid(this.jid) + "/strophe"),
                              t
                                .up()
                                .c("resource", {})
                                .t(l.getResourceFromJid(this.jid)),
                              this._addSysHandler(
                                this._auth2_cb.bind(this),
                                null,
                                null,
                                null,
                                "_auth_2"
                              ),
                              this.send(t.tree()),
                              !1
                            );
                          },
                          _sasl_success_cb: function (e) {
                            var t = this;
                            if (this._sasl_data["server-signature"]) {
                              var n,
                                r = atob(l.getText(e)).match(
                                  /([a-z]+)=([^,]+)(,|$)/
                                );
                              if (
                                ("v" === r[1] && (n = r[2]),
                                n !== this._sasl_data["server-signature"])
                              )
                                return (
                                  this.deleteHandler(
                                    this._sasl_failure_handler
                                  ),
                                  (this._sasl_failure_handler = null),
                                  this._sasl_challenge_handler &&
                                    (this.deleteHandler(
                                      this._sasl_challenge_handler
                                    ),
                                    (this._sasl_challenge_handler = null)),
                                  (this._sasl_data = {}),
                                  this._sasl_failure_cb(null)
                                );
                            }
                            l.info("SASL authentication succeeded."),
                              this._sasl_mechanism &&
                                this._sasl_mechanism.onSuccess(),
                              this.deleteHandler(this._sasl_failure_handler),
                              (this._sasl_failure_handler = null),
                              this._sasl_challenge_handler &&
                                (this.deleteHandler(
                                  this._sasl_challenge_handler
                                ),
                                (this._sasl_challenge_handler = null));
                            var o = [],
                              i = function (e, n) {
                                for (; e.length; ) t.deleteHandler(e.pop());
                                return t._sasl_auth1_cb(n), !1;
                              };
                            return (
                              o.push(
                                this._addSysHandler(
                                  function (e) {
                                    return i(o, e);
                                  },
                                  null,
                                  "stream:features",
                                  null,
                                  null
                                )
                              ),
                              o.push(
                                this._addSysHandler(
                                  function (e) {
                                    return i(o, e);
                                  },
                                  l.NS.STREAM,
                                  "features",
                                  null,
                                  null
                                )
                              ),
                              this._sendRestart(),
                              !1
                            );
                          },
                          _sasl_auth1_cb: function (e) {
                            this.features = e;
                            for (var t = 0; t < e.childNodes.length; t++) {
                              var n = e.childNodes[t];
                              "bind" === n.nodeName && (this.do_bind = !0),
                                "session" === n.nodeName &&
                                  (this.do_session = !0);
                            }
                            if (!this.do_bind)
                              return (
                                this._changeConnectStatus(
                                  l.Status.AUTHFAIL,
                                  null
                                ),
                                !1
                              );
                            this._addSysHandler(
                              this._sasl_bind_cb.bind(this),
                              null,
                              null,
                              null,
                              "_bind_auth_2"
                            );
                            var r = l.getResourceFromJid(this.jid);
                            return (
                              r
                                ? this.send(
                                    c({ type: "set", id: "_bind_auth_2" })
                                      .c("bind", { xmlns: l.NS.BIND })
                                      .c("resource", {})
                                      .t(r)
                                      .tree()
                                  )
                                : this.send(
                                    c({ type: "set", id: "_bind_auth_2" })
                                      .c("bind", { xmlns: l.NS.BIND })
                                      .tree()
                                  ),
                              !1
                            );
                          },
                          _sasl_bind_cb: function (e) {
                            var t;
                            if ("error" === e.getAttribute("type"))
                              return (
                                l.info("SASL binding failed."),
                                0 < e.getElementsByTagName("conflict").length &&
                                  (t = l.ErrorCondition.CONFLICT),
                                this._changeConnectStatus(
                                  l.Status.AUTHFAIL,
                                  t,
                                  e
                                ),
                                !1
                              );
                            var n = e.getElementsByTagName("bind");
                            if (!(0 < n.length))
                              return (
                                l.info("SASL binding failed."),
                                this._changeConnectStatus(
                                  l.Status.AUTHFAIL,
                                  null,
                                  e
                                ),
                                !1
                              );
                            var r = n[0].getElementsByTagName("jid");
                            0 < r.length &&
                              ((this.jid = l.getText(r[0])),
                              this.do_session
                                ? (this._addSysHandler(
                                    this._sasl_session_cb.bind(this),
                                    null,
                                    null,
                                    null,
                                    "_session_auth_2"
                                  ),
                                  this.send(
                                    c({ type: "set", id: "_session_auth_2" })
                                      .c("session", { xmlns: l.NS.SESSION })
                                      .tree()
                                  ))
                                : ((this.authenticated = !0),
                                  this._changeConnectStatus(
                                    l.Status.CONNECTED,
                                    null
                                  )));
                          },
                          _sasl_session_cb: function (e) {
                            if ("result" === e.getAttribute("type"))
                              (this.authenticated = !0),
                                this._changeConnectStatus(
                                  l.Status.CONNECTED,
                                  null
                                );
                            else if ("error" === e.getAttribute("type"))
                              return (
                                l.info("Session creation failed."),
                                this._changeConnectStatus(
                                  l.Status.AUTHFAIL,
                                  null,
                                  e
                                ),
                                !1
                              );
                            return !1;
                          },
                          _sasl_failure_cb: function (e) {
                            return (
                              this._sasl_success_handler &&
                                (this.deleteHandler(this._sasl_success_handler),
                                (this._sasl_success_handler = null)),
                              this._sasl_challenge_handler &&
                                (this.deleteHandler(
                                  this._sasl_challenge_handler
                                ),
                                (this._sasl_challenge_handler = null)),
                              this._sasl_mechanism &&
                                this._sasl_mechanism.onFailure(),
                              this._changeConnectStatus(
                                l.Status.AUTHFAIL,
                                null,
                                e
                              ),
                              !1
                            );
                          },
                          _auth2_cb: function (e) {
                            return (
                              "result" === e.getAttribute("type")
                                ? ((this.authenticated = !0),
                                  this._changeConnectStatus(
                                    l.Status.CONNECTED,
                                    null
                                  ))
                                : "error" === e.getAttribute("type") &&
                                  (this._changeConnectStatus(
                                    l.Status.AUTHFAIL,
                                    null,
                                    e
                                  ),
                                  this.disconnect("authentication failed")),
                              !1
                            );
                          },
                          _addSysTimedHandler: function (e, t) {
                            var n = new l.TimedHandler(e, t);
                            return (n.user = !1), this.addTimeds.push(n), n;
                          },
                          _addSysHandler: function (e, t, n, r, o) {
                            var i = new l.Handler(e, t, n, r, o);
                            return (i.user = !1), this.addHandlers.push(i), i;
                          },
                          _onDisconnectTimeout: function () {
                            return (
                              l.info("_onDisconnectTimeout was called"),
                              this._changeConnectStatus(
                                l.Status.CONNTIMEOUT,
                                null
                              ),
                              this._proto._onDisconnectTimeout(),
                              this._doDisconnect(),
                              !1
                            );
                          },
                          _onIdle: function () {
                            for (var e = this; 0 < this.addTimeds.length; )
                              this.timedHandlers.push(this.addTimeds.pop());
                            for (; 0 < this.removeTimeds.length; ) {
                              var t = this.removeTimeds.pop(),
                                n = this.timedHandlers.indexOf(t);
                              0 <= n && this.timedHandlers.splice(n, 1);
                            }
                            for (
                              var r = new Date().getTime(), o = [], i = 0;
                              i < this.timedHandlers.length;
                              i++
                            ) {
                              var s = this.timedHandlers[i];
                              (!this.authenticated && s.user) ||
                                (s.lastCalled + s.period - r <= 0
                                  ? s.run() && o.push(s)
                                  : o.push(s));
                            }
                            (this.timedHandlers = o),
                              clearTimeout(this._idleTimeout),
                              this._proto._onIdle(),
                              this.connected &&
                                (this._idleTimeout = setTimeout(function () {
                                  return e._onIdle();
                                }, 100));
                          },
                        }),
                        (l.SASLMechanism = function (e, t, n) {
                          (this.name = e),
                            (this.isClientFirst = t),
                            (this.priority = n);
                        }),
                        (l.SASLMechanism.prototype = {
                          test: function (e) {
                            return !0;
                          },
                          onStart: function (e) {
                            this._connection = e;
                          },
                          onChallenge: function (e, t) {
                            throw new Error(
                              "You should implement challenge handling!"
                            );
                          },
                          onFailure: function () {
                            this._connection = null;
                          },
                          onSuccess: function () {
                            this._connection = null;
                          },
                        }),
                        (l.SASLAnonymous = function () {}),
                        (l.SASLAnonymous.prototype = new l.SASLMechanism(
                          "ANONYMOUS",
                          !1,
                          20
                        )),
                        (l.SASLAnonymous.prototype.test = function (e) {
                          return null === e.authcid;
                        }),
                        (l.SASLPlain = function () {}),
                        (l.SASLPlain.prototype = new l.SASLMechanism(
                          "PLAIN",
                          !0,
                          50
                        )),
                        (l.SASLPlain.prototype.test = function (e) {
                          return null !== e.authcid;
                        }),
                        (l.SASLPlain.prototype.onChallenge = function (e) {
                          var t = e.authzid;
                          return (
                            (t += "\0"),
                            (t += e.authcid),
                            (t += "\0"),
                            (t += e.pass),
                            i.default.utf16to8(t)
                          );
                        }),
                        (l.SASLSHA1 = function () {}),
                        (l.SASLSHA1.prototype = new l.SASLMechanism(
                          "SCRAM-SHA-1",
                          !0,
                          70
                        )),
                        (l.SASLSHA1.prototype.test = function (e) {
                          return null !== e.authcid;
                        }),
                        (l.SASLSHA1.prototype.onChallenge = function (e, t, n) {
                          var s =
                              n ||
                              r.default.hexdigest(1234567890 * Math.random()),
                            a = "n=" + i.default.utf16to8(e.authcid);
                          return (
                            (a += ",r="),
                            (a += s),
                            (e._sasl_data.cnonce = s),
                            (a =
                              "n,," +
                              (e._sasl_data["client-first-message-bare"] = a)),
                            (this.onChallenge = function (e, t) {
                              for (
                                var n,
                                  r,
                                  s,
                                  a,
                                  c,
                                  u,
                                  l,
                                  d,
                                  p = "c=biws,",
                                  f = ""
                                    .concat(
                                      e._sasl_data["client-first-message-bare"],
                                      ","
                                    )
                                    .concat(t, ","),
                                  h = e._sasl_data.cnonce,
                                  E = /([a-z]+)=([^,]+)(,|$)/;
                                t.match(E);

                              ) {
                                var g = t.match(E);
                                switch (((t = t.replace(g[0], "")), g[1])) {
                                  case "r":
                                    n = g[2];
                                    break;
                                  case "s":
                                    r = g[2];
                                    break;
                                  case "i":
                                    s = g[2];
                                }
                              }
                              if (n.substr(0, h.length) !== h)
                                return (
                                  (e._sasl_data = {}), e._sasl_failure_cb()
                                );
                              (f += p += "r=" + n),
                                (r = atob(r)),
                                (r += "\0\0\0");
                              var S = i.default.utf16to8(e.pass);
                              for (
                                a = u = o.default.core_hmac_sha1(S, r), l = 1;
                                l < s;
                                l++
                              ) {
                                for (
                                  c = o.default.core_hmac_sha1(
                                    S,
                                    o.default.binb2str(u)
                                  ),
                                    d = 0;
                                  d < 5;
                                  d++
                                )
                                  a[d] ^= c[d];
                                u = c;
                              }
                              a = o.default.binb2str(a);
                              var C = o.default.core_hmac_sha1(a, "Client Key"),
                                _ = o.default.str_hmac_sha1(a, "Server Key"),
                                m = o.default.core_hmac_sha1(
                                  o.default.str_sha1(o.default.binb2str(C)),
                                  f
                                );
                              for (
                                e._sasl_data["server-signature"] =
                                  o.default.b64_hmac_sha1(_, f),
                                  d = 0;
                                d < 5;
                                d++
                              )
                                C[d] ^= m[d];
                              return p + ",p=" + btoa(o.default.binb2str(C));
                            }),
                            a
                          );
                        }),
                        (l.SASLMD5 = function () {}),
                        (l.SASLMD5.prototype = new l.SASLMechanism(
                          "DIGEST-MD5",
                          !1,
                          60
                        )),
                        (l.SASLMD5.prototype.test = function (e) {
                          return null !== e.authcid;
                        }),
                        (l.SASLMD5.prototype._quote = function (e) {
                          return (
                            '"' +
                            e.replace(/\\/g, "\\\\").replace(/"/g, '\\"') +
                            '"'
                          );
                        }),
                        (l.SASLMD5.prototype.onChallenge = function (e, t, n) {
                          for (
                            var o = /([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/,
                              s =
                                n ||
                                r.default.hexdigest(
                                  "" + 1234567890 * Math.random()
                                ),
                              a = "",
                              c = null,
                              u = "";
                            t.match(o);

                          ) {
                            var l = t.match(o);
                            switch (
                              ((t = t.replace(l[0], "")),
                              (l[2] = l[2].replace(/^"(.+)"$/, "$1")),
                              l[1])
                            ) {
                              case "realm":
                                a = l[2];
                                break;
                              case "nonce":
                                u = l[2];
                                break;
                              case "qop":
                                l[2];
                                break;
                              case "host":
                                c = l[2];
                            }
                          }
                          var d = e.servtype + "/" + e.domain;
                          null !== c && (d = d + "/" + c);
                          var p = i.default.utf16to8(
                              e.authcid + ":" + a + ":" + this._connection.pass
                            ),
                            f = r.default.hash(p) + ":" + u + ":" + s,
                            h = "AUTHENTICATE:" + d,
                            E = "";
                          return (
                            (E += "charset=utf-8,"),
                            (E +=
                              "username=" +
                              this._quote(i.default.utf16to8(e.authcid)) +
                              ","),
                            (E += "realm=" + this._quote(a) + ","),
                            (E += "nonce=" + this._quote(u) + ","),
                            (E += "nc=00000001,"),
                            (E += "cnonce=" + this._quote(s) + ","),
                            (E += "digest-uri=" + this._quote(d) + ","),
                            (E +=
                              "response=" +
                              r.default.hexdigest(
                                r.default.hexdigest(f) +
                                  ":" +
                                  u +
                                  ":00000001:" +
                                  s +
                                  ":auth:" +
                                  r.default.hexdigest(h)
                              ) +
                              ","),
                            (E += "qop=auth"),
                            (this.onChallenge = function () {
                              return "";
                            }),
                            E
                          );
                        }),
                        (l.SASLOAuthBearer = function () {}),
                        (l.SASLOAuthBearer.prototype = new l.SASLMechanism(
                          "OAUTHBEARER",
                          !0,
                          40
                        )),
                        (l.SASLOAuthBearer.prototype.test = function (e) {
                          return null !== e.pass;
                        }),
                        (l.SASLOAuthBearer.prototype.onChallenge = function (
                          e
                        ) {
                          var t = "n,";
                          return (
                            null !== e.authcid && (t = t + "a=" + e.authzid),
                            (t += ","),
                            (t += ""),
                            (t += "auth=Bearer "),
                            (t += e.pass),
                            (t += ""),
                            (t += ""),
                            i.default.utf16to8(t)
                          );
                        }),
                        (l.SASLExternal = function () {}),
                        (l.SASLExternal.prototype = new l.SASLMechanism(
                          "EXTERNAL",
                          !0,
                          10
                        )),
                        (l.SASLExternal.prototype.onChallenge = function (e) {
                          return e.authcid === e.authzid ? "" : e.authzid;
                        }),
                        (l.SASLXOAuth2 = function () {}),
                        (l.SASLXOAuth2.prototype = new l.SASLMechanism(
                          "X-OAUTH2",
                          !0,
                          30
                        )),
                        (l.SASLXOAuth2.prototype.test = function (e) {
                          return null !== e.pass;
                        }),
                        (l.SASLXOAuth2.prototype.onChallenge = function (e) {
                          var t = "\0";
                          return (
                            null !== e.authcid && (t += e.authzid),
                            (t += "\0"),
                            (t += e.pass),
                            i.default.utf16to8(t)
                          );
                        }),
                        (t.default = {
                          Strophe: l,
                          $build: a,
                          $iq: c,
                          $msg: function (e) {
                            return new l.Builder("message", e);
                          },
                          $pres: u,
                          SHA1: o.default,
                          MD5: r.default,
                          b64_hmac_sha1: o.default.b64_hmac_sha1,
                          b64_sha1: o.default.b64_sha1,
                          str_hmac_sha1: o.default.str_hmac_sha1,
                          str_sha1: o.default.str_sha1,
                        });
                    },
                    "./src/md5.js": function (e, t, n) {
                      "use strict";
                      n.r(t),
                        n.d(t, "default", function () {
                          return d;
                        });
                      var r = function (e, t) {
                          var n = (65535 & e) + (65535 & t);
                          return (
                            (((e >> 16) + (t >> 16) + (n >> 16)) << 16) |
                            (65535 & n)
                          );
                        },
                        o = function (e) {
                          for (var t = [], n = 0; n < 8 * e.length; n += 8)
                            t[n >> 5] |= (255 & e.charCodeAt(n / 8)) << n % 32;
                          return t;
                        },
                        i = function (e, t, n, o, i, s) {
                          return r(
                            ((a = r(r(t, e), r(o, s))) << (c = i)) |
                              (a >>> (32 - c)),
                            n
                          );
                          var a, c;
                        },
                        s = function (e, t, n, r, o, s, a) {
                          return i((t & n) | (~t & r), e, t, o, s, a);
                        },
                        a = function (e, t, n, r, o, s, a) {
                          return i((t & r) | (n & ~r), e, t, o, s, a);
                        },
                        c = function (e, t, n, r, o, s, a) {
                          return i(t ^ n ^ r, e, t, o, s, a);
                        },
                        u = function (e, t, n, r, o, s, a) {
                          return i(n ^ (t | ~r), e, t, o, s, a);
                        },
                        l = function (e, t) {
                          (e[t >> 5] |= 128 << t % 32),
                            (e[14 + (((t + 64) >>> 9) << 4)] = t);
                          for (
                            var n,
                              o,
                              i,
                              l,
                              d = 1732584193,
                              p = -271733879,
                              f = -1732584194,
                              h = 271733878,
                              E = 0;
                            E < e.length;
                            E += 16
                          )
                            (d = s(
                              (n = d),
                              (o = p),
                              (i = f),
                              (l = h),
                              e[E + 0],
                              7,
                              -680876936
                            )),
                              (h = s(h, d, p, f, e[E + 1], 12, -389564586)),
                              (f = s(f, h, d, p, e[E + 2], 17, 606105819)),
                              (p = s(p, f, h, d, e[E + 3], 22, -1044525330)),
                              (d = s(d, p, f, h, e[E + 4], 7, -176418897)),
                              (h = s(h, d, p, f, e[E + 5], 12, 1200080426)),
                              (f = s(f, h, d, p, e[E + 6], 17, -1473231341)),
                              (p = s(p, f, h, d, e[E + 7], 22, -45705983)),
                              (d = s(d, p, f, h, e[E + 8], 7, 1770035416)),
                              (h = s(h, d, p, f, e[E + 9], 12, -1958414417)),
                              (f = s(f, h, d, p, e[E + 10], 17, -42063)),
                              (p = s(p, f, h, d, e[E + 11], 22, -1990404162)),
                              (d = s(d, p, f, h, e[E + 12], 7, 1804603682)),
                              (h = s(h, d, p, f, e[E + 13], 12, -40341101)),
                              (f = s(f, h, d, p, e[E + 14], 17, -1502002290)),
                              (p = s(p, f, h, d, e[E + 15], 22, 1236535329)),
                              (d = a(d, p, f, h, e[E + 1], 5, -165796510)),
                              (h = a(h, d, p, f, e[E + 6], 9, -1069501632)),
                              (f = a(f, h, d, p, e[E + 11], 14, 643717713)),
                              (p = a(p, f, h, d, e[E + 0], 20, -373897302)),
                              (d = a(d, p, f, h, e[E + 5], 5, -701558691)),
                              (h = a(h, d, p, f, e[E + 10], 9, 38016083)),
                              (f = a(f, h, d, p, e[E + 15], 14, -660478335)),
                              (p = a(p, f, h, d, e[E + 4], 20, -405537848)),
                              (d = a(d, p, f, h, e[E + 9], 5, 568446438)),
                              (h = a(h, d, p, f, e[E + 14], 9, -1019803690)),
                              (f = a(f, h, d, p, e[E + 3], 14, -187363961)),
                              (p = a(p, f, h, d, e[E + 8], 20, 1163531501)),
                              (d = a(d, p, f, h, e[E + 13], 5, -1444681467)),
                              (h = a(h, d, p, f, e[E + 2], 9, -51403784)),
                              (f = a(f, h, d, p, e[E + 7], 14, 1735328473)),
                              (p = a(p, f, h, d, e[E + 12], 20, -1926607734)),
                              (d = c(d, p, f, h, e[E + 5], 4, -378558)),
                              (h = c(h, d, p, f, e[E + 8], 11, -2022574463)),
                              (f = c(f, h, d, p, e[E + 11], 16, 1839030562)),
                              (p = c(p, f, h, d, e[E + 14], 23, -35309556)),
                              (d = c(d, p, f, h, e[E + 1], 4, -1530992060)),
                              (h = c(h, d, p, f, e[E + 4], 11, 1272893353)),
                              (f = c(f, h, d, p, e[E + 7], 16, -155497632)),
                              (p = c(p, f, h, d, e[E + 10], 23, -1094730640)),
                              (d = c(d, p, f, h, e[E + 13], 4, 681279174)),
                              (h = c(h, d, p, f, e[E + 0], 11, -358537222)),
                              (f = c(f, h, d, p, e[E + 3], 16, -722521979)),
                              (p = c(p, f, h, d, e[E + 6], 23, 76029189)),
                              (d = c(d, p, f, h, e[E + 9], 4, -640364487)),
                              (h = c(h, d, p, f, e[E + 12], 11, -421815835)),
                              (f = c(f, h, d, p, e[E + 15], 16, 530742520)),
                              (p = c(p, f, h, d, e[E + 2], 23, -995338651)),
                              (d = u(d, p, f, h, e[E + 0], 6, -198630844)),
                              (h = u(h, d, p, f, e[E + 7], 10, 1126891415)),
                              (f = u(f, h, d, p, e[E + 14], 15, -1416354905)),
                              (p = u(p, f, h, d, e[E + 5], 21, -57434055)),
                              (d = u(d, p, f, h, e[E + 12], 6, 1700485571)),
                              (h = u(h, d, p, f, e[E + 3], 10, -1894986606)),
                              (f = u(f, h, d, p, e[E + 10], 15, -1051523)),
                              (p = u(p, f, h, d, e[E + 1], 21, -2054922799)),
                              (d = u(d, p, f, h, e[E + 8], 6, 1873313359)),
                              (h = u(h, d, p, f, e[E + 15], 10, -30611744)),
                              (f = u(f, h, d, p, e[E + 6], 15, -1560198380)),
                              (p = u(p, f, h, d, e[E + 13], 21, 1309151649)),
                              (d = u(d, p, f, h, e[E + 4], 6, -145523070)),
                              (h = u(h, d, p, f, e[E + 11], 10, -1120210379)),
                              (f = u(f, h, d, p, e[E + 2], 15, 718787259)),
                              (p = u(p, f, h, d, e[E + 9], 21, -343485551)),
                              (d = r(d, n)),
                              (p = r(p, o)),
                              (f = r(f, i)),
                              (h = r(h, l));
                          return [d, p, f, h];
                        },
                        d = {
                          hexdigest: function (e) {
                            return (function (e) {
                              for (
                                var t = "0123456789abcdef", n = "", r = 0;
                                r < 4 * e.length;
                                r++
                              )
                                n +=
                                  t.charAt(
                                    (e[r >> 2] >> ((r % 4) * 8 + 4)) & 15
                                  ) +
                                  t.charAt((e[r >> 2] >> ((r % 4) * 8)) & 15);
                              return n;
                            })(l(o(e), 8 * e.length));
                          },
                          hash: function (e) {
                            return (function (e) {
                              for (var t = "", n = 0; n < 32 * e.length; n += 8)
                                t += String.fromCharCode(
                                  (e[n >> 5] >>> n % 32) & 255
                                );
                              return t;
                            })(l(o(e), 8 * e.length));
                          },
                        };
                    },
                    "./src/sha1.js": function (e, t, n) {
                      "use strict";
                      function r(e, t) {
                        (e[t >> 5] |= 128 << (24 - (t % 32))),
                          (e[15 + (((t + 64) >> 9) << 4)] = t);
                        var n,
                          r,
                          i,
                          c,
                          u,
                          l,
                          d,
                          p,
                          f,
                          h = new Array(80),
                          E = 1732584193,
                          g = -271733879,
                          S = -1732584194,
                          C = 271733878,
                          _ = -1009589776;
                        for (n = 0; n < e.length; n += 16) {
                          for (
                            c = E, u = g, l = S, d = C, p = _, r = 0;
                            r < 80;
                            r++
                          )
                            (h[r] =
                              r < 16
                                ? e[n + r]
                                : a(
                                    h[r - 3] ^ h[r - 8] ^ h[r - 14] ^ h[r - 16],
                                    1
                                  )),
                              (i = s(
                                s(a(E, 5), o(r, g, S, C)),
                                s(
                                  s(_, h[r]),
                                  (f = r) < 20
                                    ? 1518500249
                                    : f < 40
                                    ? 1859775393
                                    : f < 60
                                    ? -1894007588
                                    : -899497514
                                )
                              )),
                              (_ = C),
                              (C = S),
                              (S = a(g, 30)),
                              (g = E),
                              (E = i);
                          (E = s(E, c)),
                            (g = s(g, u)),
                            (S = s(S, l)),
                            (C = s(C, d)),
                            (_ = s(_, p));
                        }
                        return [E, g, S, C, _];
                      }
                      function o(e, t, n, r) {
                        return e < 20
                          ? (t & n) | (~t & r)
                          : e < 40
                          ? t ^ n ^ r
                          : e < 60
                          ? (t & n) | (t & r) | (n & r)
                          : t ^ n ^ r;
                      }
                      function i(e, t) {
                        var n = c(e);
                        16 < n.length && (n = r(n, 8 * e.length));
                        for (
                          var o = new Array(16), i = new Array(16), s = 0;
                          s < 16;
                          s++
                        )
                          (o[s] = 909522486 ^ n[s]), (i[s] = 1549556828 ^ n[s]);
                        var a = r(o.concat(c(t)), 512 + 8 * t.length);
                        return r(i.concat(a), 672);
                      }
                      function s(e, t) {
                        var n = (65535 & e) + (65535 & t);
                        return (
                          (((e >> 16) + (t >> 16) + (n >> 16)) << 16) |
                          (65535 & n)
                        );
                      }
                      function a(e, t) {
                        return (e << t) | (e >>> (32 - t));
                      }
                      function c(e) {
                        for (var t = [], n = 0; n < 8 * e.length; n += 8)
                          t[n >> 5] |=
                            (255 & e.charCodeAt(n / 8)) << (24 - (n % 32));
                        return t;
                      }
                      function u(e) {
                        for (var t, n, r = "", o = 0; o < 4 * e.length; o += 3)
                          for (
                            t =
                              (((e[o >> 2] >> (8 * (3 - (o % 4)))) & 255) <<
                                16) |
                              (((e[(o + 1) >> 2] >> (8 * (3 - ((o + 1) % 4)))) &
                                255) <<
                                8) |
                              ((e[(o + 2) >> 2] >> (8 * (3 - ((o + 2) % 4)))) &
                                255),
                              n = 0;
                            n < 4;
                            n++
                          )
                            8 * o + 6 * n > 32 * e.length
                              ? (r += "=")
                              : (r +=
                                  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(
                                    (t >> (6 * (3 - n))) & 63
                                  ));
                        return r;
                      }
                      function l(e) {
                        for (var t = "", n = 0; n < 32 * e.length; n += 8)
                          t += String.fromCharCode(
                            (e[n >> 5] >>> (24 - (n % 32))) & 255
                          );
                        return t;
                      }
                      n.r(t),
                        n.d(t, "default", function () {
                          return d;
                        });
                      var d = {
                        b64_hmac_sha1: function (e, t) {
                          return u(i(e, t));
                        },
                        b64_sha1: function (e) {
                          return u(r(c(e), 8 * e.length));
                        },
                        binb2str: l,
                        core_hmac_sha1: i,
                        str_hmac_sha1: function (e, t) {
                          return l(i(e, t));
                        },
                        str_sha1: function (e) {
                          return l(r(c(e), 8 * e.length));
                        },
                      };
                    },
                    "./src/strophe.js": function (e, t, n) {
                      "use strict";
                      n.r(t), n("./src/bosh.js"), n("./src/websocket.js");
                      var r = n("./src/core.js");
                      n.d(t, "default", function () {
                        return r.default;
                      });
                    },
                    "./src/utils.js": function (e, t, n) {
                      "use strict";
                      function r(e) {
                        return (r =
                          "function" == typeof Symbol &&
                          "symbol" == typeof Symbol.iterator
                            ? function (e) {
                                return typeof e;
                              }
                            : function (e) {
                                return e &&
                                  "function" == typeof Symbol &&
                                  e.constructor === Symbol &&
                                  e !== Symbol.prototype
                                  ? "symbol"
                                  : typeof e;
                              })(e);
                      }
                      n.r(t),
                        n.d(t, "default", function () {
                          return o;
                        });
                      var o = {
                        utf16to8: function (e) {
                          var t,
                            n,
                            r = "",
                            o = e.length;
                          for (t = 0; t < o; t++)
                            0 <= (n = e.charCodeAt(t)) && n <= 127
                              ? (r += e.charAt(t))
                              : (2047 < n
                                  ? ((r += String.fromCharCode(
                                      224 | ((n >> 12) & 15)
                                    )),
                                    (r += String.fromCharCode(
                                      128 | ((n >> 6) & 63)
                                    )))
                                  : (r += String.fromCharCode(
                                      192 | ((n >> 6) & 31)
                                    )),
                                (r += String.fromCharCode(
                                  128 | ((n >> 0) & 63)
                                )));
                          return r;
                        },
                        addCookies: function (e) {
                          for (var t in (e = e || {}))
                            if (Object.prototype.hasOwnProperty.call(e, t)) {
                              var n = "",
                                o = "",
                                i = "",
                                s = e[t],
                                a = "object" === r(s),
                                c = escape(unescape(a ? s.value : s));
                              a &&
                                ((n = s.expires ? ";expires=" + s.expires : ""),
                                (o = s.domain ? ";domain=" + s.domain : ""),
                                (i = s.path ? ";path=" + s.path : "")),
                                (document.cookie = t + "=" + c + n + o + i);
                            }
                        },
                      };
                    },
                    "./src/websocket.js": function (e, t, n) {
                      "use strict";
                      n.r(t);
                      var r = n("./src/core.js"),
                        o = r.default.Strophe,
                        i = r.default.$build;
                      (o.Websocket = function (e) {
                        (this._conn = e), (this.strip = "wrapper");
                        var t = e.service;
                        if (0 !== t.indexOf("ws:") && 0 !== t.indexOf("wss:")) {
                          var n = "";
                          "ws" === e.options.protocol &&
                          "https:" !== window.location.protocol
                            ? (n += "ws")
                            : (n += "wss"),
                            (n += "://" + window.location.host),
                            0 !== t.indexOf("/")
                              ? (n += window.location.pathname + t)
                              : (n += t),
                            (e.service = n);
                        }
                      }),
                        (o.Websocket.prototype = {
                          _buildStream: function () {
                            return i("open", {
                              xmlns: o.NS.FRAMING,
                              to: this._conn.domain,
                              version: "1.0",
                            });
                          },
                          _check_streamerror: function (e, t) {
                            var n;
                            if (
                              0 ===
                              (n = e.getElementsByTagNameNS
                                ? e.getElementsByTagNameNS(o.NS.STREAM, "error")
                                : e.getElementsByTagName("stream:error")).length
                            )
                              return !1;
                            for (
                              var r = n[0], i = "", s = "", a = 0;
                              a < r.childNodes.length;
                              a++
                            ) {
                              var c = r.childNodes[a];
                              if (
                                "urn:ietf:params:xml:ns:xmpp-streams" !==
                                c.getAttribute("xmlns")
                              )
                                break;
                              "text" === c.nodeName
                                ? (s = c.textContent)
                                : (i = c.nodeName);
                            }
                            var u = "WebSocket stream error: ";
                            return (
                              (u += i || "unknown"),
                              s && (u += " - " + s),
                              o.error(u),
                              this._conn._changeConnectStatus(t, i),
                              this._conn._doDisconnect(),
                              !0
                            );
                          },
                          _reset: function () {},
                          _connect: function () {
                            this._closeSocket(),
                              (this.socket = new WebSocket(
                                this._conn.service,
                                "xmpp"
                              )),
                              (this.socket.onopen = this._onOpen.bind(this)),
                              (this.socket.onerror = this._onError.bind(this)),
                              (this.socket.onclose = this._onClose.bind(this)),
                              (this.socket.onmessage =
                                this._connect_cb_wrapper.bind(this));
                          },
                          _connect_cb: function (e) {
                            if (this._check_streamerror(e, o.Status.CONNFAIL))
                              return o.Status.CONNFAIL;
                          },
                          _handleStreamStart: function (e) {
                            var t = !1,
                              n = e.getAttribute("xmlns");
                            "string" != typeof n
                              ? (t = "Missing xmlns in <open />")
                              : n !== o.NS.FRAMING &&
                                (t = "Wrong xmlns in <open />: " + n);
                            var r = e.getAttribute("version");
                            return (
                              "string" != typeof r
                                ? (t = "Missing version in <open />")
                                : "1.0" !== r &&
                                  (t = "Wrong version in <open />: " + r),
                              !t ||
                                (this._conn._changeConnectStatus(
                                  o.Status.CONNFAIL,
                                  t
                                ),
                                this._conn._doDisconnect(),
                                !1)
                            );
                          },
                          _connect_cb_wrapper: function (e) {
                            if (
                              0 === e.data.indexOf("<open ") ||
                              0 === e.data.indexOf("<?xml")
                            ) {
                              var t = e.data.replace(/^(<\?.*?\?>\s*)*/, "");
                              if ("" === t) return;
                              var n = new DOMParser().parseFromString(
                                t,
                                "text/xml"
                              ).documentElement;
                              this._conn.xmlInput(n),
                                this._conn.rawInput(e.data),
                                this._handleStreamStart(n) &&
                                  this._connect_cb(n);
                            } else if (0 === e.data.indexOf("<close ")) {
                              var r = new DOMParser().parseFromString(
                                e.data,
                                "text/xml"
                              ).documentElement;
                              this._conn.xmlInput(r),
                                this._conn.rawInput(e.data);
                              var i = r.getAttribute("see-other-uri");
                              if (i) {
                                var s = this._conn.service;
                                ((0 <= s.indexOf("wss:") &&
                                  0 <= i.indexOf("wss:")) ||
                                  0 <= s.indexOf("ws:")) &&
                                  (this._conn._changeConnectStatus(
                                    o.Status.REDIRECT,
                                    "Received see-other-uri, resetting connection"
                                  ),
                                  this._conn.reset(),
                                  (this._conn.service = i),
                                  this._connect());
                              } else
                                this._conn._changeConnectStatus(
                                  o.Status.CONNFAIL,
                                  "Received closing stream"
                                ),
                                  this._conn._doDisconnect();
                            } else {
                              var a = this._streamWrap(e.data),
                                c = new DOMParser().parseFromString(
                                  a,
                                  "text/xml"
                                ).documentElement;
                              (this.socket.onmessage =
                                this._onMessage.bind(this)),
                                this._conn._connect_cb(c, null, e.data);
                            }
                          },
                          _disconnect: function (e) {
                            if (
                              this.socket &&
                              this.socket.readyState !== WebSocket.CLOSED
                            ) {
                              e && this._conn.send(e);
                              var t = i("close", { xmlns: o.NS.FRAMING });
                              this._conn.xmlOutput(t.tree());
                              var n = o.serialize(t);
                              this._conn.rawOutput(n);
                              try {
                                this.socket.send(n);
                              } catch (e) {
                                o.info("Couldn't send <close /> tag.");
                              }
                            }
                            this._conn._doDisconnect();
                          },
                          _doDisconnect: function () {
                            o.info("WebSockets _doDisconnect was called"),
                              this._closeSocket();
                          },
                          _streamWrap: function (e) {
                            return "<wrapper>" + e + "</wrapper>";
                          },
                          _closeSocket: function () {
                            if (this.socket)
                              try {
                                (this.socket.onerror = null),
                                  this.socket.close();
                              } catch (e) {
                                o.debug(e.message);
                              }
                            this.socket = null;
                          },
                          _emptyQueue: function () {
                            return !0;
                          },
                          _onClose: function (e) {
                            this._conn.connected && !this._conn.disconnecting
                              ? (o.error("Websocket closed unexpectedly"),
                                this._conn._doDisconnect())
                              : e &&
                                1006 === e.code &&
                                !this._conn.connected &&
                                this.socket
                              ? (o.error("Websocket closed unexcectedly"),
                                this._conn._changeConnectStatus(
                                  o.Status.CONNFAIL,
                                  "The WebSocket connection could not be established or was disconnected."
                                ),
                                this._conn._doDisconnect())
                              : o.info("Websocket closed");
                          },
                          _no_auth_received: function (e) {
                            o.error(
                              "Server did not offer a supported authentication mechanism"
                            ),
                              this._changeConnectStatus(
                                o.Status.CONNFAIL,
                                o.ErrorCondition.NO_AUTH_MECH
                              ),
                              e && e.call(this._conn),
                              this._conn._doDisconnect();
                          },
                          _onDisconnectTimeout: function () {},
                          _abortAllRequests: function () {},
                          _onError: function (e) {
                            o.error("Websocket error " + e),
                              this._conn._changeConnectStatus(
                                o.Status.CONNFAIL,
                                "The WebSocket connection could not be established or was disconnected."
                              ),
                              this._disconnect();
                          },
                          _onIdle: function () {
                            var e = this._conn._data;
                            if (0 < e.length && !this._conn.paused) {
                              for (var t = 0; t < e.length; t++)
                                if (null !== e[t]) {
                                  var n;
                                  n =
                                    "restart" === e[t]
                                      ? this._buildStream().tree()
                                      : e[t];
                                  var r = o.serialize(n);
                                  this._conn.xmlOutput(n),
                                    this._conn.rawOutput(r),
                                    this.socket.send(r);
                                }
                              this._conn._data = [];
                            }
                          },
                          _onMessage: function (e) {
                            var t,
                              n =
                                '<close xmlns="urn:ietf:params:xml:ns:xmpp-framing" />';
                            if (e.data === n)
                              return (
                                this._conn.rawInput(n),
                                this._conn.xmlInput(e),
                                void (
                                  this._conn.disconnecting ||
                                  this._conn._doDisconnect()
                                )
                              );
                            if (0 === e.data.search("<open ")) {
                              if (
                                ((t = new DOMParser().parseFromString(
                                  e.data,
                                  "text/xml"
                                ).documentElement),
                                !this._handleStreamStart(t))
                              )
                                return;
                            } else {
                              var r = this._streamWrap(e.data);
                              t = new DOMParser().parseFromString(
                                r,
                                "text/xml"
                              ).documentElement;
                            }
                            return this._check_streamerror(t, o.Status.ERROR)
                              ? void 0
                              : this._conn.disconnecting &&
                                "presence" === t.firstChild.nodeName &&
                                "unavailable" ===
                                  t.firstChild.getAttribute("type")
                              ? (this._conn.xmlInput(t),
                                void this._conn.rawInput(o.serialize(t)))
                              : void this._conn._dataRecv(t, e.data);
                          },
                          _onOpen: function () {
                            o.info("Websocket open");
                            var e = this._buildStream();
                            this._conn.xmlOutput(e.tree());
                            var t = o.serialize(e);
                            this._conn.rawOutput(t), this.socket.send(t);
                          },
                          _reqToData: function (e) {
                            return e;
                          },
                          _send: function () {
                            this._conn.flush();
                          },
                          _sendRestart: function () {
                            clearTimeout(this._conn._idleTimeout),
                              this._conn._onIdle.bind(this._conn)();
                          },
                        });
                    },
                  }).default;
                }),
                (e.exports = r());
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(6),
                o = n(0),
                i = n(1),
                s = (function () {
                  function e() {}
                  return (
                    (e.trasformJSONGroup = function (e) {
                      var t;
                      try {
                        (t = new r.Group(
                          e[o.GroupConstants.KEYS.GUID],
                          e[o.GroupConstants.KEYS.NAME],
                          e[o.GroupConstants.KEYS.TYPE]
                        )),
                          e.wsChannel && delete e.wsChannel,
                          Object.assign(t, e),
                          (e = t);
                      } catch (e) {
                        i.Logger.error(
                          "GroupsController:transformJSONGroup",
                          e
                        );
                      }
                      return e;
                    }),
                    e
                  );
                })();
              t.GroupsController = s;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  }),
                i =
                  (this && this.__assign) ||
                  function () {
                    return (i =
                      Object.assign ||
                      function (e) {
                        for (var t, n = 1, r = arguments.length; n < r; n++)
                          for (var o in (t = arguments[n]))
                            Object.prototype.hasOwnProperty.call(t, o) &&
                              (e[o] = t[o]);
                        return e;
                      }).apply(this, arguments);
                  };
              t.__esModule = !0;
              var s = n(13),
                a = n(0),
                c = n(4),
                u = n(6),
                l = n(1),
                d = (function (e) {
                  function t(t, n, r) {
                    var o =
                      e.call(this, t, "text", r, a.MessageCategory.MESSAGE) ||
                      this;
                    return (
                      (o.type = "text"), (o.data = { text: n }), (o.text = n), o
                    );
                  }
                  return (
                    o(t, e),
                    (t.prototype.getSender = function () {
                      try {
                        return this.getSenderFromData();
                      } catch (e) {
                        return this.sender;
                      }
                    }),
                    (t.prototype.getReceiver = function () {
                      try {
                        return this.getReceiverFromData();
                      } catch (e) {
                        return this.receiver;
                      }
                    }),
                    (t.prototype.getMetadata = function () {
                      return (
                        this.data.metadata &&
                          (this.metadata = this.data.metadata),
                        this.metadata
                      );
                    }),
                    (t.prototype.setMetadata = function (e) {
                      (this.metadata = e),
                        (this.data = i({}, this.data, { metadata: e }));
                    }),
                    (t.prototype.getData = function () {
                      return this.data;
                    }),
                    (t.prototype.setData = function (e) {
                      this.data = e;
                    }),
                    (t.prototype.getText = function () {
                      return this.text;
                    }),
                    (t.prototype.setText = function (e) {
                      (this.text = e), (this.data.text = e);
                    }),
                    (t.prototype.setProcessedText = function (e) {
                      this.processedText = e;
                    }),
                    (t.prototype.getProcessedText = function () {
                      return this.processedText;
                    }),
                    (t.prototype.getSenderFromData = function () {
                      try {
                        var e = this.getData();
                        if (
                          e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                            a.MessageConstatnts.KEYS.SENDER
                          ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY]
                        )
                          return new c.User(
                            e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                              a.MessageConstatnts.KEYS.SENDER
                            ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY]
                          );
                      } catch (e) {
                        l.Logger.error(
                          "TextMessageModel: getSenderFromData",
                          e
                        );
                      }
                    }),
                    (t.prototype.getReceiverFromData = function () {
                      try {
                        var e = this.getData(),
                          t =
                            e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                              a.MessageConstatnts.KEYS.RECEIVER
                            ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY];
                        if (
                          e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                            a.MessageConstatnts.KEYS.RECEIVER
                          ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITYTYPE] ==
                          [
                            a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITY_TYPE
                              .USER,
                          ]
                        )
                          return new c.User(t);
                        var n = new u.Group(
                          t[a.GroupConstants.KEYS.GUID],
                          t[a.GroupConstants.KEYS.NAME],
                          t[a.MessageConstatnts.KEYS.TYPE]
                        );
                        return Object.assign(n, t);
                      } catch (e) {
                        l.Logger.error(
                          "TextMessageModel: getReceiverFromData",
                          e
                        );
                      }
                    }),
                    (t.TYPE = a.MessageConstatnts.TYPE.TEXT),
                    (t.RECEIVER_TYPE = a.MessageConstatnts.RECEIVER_TYPE),
                    (t.CATEGORY = a.MessageConstatnts.CATEGORY.MESSAGE),
                    t
                  );
                })(s.BaseMessage);
              t.TextMessage = d;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  }),
                i =
                  (this && this.__assign) ||
                  function () {
                    return (i =
                      Object.assign ||
                      function (e) {
                        for (var t, n = 1, r = arguments.length; n < r; n++)
                          for (var o in (t = arguments[n]))
                            Object.prototype.hasOwnProperty.call(t, o) &&
                              (e[o] = t[o]);
                        return e;
                      }).apply(this, arguments);
                  };
              t.__esModule = !0;
              var s = n(13),
                a = n(0),
                c = n(4),
                u = n(19),
                l = n(6),
                d = n(1),
                p = (function (e) {
                  function t(t, n, r, o) {
                    var i =
                      e.call(this, t, r, o, a.MessageCategory.MESSAGE) || this;
                    return (
                      (i.data = {}),
                      "object" != typeof n
                        ? (i.data = { url: n })
                        : (i.file = n),
                      i
                    );
                  }
                  return (
                    o(t, e),
                    (t.prototype.setCaption = function (e) {
                      (this.caption = e),
                        (this.data[a.MessageConstatnts.KEYS.TEXT] = e);
                    }),
                    (t.prototype.getCaption = function () {
                      return this.data[a.MessageConstatnts.KEYS.TEXT];
                    }),
                    (t.prototype.getSender = function () {
                      try {
                        return this.getSenderFromData();
                      } catch (e) {
                        return this.sender;
                      }
                    }),
                    (t.prototype.getReceiver = function () {
                      try {
                        return this.getReceiverFromData();
                      } catch (e) {
                        return this.receiver;
                      }
                    }),
                    (t.prototype.getMetadata = function () {
                      return (
                        this.data.metadata &&
                          (this.metadata = this.data.metadata),
                        this.metadata
                      );
                    }),
                    (t.prototype.setMetadata = function (e) {
                      (this.metadata = e),
                        (this.data = i({}, this.data, { metadata: e }));
                    }),
                    (t.prototype.getData = function () {
                      return this.data;
                    }),
                    (t.prototype.setData = function (e) {
                      this.data = e;
                    }),
                    (t.prototype.getAttachment = function () {
                      return new u.Attachment(this.data.attachments[0]);
                    }),
                    (t.prototype.setAttachment = function (e) {
                      this.data.attachments = [e.toJSON(e)];
                    }),
                    (t.prototype.getURL = function () {
                      try {
                        var e = this.getData();
                        if (e[a.MessageConstatnts.KEYS.URL])
                          return e[a.MessageConstatnts.KEYS.URL];
                      } catch (e) {
                        d.Logger.error("MediaMessageModel: getURL", e);
                      }
                    }),
                    (t.prototype.getSenderFromData = function () {
                      try {
                        var e = this.getData();
                        if (
                          e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                            a.MessageConstatnts.KEYS.SENDER
                          ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY]
                        )
                          return new c.User(
                            e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                              a.MessageConstatnts.KEYS.SENDER
                            ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY]
                          );
                      } catch (e) {
                        d.Logger.error(
                          "MediaMessageModel: getSenderFromData",
                          e
                        );
                      }
                    }),
                    (t.prototype.getReceiverFromData = function () {
                      try {
                        var e = this.getData(),
                          t =
                            e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                              a.MessageConstatnts.KEYS.RECEIVER
                            ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY];
                        if (
                          e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                            a.MessageConstatnts.KEYS.RECEIVER
                          ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITYTYPE] ==
                          [
                            a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITY_TYPE
                              .USER,
                          ]
                        )
                          return new c.User(t);
                        var n = new l.Group(
                          t[a.GroupConstants.KEYS.GUID],
                          t[a.GroupConstants.KEYS.NAME],
                          t[a.MessageConstatnts.KEYS.TYPE]
                        );
                        return Object.assign(n, t);
                      } catch (e) {
                        d.Logger.error(
                          "MediaMessageModel: getReceiverFromData",
                          e
                        );
                      }
                    }),
                    (t.TYPE = a.MessageConstatnts.TYPE),
                    (t.RECEIVER_TYPE = a.MessageConstatnts.RECEIVER_TYPE),
                    (t.CATEGORY = a.MessageConstatnts.CATEGORY),
                    t
                  );
                })(s.BaseMessage);
              t.MediaMessage = p;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(0),
                o = (function () {
                  function e(e) {
                    e.hasOwnProperty(r.ATTACHMENTS_CONSTANTS.KEYS.EXTENSION) &&
                      (this.extension =
                        e[r.ATTACHMENTS_CONSTANTS.KEYS.EXTENSION]),
                      e.hasOwnProperty(
                        r.ATTACHMENTS_CONSTANTS.KEYS.MIME_TYPE
                      ) &&
                        (this.mimeType =
                          e[r.ATTACHMENTS_CONSTANTS.KEYS.MIME_TYPE]),
                      e.hasOwnProperty(r.ATTACHMENTS_CONSTANTS.KEYS.NAME) &&
                        (this.name = e[r.ATTACHMENTS_CONSTANTS.KEYS.NAME]),
                      e.hasOwnProperty(r.ATTACHMENTS_CONSTANTS.KEYS.SIZE) &&
                        (this.size = e[r.ATTACHMENTS_CONSTANTS.KEYS.SIZE]),
                      e.hasOwnProperty(r.ATTACHMENTS_CONSTANTS.KEYS.URL) &&
                        (this.url = e[r.ATTACHMENTS_CONSTANTS.KEYS.URL]);
                  }
                  return (
                    (e.prototype.createFileFromJSON = function (t) {
                      return new e(t);
                    }),
                    (e.prototype.toJSON = function (e) {
                      return {
                        extension: e.getExtension(),
                        mimeType: e.getMimeType(),
                        name: e.getName(),
                        url: e.getUrl(),
                        size: e.getSize(),
                      };
                    }),
                    (e.prototype.getExtension = function () {
                      return this.extension;
                    }),
                    (e.prototype.setExtension = function (e) {
                      this.extension = e;
                    }),
                    (e.prototype.getMimeType = function () {
                      return this.mimeType;
                    }),
                    (e.prototype.setMimeType = function (e) {
                      this.mimeType = e;
                    }),
                    (e.prototype.getName = function () {
                      return this.name;
                    }),
                    (e.prototype.setName = function (e) {
                      this.name = e;
                    }),
                    (e.prototype.getSize = function () {
                      return this.size;
                    }),
                    (e.prototype.setSize = function (e) {
                      this.size = e;
                    }),
                    (e.prototype.getUrl = function () {
                      return this.url;
                    }),
                    (e.prototype.setUrl = function (e) {
                      this.url = e;
                    }),
                    e
                  );
                })();
              t.Attachment = o;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  }),
                i =
                  (this && this.__assign) ||
                  function () {
                    return (i =
                      Object.assign ||
                      function (e) {
                        for (var t, n = 1, r = arguments.length; n < r; n++)
                          for (var o in (t = arguments[n]))
                            Object.prototype.hasOwnProperty.call(t, o) &&
                              (e[o] = t[o]);
                        return e;
                      }).apply(this, arguments);
                  };
              t.__esModule = !0;
              var s = n(13),
                a = n(0),
                c = n(4),
                u = n(1),
                l = n(6),
                d = (function (e) {
                  function t() {
                    for (var t = [], n = 0; n < arguments.length; n++)
                      t[n] = arguments[n];
                    var r = this;
                    if (3 == t.length) {
                      var o = t[0],
                        i = t[1],
                        s = t[2];
                      (r =
                        e.call(
                          this,
                          o,
                          a.MessageConstatnts.TYPE.CUSTOM,
                          i,
                          a.MessageCategory.MESSAGE
                        ) || this),
                        ("object" != typeof s || Array.isArray(s)) && (s = {}),
                        (r.customData = s),
                        u.isFalsy(r.data) && (r.data = {}),
                        (r.data[a.MessageConstatnts.KEYS.CUSTOM_DATA] = s);
                    }
                    if (4 == t.length) {
                      (o = t[0]), (i = t[1]);
                      var c = t[2];
                      (s = t[3]),
                        (r =
                          e.call(this, o, c, i, a.MessageCategory.CUSTOM) ||
                          this),
                        ("object" != typeof s || Array.isArray(s)) && (s = {}),
                        (r.customData = s),
                        u.isFalsy(r.data) && (r.data = {}),
                        (r.data[a.MessageConstatnts.KEYS.CUSTOM_DATA] = s);
                    }
                    return r;
                  }
                  return (
                    o(t, e),
                    (t.prototype.getCustomData = function () {
                      return this.customData;
                    }),
                    (t.prototype.setCustomData = function (e) {
                      (this.customData = e),
                        (this.data[a.MessageConstatnts.KEYS.CUSTOM_DATA] = e);
                    }),
                    (t.prototype.getSender = function () {
                      try {
                        return this.getSenderFromData();
                      } catch (e) {
                        return this.sender;
                      }
                    }),
                    (t.prototype.getReceiver = function () {
                      try {
                        return this.getReceiverFromData();
                      } catch (e) {
                        return this.receiver;
                      }
                    }),
                    (t.prototype.getSubType = function () {
                      return this.subType;
                    }),
                    (t.prototype.setSubType = function (e) {
                      (this.subType = e),
                        (this.data = i({}, this.data, { subType: e }));
                    }),
                    (t.prototype.getMetadata = function () {
                      return this.metadata;
                    }),
                    (t.prototype.setMetadata = function (e) {
                      (this.metadata = e),
                        (this.data = i({}, this.data, { metadata: e }));
                    }),
                    (t.prototype.getData = function () {
                      return this.data;
                    }),
                    (t.prototype.getSenderFromData = function () {
                      try {
                        var e = this.getData();
                        if (
                          e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                            a.MessageConstatnts.KEYS.SENDER
                          ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY]
                        )
                          return new c.User(
                            e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                              a.MessageConstatnts.KEYS.SENDER
                            ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY]
                          );
                      } catch (e) {
                        u.Logger.error(
                          "CustomMessageModel: getSenderFromData",
                          e
                        );
                      }
                    }),
                    (t.prototype.getReceiverFromData = function () {
                      try {
                        var e = this.getData(),
                          t =
                            e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                              a.MessageConstatnts.KEYS.RECEIVER
                            ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITITY];
                        if (
                          e[a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES][
                            a.MessageConstatnts.KEYS.RECEIVER
                          ][a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITYTYPE] ==
                          [
                            a.ResponseConstants.RESPONSE_KEYS.KEY_ENTITY_TYPE
                              .USER,
                          ]
                        )
                          return new c.User(t);
                        var n = new l.Group(
                          t[a.GroupConstants.KEYS.GUID],
                          t[a.GroupConstants.KEYS.NAME],
                          t[a.MessageConstatnts.KEYS.TYPE]
                        );
                        return Object.assign(n, t);
                      } catch (e) {
                        u.Logger.error(
                          "CustomMessageModel: getReceiverFromData",
                          e
                        );
                      }
                    }),
                    t
                  );
                })(s.BaseMessage);
              t.CustomMessage = d;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  });
              t.__esModule = !0;
              var i = n(1);
              t.MessageEventListener = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                (this.onAction = void 0),
                  (this.onTextMessageReceived = void 0),
                  (this.onMediaMessageReceived = void 0),
                  (this.onCustomMessageReceived = void 0),
                  (this.onCall = void 0),
                  (this.onTypingStarted = void 0),
                  (this.onTypingEnded = void 0),
                  (this.onMessagesDelivered = void 0),
                  (this.onMessagesRead = void 0),
                  (this.onMessageEdited = void 0),
                  (this.onMessageDeleted = void 0),
                  i.isFalsy(e[0].onAction) || (this.onAction = e[0].onAction),
                  i.isFalsy(e[0].onTextMessageReceived) ||
                    (this.onTextMessageReceived = e[0].onTextMessageReceived),
                  i.isFalsy(e[0].onMediaMessageReceived) ||
                    (this.onMediaMessageReceived = e[0].onMediaMessageReceived),
                  i.isFalsy(e[0].onCall) || (this.onCall = e[0].onCall),
                  i.isFalsy(e[0].onTypingStarted) ||
                    (this.onTypingStarted = e[0].onTypingStarted),
                  i.isFalsy(e[0].onTypingEnded) ||
                    (this.onTypingEnded = e[0].onTypingEnded),
                  i.isFalsy(e[0].onMessagesDelivered) ||
                    (this.onMessagesDelivered = e[0].onMessagesDelivered),
                  i.isFalsy(e[0].onMessagesRead) ||
                    (this.onMessagesRead = e[0].onMessagesRead),
                  i.isFalsy(e[0].onCustomMessageReceived) ||
                    (this.onCustomMessageReceived =
                      e[0].onCustomMessageReceived),
                  i.isFalsy(e[0].onMessageEdited) ||
                    (this.onMessageEdited = e[0].onMessageEdited),
                  i.isFalsy(e[0].onMessageDeleted) ||
                    (this.onMessageDeleted = e[0].onMessageDeleted);
              };
              t.CallEventListener = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                (this.onIncomingCallReceived = void 0),
                  (this.onOutgoingCallAccepted = void 0),
                  (this.onOutgoingCallRejected = void 0),
                  (this.onIncomingCallCancelled = void 0),
                  i.isFalsy(e[0].onIncomingCallReceived) ||
                    (this.onIncomingCallReceived = e[0].onIncomingCallReceived),
                  i.isFalsy(e[0].onOutgoingCallAccepted) ||
                    (this.onOutgoingCallAccepted = e[0].onOutgoingCallAccepted),
                  i.isFalsy(e[0].onOutgoingCallRejected) ||
                    (this.onOutgoingCallRejected = e[0].onOutgoingCallRejected),
                  i.isFalsy(e[0].onIncomingCallCancelled) ||
                    (this.onIncomingCallCancelled =
                      e[0].onIncomingCallCancelled);
              };
              t.UserEventListener = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                i.isFalsy(e[0].onUserOnline) ||
                  (this.onUserOnline = e[0].onUserOnline),
                  i.isFalsy(e[0].onUserOffline) ||
                    (this.onUserOffline = e[0].onUserOffline);
              };
              t.GroupEventListener = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                i.isFalsy(e[0].onGroupMemberJoined) ||
                  (this.onUserJoined = e[0].onGroupMemberJoined),
                  i.isFalsy(e[0].onGroupMemberLeft) ||
                    (this.onUserLeft = e[0].onGroupMemberLeft),
                  i.isFalsy(e[0].onGroupMemberKicked) ||
                    (this.onUserKicked = e[0].onGroupMemberKicked),
                  i.isFalsy(e[0].onGroupMemberBanned) ||
                    (this.onUserBanned = e[0].onGroupMemberBanned),
                  i.isFalsy(e[0].onGroupMemberUnbanned) ||
                    (this.onUserUnbanned = e[0].onGroupMemberUnbanned),
                  i.isFalsy(e[0].onGroupMemberScopeChanged) ||
                    (this.onMemberScopeChanged =
                      e[0].onGroupMemberScopeChanged),
                  i.isFalsy(e[0].onMemberAddedToGroup) ||
                    (this.onMemberAddedToGroup = e[0].onMemberAddedToGroup);
              };
              t.UserCallEventListener = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                i.isFalsy(e[0].onYouLeft) || (this.onYouLeft = e[0].onYouLeft),
                  i.isFalsy(e[0].onYouJoined) ||
                    (this.onYouJoined = e[0].onYouJoined),
                  i.isFalsy(e[0].onUserJoined) ||
                    (this.onUserJoined = e[0].onUserJoined),
                  i.isFalsy(e[0].onUserLeft) ||
                    (this.onUserLeft = e[0].onUserLeft),
                  i.isFalsy(e[0].onUserListUpdated) ||
                    (this.onUserListUpdated = e[0].onUserListUpdated),
                  i.isFalsy(e[0].onMediaDeviceListUpdated) ||
                    (this.onMediaDeviceListUpdated =
                      e[0].onMediaDeviceListUpdated),
                  i.isFalsy(e[0].onCallEnded) ||
                    (this.onCallEnded = e[0].onCallEnded),
                  i.isFalsy(e[0].onError) || (this.onError = e[0].onError);
              };
              t.LoginEventListener = function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                i.isFalsy(e[0].loginSuccess) ||
                  (this.loginSuccess = e[0].loginSuccess),
                  i.isFalsy(e[0].loginFailure) ||
                    (this.loginFailure = e[0].loginFailure),
                  i.isFalsy(e[0].logoutSuccess) ||
                    (this.logoutSuccess = e[0].logoutSuccess),
                  i.isFalsy(e[0].logoutFailure) ||
                    (this.logoutFailure = e[0].logoutFailure);
              };
              var s = function (e, t) {
                  (this._name = e), (this._callback = t);
                },
                a = (function (e) {
                  function t(t, n, r, o) {
                    var i = e.call(this, t, o) || this;
                    return (i._eventListener = n), r && (i._cursor = r), i;
                  }
                  return o(t, e), t;
                })((t.Listener = s));
              t.MessageListener = a;
              var c = (function (e) {
                function t(t, n, r, o) {
                  var i = e.call(this, t, o) || this;
                  return (i._eventListener = n), r && (i._cursor = r), i;
                }
                return o(t, e), t;
              })(s);
              t.UserListener = c;
              var u = (function (e) {
                function t(t, n, r, o) {
                  var i = e.call(this, t, o) || this;
                  return (i._eventListener = n), r && (i._cursor = r), i;
                }
                return o(t, e), t;
              })(s);
              t.GroupListener = u;
              var l = (function (e) {
                function t(t, n, r) {
                  var o = e.call(this, "callListner", r) || this;
                  return (o._eventListener = t), o;
                }
                return o(t, e), t;
              })(s);
              t.UserCallListener = l;
              var d = (function (e) {
                function t(t, n, r, o) {
                  var i = e.call(this, t, o) || this;
                  return (i._eventListener = n), i;
                }
                return o(t, e), t;
              })(s);
              t.CallListener = d;
              var p = (function (e) {
                function t(t, n, r, o) {
                  var i = e.call(this, t, o) || this;
                  return (i._eventListener = n), r && (i._cursor = r), i;
                }
                return o(t, e), t;
              })(s);
              t.LoginListener = p;
            },
            function (e, t, n) {
              "use strict";
              var r =
                (this && this.__assign) ||
                function () {
                  return (r =
                    Object.assign ||
                    function (e) {
                      for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var o in (t = arguments[n]))
                          Object.prototype.hasOwnProperty.call(t, o) &&
                            (e[o] = t[o]);
                      return e;
                    }).apply(this, arguments);
                };
              t.__esModule = !0;
              var o = n(3),
                i = n(1),
                s = n(0),
                a = n(11),
                c = (function () {
                  function e(e) {
                    (this.store = s.constants.DEFAULT_STORE),
                      i.isFalsy(e) || (this.store = e),
                      (this.messagesStore = a.createInstance({
                        name: i.format(
                          s.LOCAL_STORE.STORE_STRING,
                          o.CometChat.getAppId(),
                          s.LOCAL_STORE.MESSAGES_STORE
                        ),
                      })),
                      this.messagesStore.setDriver([
                        a.LOCALSTORAGE,
                        a.INDEXEDDB,
                        a.WEBSQL,
                      ]);
                  }
                  return (
                    (e.getInstance = function () {
                      return (
                        null == e.MessagesStore && (e.MessagesStore = new e()),
                        e.MessagesStore
                      );
                    }),
                    (e.prototype.set = function (e, t) {
                      return this.messagesStore.setItem(e, t);
                    }),
                    (e.prototype.remove = function (e) {
                      this.messagesStore.removeItem(e);
                    }),
                    (e.prototype.get = function (e) {
                      return this.messagesStore.getItem(e);
                    }),
                    (e.prototype.clearStore = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        e.messagesStore
                          .clear()
                          .then(function () {
                            t(!0);
                          })
                          .catch(function (e) {
                            n(e);
                          });
                      });
                    }),
                    (e.prototype.getAllMessages = function () {
                      var e = this,
                        t = {};
                      return new Promise(function (n, o) {
                        e.messagesStore
                          .iterate(function (e, n, o) {
                            n != s.constants.MSG_VER_POST &&
                              n != s.constants.MSG_VER_POST &&
                              (t = r({}, t, e));
                          })
                          .then(function () {
                            n(t);
                          });
                      });
                    }),
                    (e.prototype.clear = function (e) {}),
                    (e.prototype.selectStore = function (e) {
                      this.store = e;
                    }),
                    (e.prototype.storeMessages = function (e) {
                      var t = this;
                      if (o.CometChat.user.getUid()) {
                        var n = o.CometChat.user.getUid(),
                          a = {},
                          c = 0;
                        return (
                          this.get(s.constants.MSG_VER_POST).then(function (o) {
                            e.map(function (e) {
                              var t;
                              if (!i.isFalsy(e)) {
                                0 == c && (c = parseInt(e.getId().toString())),
                                  c > e.getId() &&
                                    (c = parseInt(e.getId().toString())),
                                  o < e.getId() &&
                                    (o = parseInt(e.getId().toString()));
                                var u = void 0;
                                (u =
                                  e.getSender() instanceof Object
                                    ? e.getSender().getUid()
                                    : e.getSender()),
                                  e.getReceiverType() ==
                                    s.MessageConstatnts.RECEIVER_TYPE.GROUP &&
                                    (u = e.getReceiver()),
                                  e.getSender() instanceof Object
                                    ? e.getSender().getUid() == n &&
                                      (u = e.getReceiver())
                                    : e.getSender() == n &&
                                      (u = e.getReceiver()),
                                  a[u] || (a[u] = {}),
                                  (a[u] = r(
                                    {},
                                    a[u],
                                    (((t = {})[e.getId()] = e), t)
                                  ));
                              }
                            }),
                              t.get(s.constants.MSG_VER_PRE).then(function (e) {
                                ((0 < c && c < e) || null == e) &&
                                  t.set(s.constants.MSG_VER_PRE, c);
                              }) &&
                                0 < o &&
                                t.set(s.constants.MSG_VER_POST, o),
                              Object.keys(a).map(function (e) {
                                t.get(e).then(function (n) {
                                  null == n && (n = {}),
                                    t.set(e, r({}, a[e], n));
                                });
                              });
                          }),
                          !0
                        );
                      }
                    }),
                    e
                  );
                })();
              t.MessagesStore = c;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  }),
                i =
                  (this && this.__assign) ||
                  function () {
                    return (i =
                      Object.assign ||
                      function (e) {
                        for (var t, n = 1, r = arguments.length; n < r; n++)
                          for (var o in (t = arguments[n]))
                            Object.prototype.hasOwnProperty.call(t, o) &&
                              (e[o] = t[o]);
                        return e;
                      }).apply(this, arguments);
                  };
              t.__esModule = !0;
              var s = n(13),
                a = n(6),
                c = n(4),
                u = n(0),
                l = n(1),
                d = n(7),
                p = (function (e) {
                  function t() {
                    return (null !== e && e.apply(this, arguments)) || this;
                  }
                  return (
                    o(t, e),
                    (t.actionFromJSON = function (e) {
                      var t = new this(
                          e[u.MessageConstatnts.KEYS.RECEIVER],
                          e[u.MessageConstatnts.KEYS.TYPE],
                          e[u.MessageConstatnts.KEYS.RECEIVER_TYPE],
                          u.MessageCategory.ACTION
                        ),
                        n = e[u.MessageConstatnts.KEYS.DATA];
                      if (
                        ((t.data = n),
                        t.setAction(n[u.MessageConstatnts.KEYS.ACTION]),
                        n[u.ActionConstatnts.ACTION_KEYS.EXTRAS])
                      ) {
                        var r = n[u.ActionConstatnts.ACTION_KEYS.EXTRAS];
                        if (r[u.ActionConstatnts.ACTION_KEYS.SCOPE]) {
                          var o = r[u.ActionConstatnts.ACTION_KEYS.SCOPE];
                          o[u.ActionConstatnts.ACTION_KEYS.NEW] &&
                            o[u.ActionConstatnts.ACTION_KEYS.OLD] &&
                            (t.setOldScope(
                              o[u.ActionConstatnts.ACTION_KEYS.OLD]
                            ),
                            t.setNewScope(
                              o[u.ActionConstatnts.ACTION_KEYS.NEW]
                            ));
                        }
                      }
                      n[u.MessageConstatnts.KEYS.METADATA] &&
                        t.setMetadata(n[u.MessageConstatnts.KEYS.METADATA]);
                      var i = n[u.ActionConstatnts.ACTION_KEYS.ENTITIES];
                      if (i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY])
                        if (
                          i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                            u.ActionConstatnts.ACTION_KEYS.ENTITY_TYPE
                          ] == u.ActionConstatnts.ACTION_ENTITY_TYPE.USER
                        ) {
                          var s = new c.User(
                            i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                              u.ActionConstatnts.ACTION_KEYS.ENTITY
                            ]
                          );
                          Object.assign(
                            s,
                            i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                              u.ActionConstatnts.ACTION_KEYS.ENTITY
                            ]
                          ),
                            (t.actionBy = s),
                            t.setSender(s);
                        } else {
                          var l = new a.Group("", "", "");
                          Object.assign(
                            l,
                            i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                              u.ActionConstatnts.ACTION_KEYS.ENTITY
                            ]
                          ),
                            (t.actionBy = l);
                        }
                      if (
                        (i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR] &&
                          (i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                            u.ActionConstatnts.ACTION_KEYS.ENTITY_TYPE
                          ] == u.ActionConstatnts.ACTION_ENTITY_TYPE.USER
                            ? ((s = new c.User(
                                i[
                                  u.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR
                                ][u.ActionConstatnts.ACTION_KEYS.ENTITY]
                              )),
                              Object.assign(
                                s,
                                i[
                                  u.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR
                                ][u.ActionConstatnts.ACTION_KEYS.ENTITY]
                              ),
                              (t.actionFor = s))
                            : ((l = new a.Group("", "", "")),
                              Object.assign(
                                l,
                                i[
                                  u.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR
                                ][u.ActionConstatnts.ACTION_KEYS.ENTITY]
                              ),
                              (t.actionFor = l))),
                        i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON])
                      )
                        if (
                          i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                            u.ActionConstatnts.ACTION_KEYS.ENTITY_TYPE
                          ] == u.ActionConstatnts.ACTION_ENTITY_TYPE.USER
                        )
                          (s = new c.User(
                            i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                              u.ActionConstatnts.ACTION_KEYS.ENTITY
                            ]
                          )),
                            Object.assign(
                              s,
                              i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                                u.ActionConstatnts.ACTION_KEYS.ENTITY
                              ]
                            ),
                            (t.actionOn = s);
                        else if (
                          i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                            u.ActionConstatnts.ACTION_KEYS.ENTITY_TYPE
                          ] == u.ActionConstatnts.ACTION_ENTITY_TYPE.GROUP
                        )
                          (l = new a.Group("", "", "")),
                            Object.assign(
                              l,
                              i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                                u.ActionConstatnts.ACTION_KEYS.ENTITY
                              ]
                            ),
                            (t.actionOn = l);
                        else if (
                          i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                            u.ActionConstatnts.ACTION_KEYS.ENTITY_TYPE
                          ] == u.ActionConstatnts.ACTION_ENTITY_TYPE.MESSAGE
                        ) {
                          var p = d.MessageController.trasformJSONMessge(
                            i[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                              u.ActionConstatnts.ACTION_KEYS.ENTITY
                            ]
                          );
                          t.actionOn = p;
                        }
                      return t.setMessage(t.getActionMessage(t)), t;
                    }),
                    (t.prototype.getOldScope = function () {
                      return this.oldScope;
                    }),
                    (t.prototype.getNewScope = function () {
                      return this.newScope;
                    }),
                    (t.prototype.setNewScope = function (e) {
                      this.newScope = e;
                    }),
                    (t.prototype.setOldScope = function (e) {
                      this.oldScope = e;
                    }),
                    (t.prototype.setRawData = function (e) {
                      this.rawData = e;
                    }),
                    (t.prototype.getRawData = function () {
                      return this.rawData;
                    }),
                    (t.prototype.setMessage = function (e) {
                      this.message = e;
                    }),
                    (t.prototype.getMessage = function () {
                      return this.message;
                    }),
                    (t.prototype.setAction = function (e) {
                      this.action = e;
                    }),
                    (t.prototype.getAction = function () {
                      return this.action;
                    }),
                    (t.prototype.getSender = function () {
                      try {
                        return this.getSenderFromData();
                      } catch (e) {
                        return this.sender;
                      }
                    }),
                    (t.prototype.setActionBy = function (e) {
                      this.actionBy = e;
                    }),
                    (t.prototype.getActionBy = function () {
                      return this.actionBy;
                    }),
                    (t.prototype.setActionOn = function (e) {
                      this.actionOn = e;
                    }),
                    (t.prototype.getActionOn = function () {
                      return this.actionOn;
                    }),
                    (t.prototype.setActionFor = function (e) {
                      this.actionFor = e;
                    }),
                    (t.prototype.getActionFor = function () {
                      return this.actionFor;
                    }),
                    (t.prototype.getMetadata = function () {
                      return (
                        this.data.metadata &&
                          (this.metadata = this.data.metadata),
                        this.metadata
                      );
                    }),
                    (t.prototype.setMetadata = function (e) {
                      (this.metadata = e),
                        (this.data = i({}, this.data, { metadata: e }));
                    }),
                    (t.prototype.getActionMessage = function (e) {
                      var t = "";
                      switch (e.getType()) {
                        case u.ActionConstatnts.ACTION_KEYS.ACTION_TYPE_USER:
                        case u.ActionConstatnts.ACTION_KEYS.ACTION_TYPE_GROUP:
                          switch (e.getAction()) {
                            case u.ActionConstatnts.ACTION_KEYS.ACTION_CREATED:
                            case u.ActionConstatnts.ACTION_KEYS.ACTION_UPDATED:
                            case u.ActionConstatnts.ACTION_KEYS.ACTION_DELETED:
                          }
                          break;
                        case u.ActionConstatnts.ACTION_KEYS
                          .ACTION_TYPE_GROUP_MEMBER:
                          switch (e.getAction()) {
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MEMBER_JOINED:
                              var n = e.getActionBy();
                              t = l.format(
                                u.ActionConstatnts.ActionMessages
                                  .ACTION_GROUP_JOINED_MESSAGE,
                                n.getName()
                              );
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MEMBER_LEFT:
                              (n = e.getActionBy()),
                                (t = l.format(
                                  u.ActionConstatnts.ActionMessages
                                    .ACTION_GROUP_LEFT_MESSAGE,
                                  n.getName()
                                ));
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MEMBER_KICKED:
                              n = e.getActionBy();
                              var r = e.getActionOn();
                              t = l.format(
                                u.ActionConstatnts.ActionMessages
                                  .ACTION_MEMBER_KICKED_MESSAGE,
                                n.getName(),
                                r.getName()
                              );
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MEMBER_BANNED:
                              (n = e.getActionBy()),
                                (r = e.getActionOn()),
                                (t = l.format(
                                  u.ActionConstatnts.ActionMessages
                                    .ACTION_MEMBER_BANNED_MESSAGE,
                                  n.getName(),
                                  r.getName()
                                ));
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MEMBER_UNBANNED:
                              (n = e.getActionBy()),
                                (r = e.getActionOn()),
                                (t = l.format(
                                  u.ActionConstatnts.ActionMessages
                                    .ACTION_MEMBER_UNBANNED_MESSAGE,
                                  n.getName(),
                                  r.getName()
                                ));
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .ACTION_SCOPE_CHANGED:
                              (n = e.getActionBy()), (r = e.getActionOn());
                              var o = e.getNewScope();
                              t = l.format(
                                u.ActionConstatnts.ActionMessages
                                  .ACTION_MEMBER_SCOPE_CHANGED,
                                n.getName(),
                                r.getName(),
                                o
                              );
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MEMBER_ADDED:
                              (n = e.getActionBy()),
                                (r = e.getActionOn()),
                                (t = l.format(
                                  u.ActionConstatnts.ActionMessages
                                    .ACTION_MEMBER_ADDED_TO_GROUP,
                                  n.getName(),
                                  r.getName()
                                ));
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MESSAGE_EDITED:
                              t = l.format(
                                u.ActionConstatnts.ActionMessages
                                  .ACTION_MESSAGE_EDITED_MESSAGE,
                                ""
                              );
                              break;
                            case u.ActionConstatnts.ACTION_KEYS
                              .TYPE_MESSAGE_DELETED:
                              t = l.format(
                                u.ActionConstatnts.ActionMessages
                                  .ACTION_MESSAGE_DELETED_MESSAGE,
                                ""
                              );
                          }
                      }
                      return t;
                    }),
                    (t.prototype.getSenderFromData = function () {
                      var e =
                        this.data[u.ActionConstatnts.ACTION_KEYS.ENTITIES];
                      if (
                        e[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY] &&
                        e[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                          u.ActionConstatnts.ACTION_KEYS.ENTITY_TYPE
                        ] == u.ActionConstatnts.ACTION_ENTITY_TYPE.USER
                      ) {
                        var t = new c.User(
                          e[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                            u.ActionConstatnts.ACTION_KEYS.ENTITY
                          ]
                        );
                        return (
                          Object.assign(
                            t,
                            e[u.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                              u.ActionConstatnts.ACTION_KEYS.ENTITY
                            ]
                          ),
                          t
                        );
                      }
                    }),
                    (t.TYPE = u.MessageConstatnts.TYPE),
                    (t.RECEIVER_TYPE = u.MessageConstatnts.RECEIVER_TYPE),
                    (t.CATEGORY = u.MessageConstatnts.CATEGORY),
                    (t.ACTION_TYPE = u.ActionConstatnts.ACTION_TYPE),
                    t
                  );
                })(s.BaseMessage);
              t.Action = p;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  }),
                i =
                  (this && this.__assign) ||
                  function () {
                    return (i =
                      Object.assign ||
                      function (e) {
                        for (var t, n = 1, r = arguments.length; n < r; n++)
                          for (var o in (t = arguments[n]))
                            Object.prototype.hasOwnProperty.call(t, o) &&
                              (e[o] = t[o]);
                        return e;
                      }).apply(this, arguments);
                  };
              t.__esModule = !0;
              var s = n(13),
                a = n(6),
                c = n(0),
                u = n(1),
                l = n(4),
                d = (function (e) {
                  function t(t, n, r, o) {
                    return u.isFalsy(o)
                      ? e.call(this, t, n, r, c.MessageCategory.CALL) || this
                      : e.call(this, t, n, r, o) || this;
                  }
                  return (
                    o(t, e),
                    (t.prototype.getCallInitiator = function () {
                      return this.getCallInitiatedByFromData();
                    }),
                    (t.prototype.getCallReceiver = function () {
                      return this.getCallReceivedByFromData();
                    }),
                    (t.prototype.setCallInitiator = function (e) {
                      this.callInitiator = e;
                    }),
                    (t.prototype.setCallReceiver = function (e) {
                      this.callReceiver = e;
                    }),
                    (t.prototype.getData = function () {
                      return this.data;
                    }),
                    (t.prototype.setData = function (e) {
                      this.data = e;
                    }),
                    (t.prototype.getSessionId = function () {
                      return this.sessionId;
                    }),
                    (t.prototype.setSessionId = function (e) {
                      this.sessionId = e;
                    }),
                    (t.prototype.getMetadata = function () {
                      return (
                        this.data.metadata &&
                          (this.metadata = this.data.metadata),
                        this.metadata
                      );
                    }),
                    (t.prototype.getSender = function () {
                      try {
                        return this.getSenderFromData();
                      } catch (e) {
                        return this.sender;
                      }
                    }),
                    (t.prototype.setMetadata = function (e) {
                      (this.metadata = e),
                        (this.data = i({}, this.data, { metadata: e }));
                    }),
                    (t.prototype.getAction = function () {
                      return this.action;
                    }),
                    (t.prototype.setAction = function (e) {
                      this.action = e;
                    }),
                    (t.prototype.getInitiatedAt = function () {
                      return this.initiatedAt;
                    }),
                    (t.prototype.setInitiatedAt = function (e) {
                      this.initiatedAt = e;
                    }),
                    (t.prototype.getJoinedAt = function () {
                      return this.joinedAt;
                    }),
                    (t.prototype.setJoinedAt = function (e) {
                      this.joinedAt = e;
                    }),
                    (t.prototype.setRawData = function (e) {
                      this.rawData = e;
                    }),
                    (t.prototype.getRawData = function () {
                      return this.rawData;
                    }),
                    (t.prototype.setSender = function (e) {
                      this.sender = e;
                    }),
                    (t.prototype.setReceiver = function (e) {
                      this.receiver = e;
                    }),
                    (t.callFromJSON = function (e) {
                      try {
                        var t = new this(
                            e[c.MessageConstatnts.KEYS.RECEIVER],
                            e[c.MessageConstatnts.KEYS.TYPE],
                            e[c.MessageConstatnts.KEYS.RECEIVER_TYPE],
                            c.MessageCategory.CALL
                          ),
                          n = e[c.MessageConstatnts.KEYS.DATA];
                        t.setAction(n[c.MessageConstatnts.KEYS.ACTION]),
                          n[c.MessageConstatnts.KEYS.METADATA] &&
                            t.setMetadata(n[c.MessageConstatnts.KEYS.METADATA]);
                        var r = n[c.ActionConstatnts.ACTION_KEYS.ENTITIES];
                        if (
                          (r[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY] &&
                            r[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY],
                          r[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON])
                        ) {
                          var o =
                            r[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON];
                          if (o[c.CallConstants.CALL_KEYS.CALL_ENTITY]) {
                            var i = o[c.CallConstants.CALL_KEYS.CALL_ENTITY];
                            if (
                              (i[c.CallConstants.CALL_KEYS.CALL_SESSION_ID] &&
                                (t.sessionId =
                                  i[c.CallConstants.CALL_KEYS.CALL_SESSION_ID]),
                              i[c.CallConstants.CALL_KEYS.CALL_STATUS] &&
                                (t.status =
                                  i[c.CallConstants.CALL_KEYS.CALL_STATUS]),
                              i[c.CallConstants.CALL_KEYS.CALL_DATA])
                            ) {
                              var s = i[c.CallConstants.CALL_KEYS.CALL_DATA];
                              s[c.CallConstants.CALL_KEYS.CALL_METADATA] &&
                                (t.metadata =
                                  s[c.CallConstants.CALL_KEYS.CALL_METADATA]),
                                s[
                                  c.ResponseConstants.RESPONSE_KEYS.KEY_ENTITIES
                                ] &&
                                  s[
                                    c.ResponseConstants.RESPONSE_KEYS
                                      .KEY_ENTITIES
                                  ];
                            }
                            i[c.CallConstants.CALL_KEYS.CALL_INITIATED_AT] &&
                              (t.initiatedAt =
                                i[c.CallConstants.CALL_KEYS.CALL_INITIATED_AT]),
                              i[c.CallConstants.CALL_KEYS.CALL_JOINED_AT] &&
                                (t.joinedAt =
                                  i[c.CallConstants.CALL_KEYS.CALL_JOINED_AT]),
                              i[c.CallConstants.CALL_KEYS.CALL_LEFT_AT] &&
                                (t.joinedAt =
                                  i[c.CallConstants.CALL_KEYS.CALL_LEFT_AT]);
                          }
                        }
                        return t;
                      } catch (e) {
                        u.Logger.error("CallModel: callFromJSON", e);
                      }
                    }),
                    (t.prototype.getSenderFromData = function () {
                      try {
                        var e = this.getData();
                        if (
                          (e = e[c.ActionConstatnts.ACTION_KEYS.ENTITIES])[
                            c.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY
                          ][c.CallConstants.CALL_KEYS.CALL_ENTITY]
                        )
                          return new l.User(
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_BY][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ]
                          );
                      } catch (e) {
                        u.Logger.error("CallModel:getSenderFromData", e);
                      }
                    }),
                    (t.prototype.getCallInitiatedByFromData = function () {
                      try {
                        var e = this.getData();
                        if (
                          (e = e[c.ActionConstatnts.ACTION_KEYS.ENTITIES])[
                            c.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON
                          ][c.CallConstants.CALL_KEYS.CALL_ENTITY][
                            c.CallConstants.CALL_KEYS.CALL_DATA
                          ][c.ActionConstatnts.ACTION_KEYS.ENTITIES][
                            c.CallConstants.CALL_KEYS.CALL_SENDER
                          ]
                        )
                          return new l.User(
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_ON][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ][c.CallConstants.CALL_KEYS.CALL_DATA][
                              c.ActionConstatnts.ACTION_KEYS.ENTITIES
                            ][c.CallConstants.CALL_KEYS.CALL_SENDER][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ]
                          );
                      } catch (e) {
                        u.Logger.error(
                          "CallModel:getCallInitiatedByFromData",
                          e
                        );
                      }
                    }),
                    (t.prototype.getCallReceivedByFromData = function () {
                      try {
                        var e = this.getData();
                        if (
                          (e = e[c.ActionConstatnts.ACTION_KEYS.ENTITIES])[
                            c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR
                          ][c.CallConstants.CALL_KEYS.CALL_ENTITY]
                        ) {
                          if (
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY_TYPE
                            ] == c.CallConstants.CALL_KEYS.CALL_ENTITY_USER
                          )
                            return new l.User(
                              e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                                c.CallConstants.CALL_KEYS.CALL_ENTITY
                              ]
                            );
                          var t = new a.Group(
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ][c.GroupConstants.KEYS.GUID],
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ][c.GroupConstants.KEYS.NAME],
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ][c.GroupConstants.KEYS.TYPE]
                          );
                          return Object.assign(
                            t,
                            e[c.ActionConstatnts.ACTION_SUBJECTS.ACTION_FOR][
                              c.CallConstants.CALL_KEYS.CALL_ENTITY
                            ]
                          );
                        }
                      } catch (e) {
                        u.Logger.error(
                          "CallModel:getCallReceivedByFromData",
                          e
                        );
                      }
                    }),
                    (t.TYPE = c.MessageConstatnts.TYPE),
                    (t.RECEIVER_TYPE = c.MessageConstatnts.RECEIVER_TYPE),
                    (t.CATEGORY = c.MessageConstatnts.CATEGORY),
                    (t.ACTION_TYPE = c.ActionConstatnts.ACTION_TYPE),
                    t
                  );
                })(s.BaseMessage);
              t.Call = d;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = n(0),
                i = n(11),
                s = n(3),
                a = (function () {
                  function e(e) {
                    (this.store = o.constants.DEFAULT_STORE),
                      r.isFalsy(e) || (this.store = e),
                      (this.settingsStore = i.createInstance({
                        name: r.format(
                          o.LOCAL_STORE.STORE_STRING,
                          s.CometChat.getAppId(),
                          o.LOCAL_STORE.MESSAGE_LISTENERS_LIST
                        ),
                      })),
                      this.settingsStore.setDriver([
                        i.LOCALSTORAGE,
                        i.INDEXEDDB,
                        i.WEBSQL,
                      ]);
                  }
                  return (
                    (e.getInstance = function () {
                      return (
                        null == e.settingsStore && (e.settingsStore = new e()),
                        e.settingsStore
                      );
                    }),
                    (e.prototype.set = function (e, t) {
                      return this.settingsStore.setItem(e, t);
                    }),
                    (e.prototype.remove = function (e) {
                      this.settingsStore.removeItem(e);
                    }),
                    (e.prototype.get = function (e) {
                      return this.settingsStore.getItem(e);
                    }),
                    (e.prototype.clearStore = function () {
                      return this.settingsStore.clear();
                    }),
                    (e.prototype.clear = function (e) {}),
                    (e.prototype.selectStore = function (e) {
                      this.store = e;
                    }),
                    (e.settingsStore = null),
                    e
                  );
                })();
              t.MessageListnerMaping = a;
            },
            function (e, t, n) {
              "use strict";
              var r =
                  (this && this.__awaiter) ||
                  function (e, t, n, r) {
                    return new (n || (n = Promise))(function (o, i) {
                      function s(e) {
                        try {
                          c(r.next(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function a(e) {
                        try {
                          c(r.throw(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function c(e) {
                        e.done
                          ? o(e.value)
                          : new n(function (t) {
                              t(e.value);
                            }).then(s, a);
                      }
                      c((r = r.apply(e, t || [])).next());
                    });
                  },
                o =
                  (this && this.__generator) ||
                  function (e, t) {
                    var n,
                      r,
                      o,
                      i,
                      s = {
                        label: 0,
                        sent: function () {
                          if (1 & o[0]) throw o[1];
                          return o[1];
                        },
                        trys: [],
                        ops: [],
                      };
                    return (
                      (i = { next: a(0), throw: a(1), return: a(2) }),
                      "function" == typeof Symbol &&
                        (i[Symbol.iterator] = function () {
                          return this;
                        }),
                      i
                    );
                    function a(i) {
                      return function (a) {
                        return (function (i) {
                          if (n)
                            throw new TypeError(
                              "Generator is already executing."
                            );
                          for (; s; )
                            try {
                              if (
                                ((n = 1),
                                r &&
                                  (o =
                                    2 & i[0]
                                      ? r.return
                                      : i[0]
                                      ? r.throw ||
                                        ((o = r.return) && o.call(r), 0)
                                      : r.next) &&
                                  !(o = o.call(r, i[1])).done)
                              )
                                return o;
                              switch (
                                ((r = 0), o && (i = [2 & i[0], o.value]), i[0])
                              ) {
                                case 0:
                                case 1:
                                  o = i;
                                  break;
                                case 4:
                                  return s.label++, { value: i[1], done: !1 };
                                case 5:
                                  s.label++, (r = i[1]), (i = [0]);
                                  continue;
                                case 7:
                                  (i = s.ops.pop()), s.trys.pop();
                                  continue;
                                default:
                                  if (
                                    !(o =
                                      0 < (o = s.trys).length &&
                                      o[o.length - 1]) &&
                                    (6 === i[0] || 2 === i[0])
                                  ) {
                                    s = 0;
                                    continue;
                                  }
                                  if (
                                    3 === i[0] &&
                                    (!o || (i[1] > o[0] && i[1] < o[3]))
                                  ) {
                                    s.label = i[1];
                                    break;
                                  }
                                  if (6 === i[0] && s.label < o[1]) {
                                    (s.label = o[1]), (o = i);
                                    break;
                                  }
                                  if (o && s.label < o[2]) {
                                    (s.label = o[2]), s.ops.push(i);
                                    break;
                                  }
                                  o[2] && s.ops.pop(), s.trys.pop();
                                  continue;
                              }
                              i = t.call(e, s);
                            } catch (e) {
                              (i = [6, e]), (r = 0);
                            } finally {
                              n = o = 0;
                            }
                          if (5 & i[0]) throw i[1];
                          return { value: i[0] ? i[1] : void 0, done: !0 };
                        })([i, a]);
                      };
                    }
                  };
              t.__esModule = !0;
              var i = n(37),
                s = n(1),
                a = n(7),
                c = n(0),
                u = (function () {
                  function e() {}
                  return (
                    (e.executeInSync = function (e, t) {
                      var n = this;
                      return new Promise(function (i, s) {
                        return r(n, void 0, void 0, function () {
                          var n, r;
                          return o(this, function (o) {
                            switch (o.label) {
                              case 0:
                                return (
                                  (n = e),
                                  t
                                    ? ((r = setTimeout(function () {
                                        i(e);
                                      }, this.SMALL_TIMEOUT)),
                                      [4, t(e)])
                                    : [3, 2]
                                );
                              case 1:
                                (n = o.sent()), (o.label = 2);
                              case 2:
                                return clearTimeout(r), i(n), [2];
                            }
                          });
                        });
                      });
                    }),
                    (e.hookBeforeMessageSent = function (e) {
                      return r(this, void 0, void 0, function () {
                        var t, n;
                        return o(this, function (r) {
                          switch (r.label) {
                            case 0:
                              (t = 0), (r.label = 1);
                            case 1:
                              return t <
                                i.ExtensionManager.cometChatExtensionList.length
                                ? [4, this.getExtensionList()]
                                : [3, 7];
                            case 2:
                              if (
                                !r.sent()[
                                  i.ExtensionManager.cometChatExtensionList[
                                    t
                                  ].getExtensionId()
                                ]
                              )
                                return [3, 6];
                              if (
                                !i.ExtensionManager.cometChatExtensionList[t]
                                  .beforeMessageSent
                              )
                                return [3, 6];
                              r.label = 3;
                            case 3:
                              return (
                                r.trys.push([3, 5, , 6]),
                                [
                                  4,
                                  this.executeInSync(
                                    e,
                                    i.ExtensionManager.cometChatExtensionList[t]
                                      .beforeMessageSent
                                  ),
                                ]
                              );
                            case 4:
                              return (e = r.sent()), [3, 6];
                            case 5:
                              return (
                                (n = r.sent()),
                                s.Logger.error("Logging error", n),
                                [3, 6]
                              );
                            case 6:
                              return t++, [3, 1];
                            case 7:
                              return [2, e];
                          }
                        });
                      });
                    }),
                    (e.hookAfterMessageSent = function (e) {
                      return r(this, void 0, void 0, function () {
                        var t, n;
                        return o(this, function (r) {
                          switch (r.label) {
                            case 0:
                              (t = 0), (r.label = 1);
                            case 1:
                              return t <
                                i.ExtensionManager.cometChatExtensionList.length
                                ? [4, this.getExtensionList()]
                                : [3, 7];
                            case 2:
                              if (
                                !r.sent()[
                                  i.ExtensionManager.cometChatExtensionList[
                                    t
                                  ].getExtensionId()
                                ]
                              )
                                return [3, 6];
                              if (
                                !i.ExtensionManager.cometChatExtensionList[t]
                                  .afterMessageSent
                              )
                                return [3, 6];
                              r.label = 3;
                            case 3:
                              return (
                                r.trys.push([3, 5, , 6]),
                                [
                                  4,
                                  this.executeInSync(
                                    e,
                                    i.ExtensionManager.cometChatExtensionList[t]
                                      .afterMessageSent
                                  ),
                                ]
                              );
                            case 4:
                              return (e = r.sent()), [3, 6];
                            case 5:
                              return (
                                (n = r.sent()),
                                s.Logger.error("Logging error", n),
                                [3, 6]
                              );
                            case 6:
                              return t++, [3, 1];
                            case 7:
                              return [2, e];
                          }
                        });
                      });
                    }),
                    (e.hookOnInit = function (e, t) {
                      return r(this, void 0, void 0, function () {
                        var n = this;
                        return o(this, function (s) {
                          return (
                            i.ExtensionManager.cometChatExtensionList.map(
                              function (i) {
                                return r(n, void 0, void 0, function () {
                                  return o(this, function (n) {
                                    switch (n.label) {
                                      case 0:
                                        return [4, this.getExtensionList()];
                                      case 1:
                                        return n.sent()[i.getExtensionId()]
                                          ? e && t && i.onInit
                                            ? [4, i.onInit(e, t)]
                                            : [3, 3]
                                          : [3, 5];
                                      case 2:
                                        return n.sent(), [3, 5];
                                      case 3:
                                        return e && i.onInit
                                          ? [4, i.onInit(e)]
                                          : [3, 5];
                                      case 4:
                                        n.sent(), (n.label = 5);
                                      case 5:
                                        return [2];
                                    }
                                  });
                                });
                              }
                            ),
                            [2]
                          );
                        });
                      });
                    }),
                    (e.hookOnMessageReceived = function (e) {
                      return r(this, void 0, void 0, function () {
                        var t, n, r;
                        return o(this, function (o) {
                          switch (o.label) {
                            case 0:
                              (t = a.MessageController.trasformJSONMessge(e)),
                                (n = 0),
                                (o.label = 1);
                            case 1:
                              return n <
                                i.ExtensionManager.cometChatExtensionList.length
                                ? [4, this.getExtensionList()]
                                : [3, 7];
                            case 2:
                              if (
                                !o.sent()[
                                  i.ExtensionManager.cometChatExtensionList[
                                    n
                                  ].getExtensionId()
                                ]
                              )
                                return [3, 6];
                              if (
                                !i.ExtensionManager.cometChatExtensionList[n]
                                  .onMessageReceived
                              )
                                return [3, 6];
                              o.label = 3;
                            case 3:
                              return (
                                o.trys.push([3, 5, , 6]),
                                [
                                  4,
                                  this.executeInSync(
                                    t,
                                    i.ExtensionManager.cometChatExtensionList[n]
                                      .onMessageReceived
                                  ),
                                ]
                              );
                            case 4:
                              return (e = o.sent()), [3, 6];
                            case 5:
                              return (
                                (r = o.sent()),
                                s.Logger.error("Logging error", r),
                                [3, 6]
                              );
                            case 6:
                              return n++, [3, 1];
                            case 7:
                              return [2, e];
                          }
                        });
                      });
                    }),
                    (e.hookOnLogin = function (e) {
                      return r(this, void 0, void 0, function () {
                        var t = this;
                        return o(this, function (n) {
                          return (
                            i.ExtensionManager.cometChatExtensionList.map(
                              function (n) {
                                return r(t, void 0, void 0, function () {
                                  return o(this, function (t) {
                                    switch (t.label) {
                                      case 0:
                                        return [4, this.getExtensionList()];
                                      case 1:
                                        return t.sent()[n.getExtensionId()] &&
                                          e &&
                                          n.onLogin
                                          ? [4, n.onLogin(e)]
                                          : [3, 3];
                                      case 2:
                                        t.sent(), (t.label = 3);
                                      case 3:
                                        return [2];
                                    }
                                  });
                                });
                              }
                            ),
                            [2]
                          );
                        });
                      });
                    }),
                    (e.executeInSyncBulk = function (e, t) {
                      var n = this;
                      return new Promise(function (i, s) {
                        return r(n, void 0, void 0, function () {
                          var n, r;
                          return o(this, function (o) {
                            switch (o.label) {
                              case 0:
                                return (
                                  (n = e),
                                  t
                                    ? ((r = setTimeout(function () {
                                        i(e);
                                      }, this.BIG_TIMEOUT)),
                                      [4, t(e)])
                                    : [3, 2]
                                );
                              case 1:
                                (n = o.sent()), (o.label = 2);
                              case 2:
                                return clearTimeout(r), i(n), [2];
                            }
                          });
                        });
                      });
                    }),
                    (e.hookOnMessageListIsFetched = function (e) {
                      return r(this, void 0, void 0, function () {
                        var t, n;
                        return o(this, function (r) {
                          switch (r.label) {
                            case 0:
                              (t = 0), (r.label = 1);
                            case 1:
                              return t <
                                i.ExtensionManager.cometChatExtensionList.length
                                ? [4, this.getExtensionList()]
                                : [3, 7];
                            case 2:
                              if (
                                !r.sent()[
                                  i.ExtensionManager.cometChatExtensionList[
                                    t
                                  ].getExtensionId()
                                ]
                              )
                                return [3, 6];
                              if (
                                !i.ExtensionManager.cometChatExtensionList[t]
                                  .onMessageListFetched
                              )
                                return [3, 6];
                              r.label = 3;
                            case 3:
                              return (
                                r.trys.push([3, 5, , 6]),
                                [
                                  4,
                                  this.executeInSyncBulk(
                                    e,
                                    i.ExtensionManager.cometChatExtensionList[t]
                                      .onMessageListFetched
                                  ),
                                ]
                              );
                            case 4:
                              return (e = r.sent()), [3, 6];
                            case 5:
                              return (
                                (n = r.sent()),
                                s.Logger.error("Logging error", n),
                                [3, 6]
                              );
                            case 6:
                              return t++, [3, 1];
                            case 7:
                              return [2, e];
                          }
                        });
                      });
                    }),
                    (e.getExtensionList = function () {
                      return r(this, void 0, void 0, function () {
                        var e = this;
                        return o(this, function (t) {
                          switch (t.label) {
                            case 0:
                              return s.isFalsy(this.extentionList)
                                ? [4, s.getAppSettings()]
                                : [3, 2];
                            case 1:
                              t
                                .sent()
                                [c.APP_SETTINGS.KEYS.EXTENSION_LIST].map(
                                  function (t) {
                                    e.extentionList[t.id] = t;
                                  }
                                ),
                                (t.label = 2);
                            case 2:
                              return [2, this.extentionList];
                          }
                        });
                      });
                    }),
                    (e.SMALL_TIMEOUT = 5e3),
                    (e.BIG_TIMEOUT = 2e4),
                    (e.extentionList = {}),
                    e
                  );
                })();
              t.ExtensionController = u;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(41),
                o = n(1),
                i = (function () {
                  function e() {}
                  return (
                    (e.trasformJSONConversation = function (e, t, n, i, s) {
                      var a;
                      try {
                        a = new r.Conversation(e, t, n, i, s);
                      } catch (e) {
                        o.Logger.error(
                          "ConversationController:transformJSONConversation",
                          e
                        );
                      }
                      return a;
                    }),
                    e
                  );
                })();
              t.ConversationController = i;
            },
            function (e, t) {
              var n;
              n = (function () {
                return this;
              })();
              try {
                n = n || new Function("return this")();
              } catch (e) {
                "object" == typeof window && (n = window);
              }
              e.exports = n;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = n(0),
                i = n(9),
                s = n(3),
                a = n(2),
                c = (function () {
                  function e() {
                    (this.baseUrl = "https://apiclient-%s.cometchat.io/"),
                      (this.apiVersion = "v2.0"),
                      (this.apiBaseUrl = this.baseUrl + this.apiVersion + "/"),
                      (this.adminApiUrl = "https://api-%s.cometchat.io/"),
                      (this.adminApiVersion = "v2.0"),
                      (this.extensionApi = "https://%s-%s.cometchat.io/%s"),
                      (this.prosodyApi = "https://%s.%s/%s"),
                      (this.uriEndpoints = {
                        authToken: {
                          endpoint: "users/{{uid}}/auth_tokens",
                          method: "POST",
                          data: { uid: "string|max:100" },
                          isAdminApi: !0,
                        },
                        appSettings: { endpoint: "settings", method: "GET" },
                        login: {
                          endpoint: "admin/users/auth",
                          method: "POST",
                          data: { uid: "string|max:100" },
                        },
                        logout: {
                          endpoint: "admin/users/auth/{{authToken}}",
                          method: "DELETE",
                        },
                        getMyDetails: { endpoint: "me", method: "GET" },
                        updateMyDetails: { endpoint: "me", method: "PUT" },
                        getJWT: { endpoint: "me/jwt", method: "POST" },
                        users: { endpoint: "users", method: "GET" },
                        user: { endpoint: "users/{{uid}}", method: "GET" },
                        blockUsers: {
                          endpoint: "blockedusers",
                          method: "POST",
                        },
                        blockedUsersList: {
                          endpoint: "blockedusers",
                          method: "GET",
                        },
                        unblockUsers: {
                          endpoint: "blockedusers",
                          method: "DELETE",
                        },
                        userLogout: { endpoint: "me", method: "DELETE" },
                        createUser: {
                          endpoint: "users",
                          method: "POST",
                          isAdminApi: !0,
                        },
                        updateUser: {
                          endpoint: "users/{{uid}}",
                          method: "PUT",
                          isAdminApi: !0,
                        },
                        sendFriendRequests: {
                          endpoint: "user/friends",
                          method: "POST",
                          data: { uids: "array<string|max:100>" },
                        },
                        getFriends: { endpoint: "user/friends", method: "GET" },
                        unfriend: {
                          endpoint: "user/friends/{{uid}}/{{gid}}",
                          method: "DELETE",
                          data: { uids: "array<string|max:100>" },
                        },
                        acceptFriendRequest: {
                          endpoint: "user/friends/{{uid}}/accept",
                          method: "PUT",
                          data: { uids: "array<string|max:100>" },
                        },
                        rejectFriendRequest: {
                          endpoint: "user/friends/{{uid}}/reject",
                          method: "DELETE",
                          data: { uids: "array<string|max:100>" },
                        },
                        createGroup: {
                          endpoint: "groups",
                          method: "POST",
                          data: {
                            guid: "required|string|max:100",
                            name: "required|string|max:100",
                            type: "enum|public,protected,password",
                            password: "filled|string|max:100",
                          },
                        },
                        getGroups: { endpoint: "groups", method: "GET" },
                        getGroup: {
                          endpoint: "groups/{{guid}}",
                          method: "GET",
                        },
                        updateGroup: {
                          endpoint: "groups/{{guid}}",
                          method: "PUT",
                        },
                        deleteGroup: {
                          endpoint: "groups/{{guid}}",
                          method: "DELETE",
                        },
                        addGroupMembers: {
                          endpoint: "groups/{{guid}}/members",
                          method: "POST",
                          data: { uids: "array<string|max:100>" },
                        },
                        getGroupMembers: {
                          endpoint: "groups/{{guid}}/members",
                          method: "GET",
                        },
                        joinGroup: {
                          endpoint: "groups/{{guid}}/members",
                          method: "POST",
                        },
                        leaveGroup: {
                          endpoint: "groups/{{guid}}/members",
                          method: "DELETE",
                        },
                        kickGroupMembers: {
                          endpoint: "groups/{{guid}}/members/{{uid}}",
                          method: "DELETE",
                          data: { uids: "array<string|max:100>" },
                        },
                        changeScopeOfMember: {
                          endpoint: "groups/{{guid}}/members/{{uid}}",
                          method: "PUT",
                          data: { uids: "array<string|max:100>" },
                        },
                        banGroupMember: {
                          endpoint: "groups/{{guid}}/bannedusers/{{uid}}",
                          method: "POST",
                          data: { uids: "array<string|max:100>" },
                        },
                        unbanGroupMember: {
                          endpoint: "groups/{{guid}}/bannedusers/{{uid}}",
                          method: "DELETE",
                          data: { uids: "array<string|max:100>" },
                        },
                        addMemebersToGroup: {
                          endpoint: "groups/{{guid}}/members",
                          method: "PUT",
                        },
                        getBannedGroupMembers: {
                          endpoint: "groups/{{guid}}/bannedusers",
                          method: "GET",
                        },
                        promotemoteGroupMember: {
                          endpoint: "groups/{{guid}}/promote",
                          method: "PUT",
                          data: { uids: "array<string|max:100>" },
                        },
                        demoteGroupMember: {
                          endpoint: "groups/{{guid}}/demote",
                          method: "DELETE",
                          data: { uids: "array<string|max:100>" },
                        },
                        transferOwnership: {
                          endpoint: "groups/{{guid}}/owner",
                          method: "PATCH",
                        },
                        sendMessage: {
                          endpoint: "messages",
                          method: "POST",
                          data: {
                            sender: "array:string:max:100>",
                            isGroupMember: "filled|boolean|bail",
                            data: "required|json",
                          },
                        },
                        sendMessageInThread: {
                          endpoint: "messages/{{parentId}}/thread",
                          method: "POST",
                          data: {
                            sender: "array:string:max:100>",
                            isGroupMember: "filled|boolean|bail",
                            data: "required|json",
                          },
                        },
                        getMessages: { endpoint: "messages", method: "GET" },
                        getMessageDetails: {
                          endpoint: "messages/{{messageId}}",
                          method: "GET",
                        },
                        getUserMessages: {
                          endpoint: "users/{{listId}}/messages",
                          method: "GET",
                        },
                        getGroupMessages: {
                          endpoint: "groups/{{listId}}/messages",
                          method: "GET",
                        },
                        getThreadMessages: {
                          endpoint: "messages/{{listId}}/thread",
                          method: "GET",
                        },
                        getMessage: {
                          endpoint: "user/messages/{{muid}}",
                          method: "GET",
                        },
                        updateMessage: {
                          endpoint: "messages/{{messageId}}",
                          method: "PUT",
                        },
                        deleteMessage: {
                          endpoint: "messages/{{messageId}}",
                          method: "DELETE",
                        },
                        createCallSession: {
                          endpoint: "calls",
                          method: "POST",
                          data: {},
                        },
                        updateCallSession: {
                          endpoint: "calls/{{sessionid}}",
                          method: "put",
                          data: {},
                        },
                        getConversations: {
                          endpoint: "conversations",
                          method: "GET",
                        },
                        getUserConversation: {
                          endpoint: "users/{{uid}}/conversation",
                          method: "GET",
                        },
                        getGroupConversation: {
                          endpoint: "groups/{{guid}}/conversation",
                          method: "GET",
                        },
                        deleteUserConversation: {
                          endpoint: "users/{{uid}}/conversation",
                          method: "DELETE",
                        },
                        deleteGroupConversation: {
                          endpoint: "groups/{{guid}}/conversation",
                          method: "DELETE",
                        },
                      });
                  }
                  return (
                    (e.prototype.getEndpointData = function (t) {
                      return new Promise(function (n, c) {
                        try {
                          i.LocalStorage.getInstance()
                            .get(o.APP_SETTINGS.APP_SETTINGS)
                            .then(
                              function (i) {
                                if (r.isFalsy(i)) {
                                  var a = {};
                                  if (new e().uriEndpoints.hasOwnProperty(t))
                                    if (
                                      (a = new e().uriEndpoints[
                                        t
                                      ]).hasOwnProperty("isAdminApi")
                                    ) {
                                      var c =
                                        r.format(
                                          new e().adminApiUrl,
                                          s.CometChat.appSettings.getRegion()
                                        ) +
                                        new e().adminApiVersion +
                                        "/" +
                                        a.endpoint;
                                      a.endpoint = c;
                                    } else
                                      (c =
                                        r.format(
                                          new e().baseUrl,
                                          s.CometChat.appSettings.getRegion()
                                        ) +
                                        new e().apiVersion +
                                        "/" +
                                        a.endpoint),
                                        (a.endpoint = c);
                                  n(a);
                                } else
                                  (a = {}),
                                    new e().uriEndpoints.hasOwnProperty(t) &&
                                      ((a = new e().uriEndpoints[
                                        t
                                      ]).hasOwnProperty("isAdminApi")
                                        ? (a.endpoint =
                                            "https://" +
                                            i[
                                              o.APP_SETTINGS.KEYS.ADMIN_API_HOST
                                            ] +
                                            "/" +
                                            new e().adminApiVersion +
                                            "/" +
                                            a.endpoint)
                                        : ((c =
                                            "https://" +
                                            i[
                                              o.APP_SETTINGS.KEYS
                                                .CLIENT_API_HOST
                                            ] +
                                            "/" +
                                            new e().apiVersion +
                                            "/" +
                                            a.endpoint),
                                          (a.endpoint = c))),
                                    n(a);
                              },
                              function (o) {
                                var i;
                                new e().uriEndpoints.hasOwnProperty(t) &&
                                  ((i = new e().uriEndpoints[t]).hasOwnProperty(
                                    ["isAdminApi"]
                                  )
                                    ? (i.endpoint =
                                        r.format(
                                          new e().adminApiUrl,
                                          s.CometChat.appSettings.getRegion()
                                        ) +
                                        new e().adminApiVersion +
                                        "/" +
                                        i.endpoint)
                                    : (i.endpoint =
                                        r.format(
                                          new e().baseUrl,
                                          s.CometChat.appSettings.getRegion()
                                        ) +
                                        new e().apiVersion +
                                        "/" +
                                        i.endpoint)),
                                  n(i);
                              }
                            );
                        } catch (e) {
                          c(new a.CometChatException(e));
                        }
                      });
                    }),
                    e
                  );
                })();
              t.EndpointFactory = c;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(29),
                o = n(2);
              t.getEndPoint = function (e, t) {
                void 0 === e && (e = ""), void 0 === t && (t = {});
                var n = new r.EndpointFactory();
                return new Promise(function (r, i) {
                  try {
                    n.getEndpointData(e).then(function (e) {
                      var n = e;
                      if (n) {
                        for (var o in t)
                          n.endpoint = n.endpoint.replace(
                            "{{" + o + "}}",
                            t[o]
                          );
                        r(n);
                      } else i({ error: "Unknown endPoint name." });
                    });
                  } catch (e) {
                    i(new o.CometChatException(e));
                  }
                });
              };
            },
            function (e, t, n) {
              "use strict";
              var r =
                  (this && this.__awaiter) ||
                  function (e, t, n, r) {
                    return new (n || (n = Promise))(function (o, i) {
                      function s(e) {
                        try {
                          c(r.next(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function a(e) {
                        try {
                          c(r.throw(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function c(e) {
                        e.done
                          ? o(e.value)
                          : new n(function (t) {
                              t(e.value);
                            }).then(s, a);
                      }
                      c((r = r.apply(e, t || [])).next());
                    });
                  },
                o =
                  (this && this.__generator) ||
                  function (e, t) {
                    var n,
                      r,
                      o,
                      i,
                      s = {
                        label: 0,
                        sent: function () {
                          if (1 & o[0]) throw o[1];
                          return o[1];
                        },
                        trys: [],
                        ops: [],
                      };
                    return (
                      (i = { next: a(0), throw: a(1), return: a(2) }),
                      "function" == typeof Symbol &&
                        (i[Symbol.iterator] = function () {
                          return this;
                        }),
                      i
                    );
                    function a(i) {
                      return function (a) {
                        return (function (i) {
                          if (n)
                            throw new TypeError(
                              "Generator is already executing."
                            );
                          for (; s; )
                            try {
                              if (
                                ((n = 1),
                                r &&
                                  (o =
                                    2 & i[0]
                                      ? r.return
                                      : i[0]
                                      ? r.throw ||
                                        ((o = r.return) && o.call(r), 0)
                                      : r.next) &&
                                  !(o = o.call(r, i[1])).done)
                              )
                                return o;
                              switch (
                                ((r = 0), o && (i = [2 & i[0], o.value]), i[0])
                              ) {
                                case 0:
                                case 1:
                                  o = i;
                                  break;
                                case 4:
                                  return s.label++, { value: i[1], done: !1 };
                                case 5:
                                  s.label++, (r = i[1]), (i = [0]);
                                  continue;
                                case 7:
                                  (i = s.ops.pop()), s.trys.pop();
                                  continue;
                                default:
                                  if (
                                    !(o =
                                      0 < (o = s.trys).length &&
                                      o[o.length - 1]) &&
                                    (6 === i[0] || 2 === i[0])
                                  ) {
                                    s = 0;
                                    continue;
                                  }
                                  if (
                                    3 === i[0] &&
                                    (!o || (i[1] > o[0] && i[1] < o[3]))
                                  ) {
                                    s.label = i[1];
                                    break;
                                  }
                                  if (6 === i[0] && s.label < o[1]) {
                                    (s.label = o[1]), (o = i);
                                    break;
                                  }
                                  if (o && s.label < o[2]) {
                                    (s.label = o[2]), s.ops.push(i);
                                    break;
                                  }
                                  o[2] && s.ops.pop(), s.trys.pop();
                                  continue;
                              }
                              i = t.call(e, s);
                            } catch (e) {
                              (i = [6, e]), (r = 0);
                            } finally {
                              n = o = 0;
                            }
                          if (5 & i[0]) throw i[1];
                          return { value: i[0] ? i[1] : void 0, done: !0 };
                        })([i, a]);
                      };
                    }
                  };
              t.__esModule = !0;
              var i = n(15),
                s = n(10),
                a = n(0),
                c = n(1),
                u = n(3),
                l = n(4);
              (t.$iq = i.$iq),
                (t.$build = i.$build),
                (t.$msg = i.$msg),
                (t.$pres = i.$pres),
                (t.Strophe = i.Strophe),
                (t.NS = i.Strophe.NS),
                (t.Status = i.Strophe.Status),
                (window.Strophe = t.Strophe),
                (window.$iq = t.$iq),
                (window.$msg = t.$msg),
                t.Strophe.addConnectionPlugin("chatstates", {
                  init: function (e) {
                    (this._connection = e),
                      t.Strophe.addNamespace(
                        "CHATSTATES",
                        "http://jabber.org/protocol/chatstates"
                      );
                  },
                  statusChanged: function (e) {},
                  addActive: function (e) {
                    return e
                      .c("active", { xmlns: t.Strophe.NS.CHATSTATES })
                      .up();
                  },
                  _notificationReceived: function (e) {
                    var t = e.getElementsByTagName("composing"),
                      n = e.getElementsByTagName("paused");
                    return (
                      e.getAttribute("from"),
                      0 < t.length &&
                        JSON.stringify(
                          unescape(
                            s.parseHTML(e.getElementsByTagName("body")[0])
                          )
                        ),
                      n.length,
                      !0
                    );
                  },
                  sendActive: function (e, t, n) {
                    this._sendNotification(e, t, "active", n);
                  },
                  sendComposing: function (e, t, n, r) {
                    this._sendNotification(e, t, "composing", n, r);
                  },
                  sendPaused: function (e, t, n, r) {
                    this._sendNotification(e, t, "paused", n, r);
                  },
                  sendInactive: function (e, t) {
                    this._sendNotification(e, t, "inactive");
                  },
                  sendGone: function (e, t) {
                    this._sendNotification(e, t, "gone");
                  },
                  _sendNotification: function (e, n, r, o, i) {
                    var s = "";
                    n || (n = "chat"),
                      ("composing" !== r && "paused" !== r) ||
                        (o && (s = JSON.stringify(o))),
                      c.isFalsy(i)
                        ? this._connection.send(
                            t
                              .$msg({
                                to: e,
                                from: this._connection.jid,
                                type: n,
                              })
                              .c("user", { xmlns: "com.cometchat.models:User" })
                              .t(s)
                              .up()
                              .c(r, { xmlns: t.Strophe.NS.CHATSTATES })
                          )
                        : this._connection.send(
                            t
                              .$msg({
                                to: e,
                                from: this._connection.jid,
                                type: n,
                              })
                              .c("user", { xmlns: "com.cometchat.models:User" })
                              .t(s)
                              .up()
                              .c("body", JSON.stringify(i))
                              .up()
                              .c(r, { xmlns: t.Strophe.NS.CHATSTATES })
                          );
                  },
                }),
                t.Strophe.addConnectionPlugin("receipts", {
                  _conn: null,
                  _msgQueue: {},
                  _retries: {},
                  _resendCount: 10,
                  _resendTime: 9e3,
                  init: function (e) {
                    (this._conn = e),
                      t.Strophe.addNamespace("RECEIPTS", "urn:xmpp:receipts");
                  },
                  statusChanged: function (e) {
                    if (
                      e === t.Strophe.Status.CONNECTED ||
                      e === t.Strophe.Status.ATTACHED
                    ) {
                      this._conn.addHandler(
                        this._onRequestReceived.bind(this),
                        t.Strophe.NS.RECEIPTS,
                        "message"
                      );
                      var n = this;
                      setTimeout(function () {
                        n.resendQueue();
                      }, 5e3);
                    }
                  },
                  sendMessage: function (e) {
                    var n = this._conn.getUniqaueId();
                    e.tree().setAttribute("id", n);
                    var r = t.Strophe.xmlElement("request", {
                      xmlns: t.Strophe.NS.RECEIPTS,
                    });
                    return (
                      e.tree().appendChild(r),
                      (this._msgQueue[n] = e),
                      (this._retries[n] = 0),
                      this._conn.send(e),
                      this.resendMessage(n),
                      n
                    );
                  },
                  resendMessage: function (e) {
                    var t = this;
                    setTimeout(function () {
                      if (t._msgQueue[e]) {
                        if (!t._conn.connected) return void t.resendMessage(e);
                        if ((t._retries[e]++, t._retries[e] > t._resendCount))
                          return;
                        t._msgQueue[e].tree().setAttribute("from", t._conn.jid),
                          t._conn.send(t._msgQueue[e]),
                          t.resendMessage(e);
                      }
                    }, this._resendTime);
                  },
                  addReceiptHandler: function (e, n, r, o) {
                    var i = this;
                    this._conn.addHandler(
                      function (t) {
                        return i._processReceipt(t), e(t);
                      },
                      t.Strophe.NS.RECEIPTS,
                      "message",
                      n,
                      null,
                      r,
                      o
                    );
                  },
                  _processReceipt: function (e, n) {
                    return (
                      void 0 === n && (n = 0),
                      r(this, void 0, void 0, function () {
                        var n,
                          r,
                          i,
                          d,
                          p,
                          f,
                          h,
                          E,
                          g,
                          S,
                          C,
                          _ = this;
                        return o(this, function (o) {
                          if (
                            u.CometChat.getConnectionStatus() ==
                            a.CONNECTION_STATUS.CONNECTED
                          ) {
                            (n = e.getAttribute(a.DELIVERY_RECEIPTS.ID)),
                              (r = t.Strophe.getBareJidFromJid(
                                e.getAttribute(
                                  a.MessageConstatnts.XMPP_KEYS.FROM
                                )
                              )),
                              (i = s.getUidFromJid(r)),
                              (d = a.MessageConstatnts.XMPP_KEYS.TYPE_USER),
                              (p = a.MessageConstatnts.RECEIVER_TYPE.USER),
                              (f = e.getElementsByTagName("request")),
                              (h = e.getElementsByTagName("received"));
                            try {
                              E = e.getElementsByTagName("body")[0].innerHTML;
                            } catch (o) {
                              g = E = void 0;
                            }
                            void 0 !== E && (g = JSON.parse(E).receiverType),
                              (S = u.CometChat.getMode()),
                              (c.isFalsy(S) ||
                                (S &&
                                  S === a.APP_SETTINGS.KEYS.DEFAULT_MODE)) &&
                                u.CometChat.getLoggedinUser().then(function (
                                  o
                                ) {
                                  var c = new l.User(o);
                                  c.setAuthToken("");
                                  var u = JSON.stringify(c);
                                  if (
                                    e.getAttribute(
                                      a.MessageConstatnts.XMPP_KEYS.TYPE
                                    ) ==
                                      a.MessageConstatnts.XMPP_KEYS
                                        .TYPE_GROUP ||
                                    (void 0 !== g &&
                                      g ==
                                        a.MessageConstatnts.RECEIVER_TYPE.GROUP)
                                  ) {
                                    if (
                                      ((p =
                                        a.MessageConstatnts.RECEIVER_TYPE
                                          .GROUP),
                                      (r = s.getGroupJidFullGroupJid(
                                        e.getAttribute(
                                          a.MessageConstatnts.XMPP_KEYS.FROM
                                        )
                                      )),
                                      (d =
                                        a.MessageConstatnts.XMPP_KEYS
                                          .TYPE_GROUP),
                                      0 < r.trim().length && 0 < f.length)
                                    ) {
                                      var h = t
                                          .$msg({
                                            to: r,
                                            type: d,
                                            from: _._conn.jid,
                                            id: _._conn.getUniqueId(),
                                          })
                                          .c("user", {
                                            xmlns: "com.cometchat.models:User",
                                          })
                                          .t(u)
                                          .up(),
                                        E = t.Strophe.xmlElement("delivered", {
                                          type: p,
                                          receiverId: i,
                                          xmlns: t.Strophe.NS.RECEIPTS,
                                          id: n,
                                        });
                                      h.tree().appendChild(E), _._conn.send(h);
                                    }
                                  } else
                                    0 < f.length &&
                                      ((h = t
                                        .$msg({
                                          to: r,
                                          type: d,
                                          from: _._conn.jid,
                                          id: _._conn.getUniqueId(),
                                        })
                                        .c("user", {
                                          xmlns: "com.cometchat.models:User",
                                        })
                                        .t(u)
                                        .up()),
                                      (E = t.Strophe.xmlElement("delivered", {
                                        type: p,
                                        receiverId: i,
                                        xmlns: t.Strophe.NS.RECEIPTS,
                                        id: n,
                                      })),
                                      h.tree().appendChild(E),
                                      _._conn.send(h));
                                }),
                              0 < h.length &&
                                (C = h[0].getAttribute(
                                  a.DELIVERY_RECEIPTS.ID
                                )) &&
                                (delete this._msgQueue[C],
                                delete this._retries[C]);
                          }
                          return [2];
                        });
                      })
                    );
                  },
                  resendQueue: function () {
                    if (this._conn.connected)
                      for (var e in this._msgQueue)
                        this._msgQueue.hasOwnProperty(e) &&
                          this._conn.send(this._msgQueue[e]);
                    else {
                      var t = this;
                      setTimeout(function () {
                        t.resendQueue();
                      }, 5e3);
                    }
                  },
                  getUnreceivedMsgs: function () {
                    var e = [];
                    for (var t in this._msgQueue)
                      this._msgQueue.hasOwnProperty(t) &&
                        e.push(this._msgQueue[t]);
                    return e;
                  },
                  clearMessages: function () {
                    this._msgQueue = {};
                  },
                });
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(45),
                o = n(0),
                i = n(1),
                s = (function () {
                  function e() {}
                  return (
                    (e.transformPresence = function (e) {
                      return e.getAttribute("type")
                        ? new r.UserPresence(
                            e.getAttribute(o.PresenceConstatnts.XMPP_KEYS.FROM),
                            o.PresenceConstatnts.STATUS.OFFLINE,
                            new Date().getTime()
                          )
                        : new r.UserPresence(
                            e.getAttribute(o.PresenceConstatnts.XMPP_KEYS.FROM),
                            o.PresenceConstatnts.STATUS.ONLINE,
                            new Date().getTime()
                          );
                    }),
                    (e.transformPresences = function (e) {
                      var t = [];
                      return (
                        e.map(function (e) {
                          try {
                            t.push(
                              new r.UserPresence(
                                e.getAttribute(
                                  o.PresenceConstatnts.XMPP_KEYS.FROM
                                ),
                                e.getAttribute(
                                  o.PresenceConstatnts.XMPP_KEYS.STATUS
                                ),
                                e.getAttribute(
                                  o.PresenceConstatnts.XMPP_KEYS.LAST_ACTIVE_AT
                                )
                              )
                            );
                          } catch (e) {
                            i.Logger.error(
                              "PresenceController:transformPresences",
                              e
                            );
                          }
                        }),
                        t
                      );
                    }),
                    (e.transformMUCUserPresence = function (e) {
                      return e.getAttribute("type")
                        ? new r.UserPresence(
                            e.getAttribute(o.PresenceConstatnts.XMPP_KEYS.FROM),
                            o.PresenceConstatnts.STATUS.LEFT,
                            new Date().getTime()
                          )
                        : new r.UserPresence(
                            e.getAttribute(o.PresenceConstatnts.XMPP_KEYS.FROM),
                            o.PresenceConstatnts.STATUS.JOINED,
                            new Date().getTime()
                          );
                    }),
                    (e.trandformMUCPresence = function (e) {
                      0 < e.getElementsByTagName("x").length &&
                        this.transformMUCUserPresence(e);
                    }),
                    e
                  );
                })();
              t.PresenceController = s;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(4),
                o = n(0),
                i = n(14),
                s = n(1),
                a = n(3),
                c = n(32),
                u = n(2),
                l = n(21),
                d = n(9),
                p = n(34),
                f = (function () {
                  function e() {
                    (this.TAG = "calling Log"),
                      (this.CALL_NO_ANSWER_INTERVAL = 45e3),
                      (this.view = void 0),
                      (this.isDev = !1),
                      (this.scrollHight = 0),
                      (this.scrollHight = 0);
                  }
                  return (
                    (e.prototype.getCallListner = function () {
                      return e.callListner;
                    }),
                    (e.prototype.setCallListner = function (t) {
                      e.callListner = new l.UserCallListener(t);
                    }),
                    (e.getInstance = function () {
                      try {
                        return (
                          (null != this.callController &&
                            null != this.callController) ||
                            (this.callController = new e()),
                          this.callController
                        );
                      } catch (e) {
                        s.Logger.error("CallController: getInstance", e);
                      }
                    }),
                    (e.prototype.getActiveCall = function () {
                      try {
                        return s.isFalsy(this.call) ? null : this.call;
                      } catch (e) {
                        s.Logger.error("CallController: getActiveCall", e);
                      }
                    }),
                    (e.prototype.initiateCall = function (e) {
                      var t = this;
                      return new Promise(function (n, r) {
                        try {
                          s.isFalsy(t.call)
                            ? null != e && null != e
                              ? ((t.call = e),
                                t.joinCallMuc(e.getSessionId()),
                                t.startCallTimer(),
                                n(e))
                              : r(
                                  new u.CometChatException(
                                    o.CALL_ERROR.ERROR_IN_CALLING
                                  )
                                )
                            : r(
                                new u.CometChatException(
                                  o.CALL_ERROR.CALL_ALREADY_INITIATED
                                )
                              );
                        } catch (n) {
                          r(new u.CometChatException(n));
                        }
                      });
                    }),
                    (e.prototype.onCallInitialized = function () {}),
                    (e.prototype.joinCall = function (e) {
                      s.Logger.log(this.TAG, e);
                    }),
                    (e.prototype.cancelCall = function () {
                      s.Logger.log(this.TAG, "calceling the call"),
                        this.stopCallTimer();
                    }),
                    (e.prototype.rejectCall = function () {
                      s.Logger.log(this.TAG, "rejectCall");
                    }),
                    (e.prototype.sendBusyResponse = function () {
                      s.Logger.log(this.TAG, "sendBusyResponse");
                    }),
                    (e.prototype.endCall = function (e) {
                      var t = this;
                      try {
                        document
                          .getElementsByName("frame")
                          .forEach(function (e) {
                            t.view &&
                              (t.view.removeChild(e), (t.view = void 0));
                          }),
                          this.endCallSession();
                      } catch (e) {
                        s.Logger.error("CallController: endCall", e);
                      }
                    }),
                    (e.prototype.onCallEnded = function () {
                      var e = this;
                      try {
                        s.isFalsy(this.call) ||
                          (this.call.getReceiverType() ==
                          o.CallConstants.RECEIVER_TYPE_GROUP
                            ? s.Logger.info(
                                this.TAG,
                                JSON.stringify(this.call) + "This call ended"
                              )
                            : (document
                                .getElementsByName("frame")
                                .forEach(function (t) {
                                  e.view.removeChild(t), (e.view = void 0);
                                }),
                              this.endCallSession()));
                      } catch (e) {
                        s.Logger.error("CallController:onCallEnded", e);
                      }
                    }),
                    (e.prototype.unAnswerCall = function () {
                      s.Logger.log(this.TAG, "unAnswerCall");
                    }),
                    (e.prototype.onCallStarted = function (e) {
                      var t = this;
                      return new Promise(function (n, r) {
                        try {
                          s.isFalsy(t.call)
                            ? null != e && null != e
                              ? ((t.call = e),
                                t.joinCallMuc(e.getSessionId()),
                                n(e))
                              : r(
                                  new u.CometChatException(
                                    o.CALL_ERROR.ERROR_IN_CALLING
                                  )
                                )
                            : r(
                                new u.CometChatException(
                                  o.CALL_ERROR.CALL_ALREADY_INITIATED
                                )
                              );
                        } catch (n) {
                          r(new u.CometChatException(n));
                        }
                      });
                    }),
                    (e.prototype.endCallSession = function () {
                      try {
                        this.call &&
                          this.leaveCallMuc(this.call.getSessionId()),
                          (this.call = void 0),
                          (e.callController = void 0),
                          this.timer && this.stopCallTimer(),
                          (this.view = void 0),
                          this.removeListener(),
                          (e.callScreen = null),
                          (e.callSettings = null);
                      } catch (e) {
                        s.Logger.error("CallController:EndCallSession", { e });
                      }
                    }),
                    (e.prototype.joinCallMuc = function (t) {
                      try {
                        !a.CometChat.didMessagesPollingStart() &&
                        a.CometChat.getConnectionStatus() ==
                          o.CONNECTION_STATUS.CONNECTED &&
                        i.XMPPConnectionHelper.getInstance().connection
                          ? s.getAppSettings().then(function (n) {
                              i.XMPPConnectionHelper.getInstance().connection.muc.join(
                                s.format(
                                  o.XMPP.muc_jid_string,
                                  a.CometChat.getAppId(),
                                  t,
                                  a.CometChat.getAppId(),
                                  "call." + s.getJidHost(n)
                                ),
                                i.XMPPConnectionHelper.getInstance().connection
                                  .jid,
                                null,
                                function (t) {
                                  var n =
                                    c.PresenceController.transformPresence(t);
                                  return (
                                    i.XMPPConnectionHelper.getInstance().getUsersVCard(
                                      n.getUid(),
                                      function (r) {
                                        if (!s.isFalsy(r.getUid()))
                                          switch (
                                            (r.setLastActiveAt(
                                              n.getLastActiveAt()
                                            ),
                                            n.getStatus())
                                          ) {
                                            case o.PresenceConstatnts.STATUS
                                              .ONLINE:
                                              r.setStatus(
                                                o.PresenceConstatnts.STATUS
                                                  .ONLINE
                                              );
                                              break;
                                            default:
                                              r.setStatus(
                                                o.PresenceConstatnts.STATUS
                                                  .OFFLINE
                                              );
                                          }
                                        switch (
                                          c.PresenceController.transformMUCUserPresence(
                                            t
                                          ).getStatus()
                                        ) {
                                          case o.PresenceConstatnts.STATUS.LEFT:
                                            a.CometChat.user
                                              .getUid()
                                              .toLowerCase() !=
                                              r.getUid().toLowerCase() &&
                                              e.callListner &&
                                              (s.isFalsy(
                                                e.callListner._eventListener
                                                  .onUserLeft
                                              ) ||
                                                e.callListner._eventListener.onUserLeft(
                                                  r
                                                ));
                                        }
                                      }
                                    ),
                                    !0
                                  );
                                }
                              );
                            })
                          : s.Logger.log(
                              "CallController: joinCallMuc",
                              "Currently the system is on polling mechanism"
                            );
                      } catch (e) {
                        s.Logger.error("CallController: joinCallMuc", e);
                      }
                    }),
                    (e.prototype.leaveCallMuc = function (e) {
                      try {
                        !a.CometChat.didMessagesPollingStart() &&
                        a.CometChat.getConnectionStatus() ==
                          o.CONNECTION_STATUS.CONNECTED &&
                        i.XMPPConnectionHelper.getInstance().connection
                          ? s.getAppSettings().then(function (t) {
                              i.XMPPConnectionHelper.getInstance().connection.muc.leave(
                                s.format(
                                  o.XMPP.muc_jid_string,
                                  a.CometChat.getAppId(),
                                  e,
                                  a.CometChat.getAppId(),
                                  "call." + s.getJidHost(t)
                                ),
                                i.XMPPConnectionHelper.getInstance().connection
                                  .jid
                              );
                            })
                          : s.Logger.log(
                              "CallController: leaveCallMuc",
                              "Currently the system is on polling mechanism"
                            );
                      } catch (e) {
                        s.Logger.error("CallController: leaveCallMuc", e);
                      }
                    }),
                    (e.prototype.startCallTimer = function () {
                      var e = this;
                      try {
                        this.timer = setTimeout(function () {
                          e.call
                            ? a.CometChat.sendUnansweredResponse(
                                e.call.getSessionId()
                              ).then(function (t) {
                                e.endCallSession();
                              })
                            : e.endCallSession();
                        }, this.CALL_NO_ANSWER_INTERVAL);
                      } catch (e) {
                        s.Logger.error("CallController: startCallTimer", e);
                      }
                    }),
                    (e.prototype.stopCallTimer = function () {
                      try {
                        clearTimeout(this.timer);
                      } catch (e) {
                        s.Logger.error("CallController: stopCallTimer", e);
                      }
                    }),
                    (e.prototype.startCall = function (t, n) {
                      var r = this;
                      try {
                        this.timer && this.stopCallTimer();
                        var o = document.createElement("iframe");
                        this.getCallUrl().then(function (i) {
                          (o.src = i + ""),
                            (o.name = "frame"),
                            o.setAttribute(
                              "allow",
                              "camera; microphone; display-capture;"
                            ),
                            o.setAttribute("width", "100%"),
                            o.setAttribute("height", "100%"),
                            (e.callScreen = o),
                            (e.callSettings = t),
                            n && (r.view = n),
                            n.appendChild(o),
                            r.addListener();
                        });
                      } catch (e) {
                        s.Logger.error("CallController: startCall", e);
                      }
                    }),
                    (e.prototype.addListener = function () {
                      window.addEventListener("message", this.handler, !0);
                    }),
                    (e.prototype.removeListener = function () {
                      window.removeEventListener("message", this.handler, !0);
                    }),
                    (e.prototype.handler = function (t) {
                      var n,
                        i = this,
                        c = e.callSettings,
                        u = e.callScreen,
                        l = e.getInstance().getActiveCall();
                      try {
                        if (
                          void 0 !== (n = JSON.parse(t.data)) &&
                          n.type == o.CallConstants.POST_MESSAGES.TYPES.HANGUP
                        )
                          (e.deviceList = null),
                            l
                              ? (s.Logger.info(this.TAG, e.callListner),
                                e.getInstance().leaveCallMuc(l.getSessionId()),
                                window.setTimeout(function () {
                                  a.CometChat.endCall(l.getSessionId(), !0)
                                    .then(function (e) {
                                      s.Logger.info(i.TAG, { call: e });
                                    })
                                    .catch(function (e) {
                                      s.Logger.info(
                                        i.TAG,
                                        "The Call Was Already Ended"
                                      );
                                    });
                                }, 1e3))
                              : a.CometChat.endCall(c.getSessionId(), !0)
                                  .then(function (e) {
                                    s.Logger.info(i.TAG, { call: e });
                                  })
                                  .catch(function (e) {
                                    s.Logger.info(
                                      i.TAG,
                                      "The Call Was Already Ended"
                                    );
                                  });
                        else if (
                          void 0 !== n &&
                          n.type ==
                            o.CallConstants.POST_MESSAGES.TYPES
                              .ACTION_MESSAGE &&
                          n.action ==
                            o.CallConstants.POST_MESSAGES.ACTIONS.USER_JOINED
                        ) {
                          if (n.value) {
                            var d = void 0,
                              p = n.value;
                            s.isFalsy(p.uid) ||
                              s.isFalsy(p.name) ||
                              ((d = new r.User(p)).setStatus("online"),
                              a.CometChat.user.getUid().toLowerCase() !=
                                d.getUid().toLowerCase() &&
                                e.callListner &&
                                (s.isFalsy(
                                  e.callListner._eventListener.onUserJoined
                                ) ||
                                  e.callListner._eventListener.onUserJoined(
                                    d
                                  )));
                          }
                        } else if (
                          void 0 !== n &&
                          n.type ==
                            o.CallConstants.POST_MESSAGES.TYPES
                              .ACTION_MESSAGE &&
                          n.action ==
                            o.CallConstants.POST_MESSAGES.ACTIONS.USER_LEFT
                        );
                        else if (
                          void 0 !== n &&
                          n.type ==
                            o.CallConstants.POST_MESSAGES.TYPES
                              .ACTION_MESSAGE &&
                          n.action ==
                            o.CallConstants.POST_MESSAGES.ACTIONS
                              .USER_LIST_CHANGED
                        ) {
                          var f = [];
                          n.value &&
                            0 < n.value.length &&
                            (n.value.map(function (e) {
                              if (!s.isFalsy(e.uid) && !s.isFalsy(e.name)) {
                                var t = new r.User(e);
                                t.setStatus("online"), f.push(t);
                              }
                            }),
                            e.callListner &&
                              (s.isFalsy(
                                e.callListner._eventListener.onUserListUpdated
                              ) ||
                                e.callListner._eventListener.onUserListUpdated(
                                  f
                                )));
                        } else if (
                          void 0 !== n &&
                          n.type ==
                            o.CallConstants.POST_MESSAGES.TYPES
                              .ACTION_MESSAGE &&
                          n.action ==
                            o.CallConstants.POST_MESSAGES.ACTIONS
                              .INITIAL_DEVICE_LIST
                        )
                          s.Logger.info(
                            "initialDeviceList received in SDK = ",
                            n
                          ),
                            n.value && (e.deviceList = n.value);
                        else if (
                          void 0 !== n &&
                          n.type ==
                            o.CallConstants.POST_MESSAGES.TYPES
                              .ACTION_MESSAGE &&
                          n.action ==
                            o.CallConstants.POST_MESSAGES.ACTIONS.DEVICE_CHANGE
                        ) {
                          if (
                            (s.Logger.info(
                              "onDeviceChange received in SDK = ",
                              n
                            ),
                            n.value)
                          ) {
                            e.deviceList = n.value;
                            var h = e.getAvailableDeviceObject(e.deviceList);
                            e.callListner &&
                              (s.isFalsy(
                                e.callListner._eventListener
                                  .onMediaDeviceListUpdated
                              ) ||
                                e.callListner._eventListener.onMediaDeviceListUpdated(
                                  h
                                ));
                          }
                        } else
                          void 0 !== n &&
                            n.type &&
                            n.action &&
                            n.type ==
                              o.CallConstants.POST_MESSAGES.TYPES
                                .ACTION_MESSAGE &&
                            n.action ==
                              o.CallConstants.POST_MESSAGES.ACTIONS.LOAD &&
                            null != u.contentWindow &&
                            u.contentWindow.postMessage(
                              {
                                type: o.CallConstants.POST_MESSAGES.TYPES
                                  .COMETCHAT_RTC_SETTINGS,
                                callsettings: JSON.stringify(c),
                              },
                              "*"
                            );
                      } catch (t) {
                        (n = void 0),
                          s.Logger.error("CallController: startCall", t);
                      }
                    }),
                    (e.prototype.getCallUrl = function () {
                      var e = this,
                        t = void 0;
                      return new Promise(function (n, r) {
                        try {
                          e.isDev
                            ? ((t =
                                "http://localhost:3000/?v=" +
                                o.CALLING_COMPONENT_VERSION),
                              n(t))
                            : d.LocalStorage.getInstance()
                                .get(o.APP_SETTINGS.APP_SETTINGS)
                                .then(function (e) {
                                  if (s.isFalsy(e))
                                    s.getAppSettings().then(function (e) {
                                      var r =
                                        "rtc-web" +
                                        e[
                                          o.APP_SETTINGS.KEYS.WEBRTC_HOST
                                        ].slice(3);
                                      (t =
                                        "https://" +
                                        r +
                                        "/?v=" +
                                        o.CALLING_COMPONENT_VERSION),
                                        n(t);
                                    });
                                  else {
                                    var r =
                                      "rtc-web" +
                                      e[o.APP_SETTINGS.KEYS.WEBRTC_HOST].slice(
                                        3
                                      );
                                    (t =
                                      "https://" +
                                      r +
                                      "/?v=" +
                                      o.CALLING_COMPONENT_VERSION),
                                      n(t);
                                  }
                                });
                        } catch (e) {
                          r(new u.CometChatException(e));
                        }
                      });
                    }),
                    (e.getAvailableDeviceArray = function (e) {
                      var t = [];
                      try {
                        return (
                          e &&
                            0 < e.length &&
                            e.map(function (e) {
                              t.push(
                                new p.MediaDevice(e.deviceId, e.label, e.active)
                              );
                            }),
                          t
                        );
                      } catch (e) {
                        return (
                          s.Logger.error(
                            "CallController: getAvailableDeviceArray",
                            e
                          ),
                          t
                        );
                      }
                    }),
                    (e.getAvailableDeviceObject = function (t) {
                      var n = [],
                        r = [],
                        i = [];
                      try {
                        return (
                          s.isFalsy(t) ||
                            s.isFalsy(t[o.CallConstants.AUDIO_INPUT_DEVICES]) ||
                            (n = e.getAvailableDeviceArray(
                              t[o.CallConstants.AUDIO_INPUT_DEVICES]
                            )),
                          s.isFalsy(t) ||
                            s.isFalsy(
                              t[o.CallConstants.AUDIO_OUTPUT_DEVICES]
                            ) ||
                            (r = e.getAvailableDeviceArray(
                              t[o.CallConstants.AUDIO_OUTPUT_DEVICES]
                            )),
                          s.isFalsy(t) ||
                            s.isFalsy(t[o.CallConstants.VIDEO_INPUT_DEVICES]) ||
                            (i = e.getAvailableDeviceArray(
                              t[o.CallConstants.VIDEO_INPUT_DEVICES]
                            )),
                          {
                            audioInputDevices: n,
                            audioOutputDevices: r,
                            videoInputDevices: i,
                          }
                        );
                      } catch (t) {
                        return (
                          s.Logger.error(
                            "CallController: getAvailableDeviceObject",
                            t
                          ),
                          {
                            audioInputDevices: n,
                            audioOutputDevices: r,
                            videoInputDevices: i,
                          }
                        );
                      }
                    }),
                    (e.prototype.getAudioInputDevices = function () {
                      var t = [];
                      try {
                        return (
                          s.isFalsy(e.deviceList) ||
                            s.isFalsy(
                              e.deviceList[o.CallConstants.AUDIO_INPUT_DEVICES]
                            ) ||
                            (t = e.getAvailableDeviceArray(
                              e.deviceList[o.CallConstants.AUDIO_INPUT_DEVICES]
                            )),
                          t
                        );
                      } catch (e) {
                        return (
                          s.Logger.error(
                            "CallController: getAudioInputDevices",
                            e
                          ),
                          t
                        );
                      }
                    }),
                    (e.prototype.getAudioOutputDevices = function () {
                      var t = [];
                      try {
                        return (
                          s.isFalsy(e.deviceList) ||
                            s.isFalsy(
                              e.deviceList[o.CallConstants.AUDIO_OUTPUT_DEVICES]
                            ) ||
                            (t = e.getAvailableDeviceArray(
                              e.deviceList[o.CallConstants.AUDIO_OUTPUT_DEVICES]
                            )),
                          t
                        );
                      } catch (e) {
                        return (
                          s.Logger.error(
                            "CallController: getAudioOutputDevices",
                            e
                          ),
                          t
                        );
                      }
                    }),
                    (e.prototype.getVideoInputDevices = function () {
                      var t = [];
                      try {
                        return (
                          s.isFalsy(e.deviceList) ||
                            s.isFalsy(
                              e.deviceList[o.CallConstants.VIDEO_INPUT_DEVICES]
                            ) ||
                            (t = e.getAvailableDeviceArray(
                              e.deviceList[o.CallConstants.VIDEO_INPUT_DEVICES]
                            )),
                          t
                        );
                      } catch (e) {
                        return (
                          s.Logger.error(
                            "CallController: getVideoInputDevices",
                            e
                          ),
                          t
                        );
                      }
                    }),
                    (e.prototype.setAudioInputDevice = function (t) {
                      try {
                        if (e.callScreen && !s.isFalsy(t)) {
                          var n = e
                            .getAvailableDeviceArray(
                              e.deviceList[o.CallConstants.AUDIO_INPUT_DEVICES]
                            )
                            .filter(function (e) {
                              return (
                                e[o.CallConstants.MEDIA_DEVICE.ID] === t &&
                                !e[o.CallConstants.MEDIA_DEVICE.ACTIVE]
                              );
                            });
                          n &&
                            0 < n.length &&
                            e.callScreen.contentWindow.postMessage(
                              {
                                type: o.CallConstants.POST_MESSAGES.TYPES
                                  .ACTION_MESSAGE,
                                action:
                                  o.CallConstants.POST_MESSAGES.ACTIONS
                                    .CHANGE_AUDIO_INPUT,
                                value: t,
                              },
                              "*"
                            );
                        }
                      } catch (n) {
                        s.Logger.error(
                          "CallController: setAudioInputDevice",
                          n
                        );
                      }
                    }),
                    (e.prototype.setAudioOutputDevice = function (t) {
                      try {
                        if (e.callScreen && !s.isFalsy(t)) {
                          var n = e
                            .getAvailableDeviceArray(
                              e.deviceList[o.CallConstants.AUDIO_OUTPUT_DEVICES]
                            )
                            .filter(function (e) {
                              return (
                                e[o.CallConstants.MEDIA_DEVICE.ID] === t &&
                                !e[o.CallConstants.MEDIA_DEVICE.ACTIVE]
                              );
                            });
                          n &&
                            0 < n.length &&
                            e.callScreen.contentWindow.postMessage(
                              {
                                type: o.CallConstants.POST_MESSAGES.TYPES
                                  .ACTION_MESSAGE,
                                action:
                                  o.CallConstants.POST_MESSAGES.ACTIONS
                                    .CHANGE_AUDIO_OUTPUT,
                                value: t,
                              },
                              "*"
                            );
                        }
                      } catch (n) {
                        s.Logger.error(
                          "CallController: setAudioOutputDevice",
                          n
                        );
                      }
                    }),
                    (e.prototype.setVideoInputDevice = function (t) {
                      try {
                        if (e.callScreen && !s.isFalsy(t)) {
                          var n = e
                            .getAvailableDeviceArray(
                              e.deviceList[o.CallConstants.VIDEO_INPUT_DEVICES]
                            )
                            .filter(function (e) {
                              return (
                                e[o.CallConstants.MEDIA_DEVICE.ID] === t &&
                                !e[o.CallConstants.MEDIA_DEVICE.ACTIVE]
                              );
                            });
                          n &&
                            0 < n.length &&
                            e.callScreen.contentWindow.postMessage(
                              {
                                type: o.CallConstants.POST_MESSAGES.TYPES
                                  .ACTION_MESSAGE,
                                action:
                                  o.CallConstants.POST_MESSAGES.ACTIONS
                                    .CHANGE_VIDEO_INPUT,
                                value: t,
                              },
                              "*"
                            );
                        }
                      } catch (n) {
                        s.Logger.error(
                          "CallController: setVideoInputDevice",
                          n
                        );
                      }
                    }),
                    (e.prototype.muteAudio = function (t) {
                      try {
                        e.callScreen &&
                          (t
                            ? e.callScreen.contentWindow.postMessage(
                                {
                                  type: o.CallConstants.POST_MESSAGES.TYPES
                                    .ACTION_MESSAGE,
                                  action:
                                    o.CallConstants.POST_MESSAGES.ACTIONS
                                      .MUTE_AUDIO,
                                },
                                "*"
                              )
                            : e.callScreen.contentWindow.postMessage(
                                {
                                  type: o.CallConstants.POST_MESSAGES.TYPES
                                    .ACTION_MESSAGE,
                                  action:
                                    o.CallConstants.POST_MESSAGES.ACTIONS
                                      .UNMUTE_AUDIO,
                                },
                                "*"
                              ));
                      } catch (t) {
                        s.Logger.error("CallController: muteAudio", t);
                      }
                    }),
                    (e.prototype.pauseVideo = function (t) {
                      try {
                        e.callScreen &&
                          (t
                            ? e.callScreen.contentWindow.postMessage(
                                {
                                  type: o.CallConstants.POST_MESSAGES.TYPES
                                    .ACTION_MESSAGE,
                                  action:
                                    o.CallConstants.POST_MESSAGES.ACTIONS
                                      .PAUSE_VIDEO,
                                },
                                "*"
                              )
                            : e.callScreen.contentWindow.postMessage(
                                {
                                  type: o.CallConstants.POST_MESSAGES.TYPES
                                    .ACTION_MESSAGE,
                                  action:
                                    o.CallConstants.POST_MESSAGES.ACTIONS
                                      .UNPAUSE_VIDEO,
                                },
                                "*"
                              ));
                      } catch (t) {
                        s.Logger.error("CallController: pauseVideo", t);
                      }
                    }),
                    (e.prototype.setMode = function (t) {
                      try {
                        e.callScreen &&
                          !s.isFalsy(t) &&
                          ((t = t.toUpperCase()),
                          -1 <
                            Object.values(o.CallConstants.CALL_MODE).indexOf(
                              t
                            ) &&
                            t != o.CallConstants.CALL_MODE.SINGLE &&
                            e.callScreen.contentWindow.postMessage(
                              {
                                type: o.CallConstants.POST_MESSAGES.TYPES
                                  .ACTION_MESSAGE,
                                action:
                                  o.CallConstants.POST_MESSAGES.ACTIONS
                                    .SWITCH_MODE,
                                value: t,
                              },
                              "*"
                            ));
                      } catch (t) {
                        s.Logger.error("CallController: setMode", t);
                      }
                    }),
                    (e.prototype.startScreenShare = function () {
                      try {
                        e.callScreen &&
                          e.callScreen.contentWindow.postMessage(
                            {
                              type: o.CallConstants.POST_MESSAGES.TYPES
                                .ACTION_MESSAGE,
                              action:
                                o.CallConstants.POST_MESSAGES.ACTIONS
                                  .START_SCREENSHARE,
                            },
                            "*"
                          );
                      } catch (e) {
                        s.Logger.error("CallController: startScreenShare", e);
                      }
                    }),
                    (e.prototype.stopScreenShare = function () {
                      try {
                        e.callScreen &&
                          e.callScreen.contentWindow.postMessage(
                            {
                              type: o.CallConstants.POST_MESSAGES.TYPES
                                .ACTION_MESSAGE,
                              action:
                                o.CallConstants.POST_MESSAGES.ACTIONS
                                  .STOP_SCREENSHARE,
                            },
                            "*"
                          );
                      } catch (e) {
                        s.Logger.error("CallController: stopScreenShare", e);
                      }
                    }),
                    (e.prototype.endSession = function () {
                      try {
                        e.callScreen &&
                          e.callScreen.contentWindow.postMessage(
                            {
                              type: o.CallConstants.POST_MESSAGES.TYPES
                                .ACTION_MESSAGE,
                              action:
                                o.CallConstants.POST_MESSAGES.ACTIONS.END_CALL,
                            },
                            "*"
                          );
                      } catch (e) {
                        s.Logger.error("CallController: endSession", e);
                      }
                    }),
                    (e.prototype.destroy = function () {
                      try {
                        s.isFalsy(this.call) || (this.call = void 0),
                          s.isFalsy(this.timer) || (this.timer = void 0),
                          s.isFalsy(this.view) || (this.view = void 0);
                      } catch (e) {
                        s.Logger.error("CallController: destroy", e);
                      }
                    }),
                    (e.callController = void 0),
                    (e.callListner = void 0),
                    e
                  );
                })();
              t.CallController = f;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = (function () {
                  function e(e, t, n) {
                    (this.id = ""),
                      (this.name = ""),
                      (this.active = !1),
                      r.isFalsy(e) || (this.id = e),
                      r.isFalsy(t) || (this.name = t),
                      (this.active = !!n);
                  }
                  return (
                    (e.prototype.getId = function () {
                      return this.id;
                    }),
                    (e.prototype.setId = function (e) {
                      this.id = e || "";
                    }),
                    (e.prototype.getName = function () {
                      return this.name;
                    }),
                    (e.prototype.setName = function (e) {
                      this.name = e || "";
                    }),
                    (e.prototype.getIsActive = function () {
                      return this.active;
                    }),
                    (e.prototype.setIsActive = function (e) {
                      this.active = !!e;
                    }),
                    e
                  );
                })();
              t.MediaDevice = o;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = (function () {
                function e(e, t, n) {
                  (this.receiverId = e),
                    (this.receiverType = t),
                    (this.metadata = n);
                }
                return (
                  (e.prototype.getReceiverType = function () {
                    return this.receiverType;
                  }),
                  (e.prototype.setReceiverType = function (e) {
                    this.receiverType = e;
                  }),
                  (e.prototype.getReceiverId = function () {
                    return this.receiverId;
                  }),
                  (e.prototype.setReceiverId = function (e) {
                    this.receiverId = e;
                  }),
                  (e.prototype.getMetadata = function () {
                    return this.metadata;
                  }),
                  (e.prototype.setMetadata = function (e) {
                    this.metadata = e;
                  }),
                  (e.prototype.getSender = function () {
                    return this.sender;
                  }),
                  (e.prototype.setSender = function (e) {
                    this.sender = e;
                  }),
                  e
                );
              })();
              t.TypingIndicator = r;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = n(0),
                i = n(14),
                s = (function () {
                  function e() {}
                  return (
                    (e.addTypingStarted = function (e) {
                      this.TYPING_STARTED_MAP[e] = r.getCurrentTime();
                    }),
                    (e.removeTypingStarted = function (e) {
                      delete this.TYPING_STARTED_MAP[e];
                    }),
                    (e.getTypingStartedMap = function (e) {
                      if (e) return this.TYPING_STARTED_MAP[e];
                    }),
                    (e.addTypingEnded = function (e) {
                      this.TYPING_ENDED_MAP[e] = r.getCurrentTime();
                    }),
                    (e.removeTypingEnded = function (e) {
                      delete this.TYPING_ENDED_MAP[e];
                    }),
                    (e.getTypingEndedMap = function (e) {
                      if (e) return this.TYPING_ENDED_MAP[e];
                    }),
                    (e.addIncomingTypingStarted = function (e) {
                      this.INCOMING_TYPING_STARTED_MAP[e.getReceiverId()] = {
                        typingNotification: e,
                        timestamp: r.getCurrentTime(),
                      };
                    }),
                    (e.removeIncomingTypingStarted = function (e) {
                      delete this.INCOMING_TYPING_STARTED_MAP[
                        e.getReceiverId()
                      ];
                    }),
                    (e.clearTimer = function () {
                      var e = this;
                      new Promise(function (t, n) {
                        Object.keys(e.TYPING_STARTED_MAP).map(function (t) {
                          r.getCurrentTime() - e.TYPING_STARTED_MAP[t] >=
                            1e3 *
                              o.DEFAULT_VALUES
                                .DEFAULT_MAX_TYPING_INDICATOR_LIMIT &&
                            delete e.TYPING_STARTED_MAP[t];
                        });
                      }),
                        new Promise(function (t, n) {
                          Object.keys(e.TYPING_ENDED_MAP).map(function (t) {
                            r.getCurrentTime() - e.TYPING_ENDED_MAP[t] >=
                              1e3 *
                                o.DEFAULT_VALUES
                                  .DEFAULT_MAX_TYPING_INDICATOR_LIMIT &&
                              delete e.TYPING_ENDED_MAP[t];
                          });
                        }),
                        new Promise(function (t, n) {
                          Object.keys(e.INCOMING_TYPING_STARTED_MAP).map(
                            function (t) {
                              r.getCurrentTime() -
                                e.INCOMING_TYPING_STARTED_MAP[t][
                                  o.TYPING_NOTIFICATION.KEYS.TIMESTAMP
                                ] >=
                                1e3 *
                                  o.DEFAULT_VALUES
                                    .DEFAULT_MAX_TYPING_INDICATOR_LIMIT &&
                                (i.XMPPConnectionHelper.getInstance().publishTypinStatusNotification(
                                  e.INCOMING_TYPING_STARTED_MAP[t][
                                    o.TYPING_NOTIFICATION.KEYS
                                      .TYPING_NOTIFICATION
                                  ],
                                  o.TYPING_NOTIFICATION.ACTIONS.ENDED
                                ),
                                delete e.INCOMING_TYPING_STARTED_MAP[t]);
                            }
                          );
                        });
                    }),
                    (e.TYPING_STARTED_MAP = {}),
                    (e.TYPING_ENDED_MAP = {}),
                    (e.INCOMING_TYPING_STARTED_MAP = {}),
                    e
                  );
                })();
              t.TypingNotificationController = s;
            },
            function (e, t, n) {
              "use strict";
              var r =
                  (this && this.__awaiter) ||
                  function (e, t, n, r) {
                    return new (n || (n = Promise))(function (o, i) {
                      function s(e) {
                        try {
                          c(r.next(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function a(e) {
                        try {
                          c(r.throw(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function c(e) {
                        e.done
                          ? o(e.value)
                          : new n(function (t) {
                              t(e.value);
                            }).then(s, a);
                      }
                      c((r = r.apply(e, t || [])).next());
                    });
                  },
                o =
                  (this && this.__generator) ||
                  function (e, t) {
                    var n,
                      r,
                      o,
                      i,
                      s = {
                        label: 0,
                        sent: function () {
                          if (1 & o[0]) throw o[1];
                          return o[1];
                        },
                        trys: [],
                        ops: [],
                      };
                    return (
                      (i = { next: a(0), throw: a(1), return: a(2) }),
                      "function" == typeof Symbol &&
                        (i[Symbol.iterator] = function () {
                          return this;
                        }),
                      i
                    );
                    function a(i) {
                      return function (a) {
                        return (function (i) {
                          if (n)
                            throw new TypeError(
                              "Generator is already executing."
                            );
                          for (; s; )
                            try {
                              if (
                                ((n = 1),
                                r &&
                                  (o =
                                    2 & i[0]
                                      ? r.return
                                      : i[0]
                                      ? r.throw ||
                                        ((o = r.return) && o.call(r), 0)
                                      : r.next) &&
                                  !(o = o.call(r, i[1])).done)
                              )
                                return o;
                              switch (
                                ((r = 0), o && (i = [2 & i[0], o.value]), i[0])
                              ) {
                                case 0:
                                case 1:
                                  o = i;
                                  break;
                                case 4:
                                  return s.label++, { value: i[1], done: !1 };
                                case 5:
                                  s.label++, (r = i[1]), (i = [0]);
                                  continue;
                                case 7:
                                  (i = s.ops.pop()), s.trys.pop();
                                  continue;
                                default:
                                  if (
                                    !(o =
                                      0 < (o = s.trys).length &&
                                      o[o.length - 1]) &&
                                    (6 === i[0] || 2 === i[0])
                                  ) {
                                    s = 0;
                                    continue;
                                  }
                                  if (
                                    3 === i[0] &&
                                    (!o || (i[1] > o[0] && i[1] < o[3]))
                                  ) {
                                    s.label = i[1];
                                    break;
                                  }
                                  if (6 === i[0] && s.label < o[1]) {
                                    (s.label = o[1]), (o = i);
                                    break;
                                  }
                                  if (o && s.label < o[2]) {
                                    (s.label = o[2]), s.ops.push(i);
                                    break;
                                  }
                                  o[2] && s.ops.pop(), s.trys.pop();
                                  continue;
                              }
                              i = t.call(e, s);
                            } catch (e) {
                              (i = [6, e]), (r = 0);
                            } finally {
                              n = o = 0;
                            }
                          if (5 & i[0]) throw i[1];
                          return { value: i[0] ? i[1] : void 0, done: !0 };
                        })([i, a]);
                      };
                    }
                  };
              t.__esModule = !0;
              var i = n(3),
                s = (function () {
                  function e() {}
                  return (
                    (e.addCometChatExtension = function (t) {
                      return r(this, void 0, void 0, function () {
                        return o(this, function (n) {
                          switch (n.label) {
                            case 0:
                              return (
                                e.cometChatExtensionList.push(t),
                                i.CometChat.user
                                  ? [
                                      4,
                                      t.onInit(
                                        i.CometChat.getAppId(),
                                        i.CometChat.user
                                      ),
                                    ]
                                  : [3, 2]
                              );
                            case 1:
                              return n.sent(), [3, 4];
                            case 2:
                              return [4, t.onInit(i.CometChat.getAppId())];
                            case 3:
                              n.sent(), (n.label = 4);
                            case 4:
                              return [2];
                          }
                        });
                      });
                    }),
                    (e.cometChatExtensionList = []),
                    e
                  );
                })();
              t.ExtensionManager = s;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(0),
                o = (function () {
                  function e(t) {
                    (this.subscriptionType = e.SUBSCRIPTION_TYPE_NONE),
                      (this.roles = null),
                      (this.region = r.DEFAULT_VALUES.REGION_DEFAULT),
                      (this.autoJoinGroup = !0),
                      (this.subscriptionType = t.subscriptionType),
                      (this.roles = t.roles),
                      (this.region = t.region),
                      (this.autoJoinGroup = t.autoJoinGroup);
                  }
                  return (
                    (e.prototype.getSubscriptionType = function () {
                      return this.subscriptionType;
                    }),
                    (e.prototype.getRoles = function () {
                      return this.roles;
                    }),
                    (e.prototype.getRegion = function () {
                      return this.region;
                    }),
                    (e.prototype.getIsAutoJoinEnabled = function () {
                      return this.autoJoinGroup;
                    }),
                    (e.SUBSCRIPTION_TYPE_NONE = "NONE"),
                    (e.SUBSCRIPTION_TYPE_ALL_USERS = "ALL_USERS"),
                    (e.SUBSCRIPTION_TYPE_ROLES = "ROLES"),
                    (e.SUBSCRIPTION_TYPE_FRIENDS = "FRIENDS"),
                    (e.REGION_EU = r.DEFAULT_VALUES.REGION_DEFAULT_EU),
                    (e.REGION_US = r.DEFAULT_VALUES.REGION_DEFAULT_US),
                    (e.REGION_IN = r.DEFAULT_VALUES.REGION_DEFAULT_IN),
                    (e.REGION_PRIVATE =
                      r.DEFAULT_VALUES.REGION_DEFAULT_PRIVATE),
                    e
                  );
                })();
              t.AppSettings = o;
              var i = (function () {
                function e() {
                  (this.subscriptionType = o.SUBSCRIPTION_TYPE_NONE),
                    (this.roles = null),
                    (this.region = r.DEFAULT_VALUES.REGION_DEFAULT),
                    (this.autoJoinGroup = !0);
                }
                return (
                  (e.prototype.subscribePresenceForAllUsers = function () {
                    return (
                      (this.subscriptionType = o.SUBSCRIPTION_TYPE_ALL_USERS),
                      this
                    );
                  }),
                  (e.prototype.subscribePresenceForRoles = function (e) {
                    return (
                      (this.subscriptionType = o.SUBSCRIPTION_TYPE_ROLES),
                      (this.roles = e),
                      this
                    );
                  }),
                  (e.prototype.subscribePresenceForFriends = function () {
                    return (
                      (this.subscriptionType = o.SUBSCRIPTION_TYPE_FRIENDS),
                      this
                    );
                  }),
                  (e.prototype.setRegion = function (e) {
                    return (
                      void 0 === e && (e = r.DEFAULT_VALUES.REGION_DEFAULT),
                      (this.region = e.toLowerCase()),
                      this
                    );
                  }),
                  (e.prototype.enableAutoJoinForGroups = function (e) {
                    return (
                      void 0 === e && (e = !0), (this.autoJoinGroup = e), this
                    );
                  }),
                  (e.prototype.build = function () {
                    return new o(this);
                  }),
                  e
                );
              })();
              t.AppSettingsBuilder = i;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(3),
                o = n(1),
                i = n(0),
                s = n(11),
                a = (function () {
                  function e(e) {
                    (this.store = i.constants.DEFAULT_STORE),
                      o.isFalsy(e) || (this.store = e),
                      (this.userStore = s.createInstance({
                        name: o.format(
                          i.LOCAL_STORE.STORE_STRING,
                          r.CometChat.getAppId(),
                          i.LOCAL_STORE.USERS_STORE
                        ),
                      })),
                      this.userStore.setDriver([
                        s.LOCALSTORAGE,
                        s.INDEXEDDB,
                        s.WEBSQL,
                      ]);
                  }
                  return (
                    (e.getInstance = function () {
                      return (
                        null == e.UserStore && (e.UserStore = new e()),
                        e.UserStore
                      );
                    }),
                    (e.prototype.set = function (e, t) {
                      return this.userStore.setItem(e, t);
                    }),
                    (e.prototype.remove = function (e) {
                      this.userStore.removeItem(e);
                    }),
                    (e.prototype.get = function (e) {
                      return this.userStore.getItem(e);
                    }),
                    (e.prototype.clearStore = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        e.userStore
                          .clear()
                          .then(function () {
                            t(!0);
                          })
                          .catch(function (e) {
                            n(e);
                          });
                      });
                    }),
                    (e.prototype.clear = function (e) {}),
                    (e.prototype.selectStore = function (e) {
                      this.store = e;
                    }),
                    (e.prototype.storeUsers = function (e) {
                      var t = this;
                      return (
                        e.map(function (e) {
                          t.set(e.getUid(), e);
                        }),
                        !0
                      );
                    }),
                    (e.prototype.storeUser = function (e) {
                      return this.set(e.getUid(), e), !0;
                    }),
                    e
                  );
                })();
              t.UserStore = a;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(0),
                o = (function () {
                  function e(e, t) {
                    (this.joinedAt = 0),
                      (this.isBanned = 0),
                      (this.uid = e),
                      t && (this.scope = t);
                  }
                  return (
                    (e.prototype.getName = function () {
                      return this.name;
                    }),
                    (e.prototype.setName = function (e) {
                      this.name = e;
                    }),
                    (e.prototype.getAvatar = function () {
                      return this.avatar;
                    }),
                    (e.prototype.setAvatar = function (e) {
                      this.avatar = e;
                    }),
                    (e.prototype.getLastActiveAt = function () {
                      return this.lastActiveAt;
                    }),
                    (e.prototype.setLastActiveAt = function (e) {
                      this.lastActiveAt = e;
                    }),
                    (e.prototype.getLink = function () {
                      return this.link;
                    }),
                    (e.prototype.setLink = function (e) {
                      this.link = e;
                    }),
                    (e.prototype.getMetadata = function () {
                      return this.metadata;
                    }),
                    (e.prototype.setMetadata = function (e) {
                      this.metadata = e;
                    }),
                    (e.prototype.getRole = function () {
                      return this.role;
                    }),
                    (e.prototype.setRole = function (e) {
                      this.role = e;
                    }),
                    (e.prototype.getStatus = function () {
                      return this.status;
                    }),
                    (e.prototype.setStatus = function (e) {
                      this.status = e;
                    }),
                    (e.prototype.getStatusMessage = function () {
                      return this.statusMessage;
                    }),
                    (e.prototype.setStatusMessage = function (e) {
                      this.statusMessage = e;
                    }),
                    (e.prototype.setGuid = function (e) {
                      this.guid = e;
                    }),
                    (e.prototype.setUid = function (e) {
                      this.uid = e;
                    }),
                    (e.prototype.setScope = function (e) {
                      this.scope = e;
                    }),
                    (e.prototype.setJoinedAt = function (e) {
                      this.joinedAt = e;
                    }),
                    (e.prototype.setIsBanned = function (e) {
                      this.isBanned = e;
                    }),
                    (e.prototype.setUser = function (e) {
                      this.user = e;
                    }),
                    (e.prototype.getGuid = function () {
                      return this.guid;
                    }),
                    (e.prototype.getUid = function () {
                      return this.uid;
                    }),
                    (e.prototype.getuser = function () {
                      return this.user;
                    }),
                    (e.prototype.getScope = function () {
                      return this.scope;
                    }),
                    (e.prototype.getJoinedAt = function () {
                      return this.joinedAt;
                    }),
                    (e.prototype.getIsBanned = function () {
                      return this.isBanned;
                    }),
                    (e.GroupMemberScope = r.GroupMemberScope),
                    e
                  );
                })();
              t.GroupMember = o;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(7),
                o = n(0),
                i = n(8),
                s = n(16),
                a = (function () {
                  function e(e, t, n, a, c) {
                    (this.conversationId = e),
                      (this.conversationType = t),
                      void 0 !== n &&
                        void 0 !== (this.lastMessage = n).id &&
                        (this.lastMessage =
                          r.MessageController.trasformJSONMessge(n)),
                      this.conversationType ==
                      o.MessageConstatnts.RECEIVER_TYPE.USER
                        ? (this.conversationWith =
                            i.UsersController.trasformJSONUser(a))
                        : (this.conversationWith =
                            s.GroupsController.trasformJSONGroup(a)),
                      (this.unreadMessageCount =
                        void 0 !== c ? parseInt(c) : 0);
                  }
                  return (
                    (e.prototype.setConversationId = function (e) {
                      this.conversationId = e;
                    }),
                    (e.prototype.setConversationType = function (e) {
                      this.conversationType = e;
                    }),
                    (e.prototype.setLastMessage = function (e) {
                      this.lastMessage = e;
                    }),
                    (e.prototype.setConversationWith = function (e) {
                      this.conversationWith = e;
                    }),
                    (e.prototype.setUnreadMessageCount = function (e) {
                      this.unreadMessageCount = e;
                    }),
                    (e.prototype.getConversationId = function () {
                      return this.conversationId;
                    }),
                    (e.prototype.getConversationType = function () {
                      return this.conversationType;
                    }),
                    (e.prototype.getLastMessage = function () {
                      return this.lastMessage;
                    }),
                    (e.prototype.getConversationWith = function () {
                      return this.conversationWith;
                    }),
                    (e.prototype.getUnreadMessageCount = function () {
                      return this.unreadMessageCount;
                    }),
                    e
                  );
                })();
              t.Conversation = a;
            },
            function (e, t) {
              function n(e, t) {
                for (var n in e) t[n] = e[n];
              }
              function r(e, t) {
                var r = e.prototype;
                if (Object.create) {
                  var o = Object.create(t.prototype);
                  r.__proto__ = o;
                }
                if (!(r instanceof t)) {
                  function i() {}
                  (i.prototype = t.prototype),
                    n(r, (i = new i())),
                    (e.prototype = r = i);
                }
                r.constructor != e && (r.constructor = e);
              }
              var o = {},
                i = (o.ELEMENT_NODE = 1),
                s = (o.ATTRIBUTE_NODE = 2),
                a = (o.TEXT_NODE = 3),
                c = (o.CDATA_SECTION_NODE = 4),
                u = (o.ENTITY_REFERENCE_NODE = 5),
                l = (o.ENTITY_NODE = 6),
                d = (o.PROCESSING_INSTRUCTION_NODE = 7),
                p = (o.COMMENT_NODE = 8),
                f = (o.DOCUMENT_NODE = 9),
                h = (o.DOCUMENT_TYPE_NODE = 10),
                E = (o.DOCUMENT_FRAGMENT_NODE = 11),
                g = (o.NOTATION_NODE = 12),
                S = {},
                C = {},
                _ =
                  ((S.INDEX_SIZE_ERR = ((C[1] = "Index size error"), 1)),
                  (S.DOMSTRING_SIZE_ERR = ((C[2] = "DOMString size error"), 2)),
                  (S.HIERARCHY_REQUEST_ERR =
                    ((C[3] = "Hierarchy request error"), 3))),
                m =
                  ((S.WRONG_DOCUMENT_ERR = ((C[4] = "Wrong document"), 4)),
                  (S.INVALID_CHARACTER_ERR = ((C[5] = "Invalid character"), 5)),
                  (S.NO_DATA_ALLOWED_ERR = ((C[6] = "No data allowed"), 6)),
                  (S.NO_MODIFICATION_ALLOWED_ERR =
                    ((C[7] = "No modification allowed"), 7)),
                  (S.NOT_FOUND_ERR = ((C[8] = "Not found"), 8))),
                T =
                  ((S.NOT_SUPPORTED_ERR = ((C[9] = "Not supported"), 9)),
                  (S.INUSE_ATTRIBUTE_ERR = ((C[10] = "Attribute in use"), 10)));
              function y(e, t) {
                if (t instanceof Error) var n = t;
                else
                  (n = this),
                    Error.call(this, C[e]),
                    (this.message = C[e]),
                    Error.captureStackTrace && Error.captureStackTrace(this, y);
                return (
                  (n.code = e), t && (this.message = this.message + ": " + t), n
                );
              }
              function A() {}
              function I(e, t) {
                (this._node = e), (this._refresh = t), v(this);
              }
              function v(e) {
                var t = e._node._inc || e._node.ownerDocument._inc;
                if (e._inc != t) {
                  var r = e._refresh(e._node);
                  te(e, "length", r.length), n(r, e), (e._inc = t);
                }
              }
              function N() {}
              function R(e, t) {
                for (var n = e.length; n--; ) if (e[n] === t) return n;
              }
              function O(e, t, n, r) {
                if ((r ? (t[R(t, r)] = n) : (t[t.length++] = n), e)) {
                  var o = (n.ownerElement = e).ownerDocument;
                  o &&
                    (r && U(o, e, r),
                    (s = e),
                    (a = n),
                    (i = o) && i._inc++,
                    "http://www.w3.org/2000/xmlns/" == a.namespaceURI &&
                      (s._nsMap[a.prefix ? a.localName : ""] = a.value));
                }
                var i, s, a;
              }
              function P(e, t, n) {
                var r = R(t, n);
                if (!(0 <= r)) throw y(m, new Error(e.tagName + "@" + n));
                for (var o = t.length - 1; r < o; ) t[r] = t[++r];
                if (((t.length = o), e)) {
                  var i = e.ownerDocument;
                  i && (U(i, e, n), (n.ownerElement = null));
                }
              }
              function M(e) {
                if (((this._features = {}), e))
                  for (var t in e) this._features = e[t];
              }
              function L() {}
              function b(e) {
                return (
                  ("<" == e ? "&lt;" : ">" == e && "&gt;") ||
                  ("&" == e && "&amp;") ||
                  ('"' == e && "&quot;") ||
                  "&#" + e.charCodeAt() + ";"
                );
              }
              function w(e, t) {
                if (t(e)) return !0;
                if ((e = e.firstChild))
                  do {
                    if (w(e, t)) return !0;
                  } while ((e = e.nextSibling));
              }
              function D() {}
              function U(e, t, n, r) {
                e && e._inc++,
                  "http://www.w3.org/2000/xmlns/" == n.namespaceURI &&
                    delete t._nsMap[n.prefix ? n.localName : ""];
              }
              function x(e, t, n) {
                if (e && e._inc) {
                  e._inc++;
                  var r = t.childNodes;
                  if (n) r[r.length++] = n;
                  else {
                    for (var o = t.firstChild, i = 0; o; )
                      o = (r[i++] = o).nextSibling;
                    r.length = i;
                  }
                }
              }
              function Y(e, t) {
                var n = t.previousSibling,
                  r = t.nextSibling;
                return (
                  n ? (n.nextSibling = r) : (e.firstChild = r),
                  r ? (r.previousSibling = n) : (e.lastChild = n),
                  x(e.ownerDocument, e),
                  t
                );
              }
              function G(e, t, n) {
                var r = t.parentNode;
                if ((r && r.removeChild(t), t.nodeType === E)) {
                  var o = t.firstChild;
                  if (null == o) return t;
                  var i = t.lastChild;
                } else o = i = t;
                var s = n ? n.previousSibling : e.lastChild;
                for (
                  o.previousSibling = s,
                    i.nextSibling = n,
                    s ? (s.nextSibling = o) : (e.firstChild = o),
                    null == n ? (e.lastChild = i) : (n.previousSibling = i);
                  (o.parentNode = e), o !== i && (o = o.nextSibling);

                );
                return (
                  x(e.ownerDocument || e, e),
                  t.nodeType == E && (t.firstChild = t.lastChild = null),
                  t
                );
              }
              function k() {
                this._nsMap = {};
              }
              function F() {}
              function B() {}
              function K() {}
              function H() {}
              function V() {}
              function j() {}
              function J() {}
              function X() {}
              function W() {}
              function q() {}
              function z() {}
              function Q() {}
              function $(e, t) {
                var n = [],
                  r = 9 == this.nodeType ? this.documentElement : this,
                  o = r.prefix,
                  i = r.namespaceURI;
                if (i && null == o && null == (o = r.lookupPrefix(i)))
                  var s = [{ namespace: i, prefix: null }];
                return ee(this, n, e, t, s), n.join("");
              }
              function Z(e, t, n) {
                var r = e.prefix || "",
                  o = e.namespaceURI;
                if (!r && !o) return !1;
                if (
                  ("xml" === r &&
                    "http://www.w3.org/XML/1998/namespace" === o) ||
                  "http://www.w3.org/2000/xmlns/" == o
                )
                  return !1;
                for (var i = n.length; i--; ) {
                  var s = n[i];
                  if (s.prefix == r) return s.namespace != o;
                }
                return !0;
              }
              function ee(e, t, n, r, o) {
                if (r) {
                  if (!(e = r(e))) return;
                  if ("string" == typeof e) return void t.push(e);
                }
                switch (e.nodeType) {
                  case i:
                    o || (o = []), o.length;
                    var l = e.attributes,
                      g = l.length,
                      S = e.firstChild,
                      C = e.tagName;
                    (n =
                      "http://www.w3.org/1999/xhtml" === e.namespaceURI || n),
                      t.push("<", C);
                    for (var _ = 0; _ < g; _++)
                      "xmlns" == (m = l.item(_)).prefix
                        ? o.push({ prefix: m.localName, namespace: m.value })
                        : "xmlns" == m.nodeName &&
                          o.push({ prefix: "", namespace: m.value });
                    for (_ = 0; _ < g; _++) {
                      var m;
                      if (Z((m = l.item(_)), 0, o)) {
                        var T = m.prefix || "",
                          y = m.namespaceURI,
                          A = T ? " xmlns:" + T : " xmlns";
                        t.push(A, '="', y, '"'),
                          o.push({ prefix: T, namespace: y });
                      }
                      ee(m, t, n, r, o);
                    }
                    if (
                      (Z(e, 0, o) &&
                        ((T = e.prefix || ""),
                        (y = e.namespaceURI),
                        (A = T ? " xmlns:" + T : " xmlns"),
                        t.push(A, '="', y, '"'),
                        o.push({ prefix: T, namespace: y })),
                      S || (n && !/^(?:meta|link|img|br|hr|input)$/i.test(C)))
                    ) {
                      if ((t.push(">"), n && /^script$/i.test(C)))
                        for (; S; )
                          S.data ? t.push(S.data) : ee(S, t, n, r, o),
                            (S = S.nextSibling);
                      else for (; S; ) ee(S, t, n, r, o), (S = S.nextSibling);
                      t.push("</", C, ">");
                    } else t.push("/>");
                    return;
                  case f:
                  case E:
                    for (S = e.firstChild; S; )
                      ee(S, t, n, r, o), (S = S.nextSibling);
                    return;
                  case s:
                    return t.push(
                      " ",
                      e.name,
                      '="',
                      e.value.replace(/[<&"]/g, b),
                      '"'
                    );
                  case a:
                    return t.push(e.data.replace(/[<&]/g, b));
                  case c:
                    return t.push("<![CDATA[", e.data, "]]>");
                  case p:
                    return t.push("\x3c!--", e.data, "--\x3e");
                  case h:
                    var I = e.publicId,
                      v = e.systemId;
                    if ((t.push("<!DOCTYPE ", e.name), I))
                      t.push(' PUBLIC "', I),
                        v && "." != v && t.push('" "', v),
                        t.push('">');
                    else if (v && "." != v) t.push(' SYSTEM "', v, '">');
                    else {
                      var N = e.internalSubset;
                      N && t.push(" [", N, "]"), t.push(">");
                    }
                    return;
                  case d:
                    return t.push("<?", e.target, " ", e.data, "?>");
                  case u:
                    return t.push("&", e.nodeName, ";");
                  default:
                    t.push("??", e.nodeName);
                }
              }
              function te(e, t, n) {
                e[t] = n;
              }
              (S.INVALID_STATE_ERR = ((C[11] = "Invalid state"), 11)),
                (S.SYNTAX_ERR = ((C[12] = "Syntax error"), 12)),
                (S.INVALID_MODIFICATION_ERR =
                  ((C[13] = "Invalid modification"), 13)),
                (S.NAMESPACE_ERR = ((C[14] = "Invalid namespace"), 14)),
                (S.INVALID_ACCESS_ERR = ((C[15] = "Invalid access"), 15)),
                (y.prototype = Error.prototype),
                n(S, y),
                (A.prototype = {
                  length: 0,
                  item: function (e) {
                    return this[e] || null;
                  },
                  toString: function (e, t) {
                    for (var n = [], r = 0; r < this.length; r++)
                      ee(this[r], n, e, t);
                    return n.join("");
                  },
                }),
                (I.prototype.item = function (e) {
                  return v(this), this[e];
                }),
                r(I, A),
                (N.prototype = {
                  length: 0,
                  item: A.prototype.item,
                  getNamedItem: function (e) {
                    for (var t = this.length; t--; ) {
                      var n = this[t];
                      if (n.nodeName == e) return n;
                    }
                  },
                  setNamedItem: function (e) {
                    var t = e.ownerElement;
                    if (t && t != this._ownerElement) throw new y(T);
                    var n = this.getNamedItem(e.nodeName);
                    return O(this._ownerElement, this, e, n), n;
                  },
                  setNamedItemNS: function (e) {
                    var t,
                      n = e.ownerElement;
                    if (n && n != this._ownerElement) throw new y(T);
                    return (
                      (t = this.getNamedItemNS(e.namespaceURI, e.localName)),
                      O(this._ownerElement, this, e, t),
                      t
                    );
                  },
                  removeNamedItem: function (e) {
                    var t = this.getNamedItem(e);
                    return P(this._ownerElement, this, t), t;
                  },
                  removeNamedItemNS: function (e, t) {
                    var n = this.getNamedItemNS(e, t);
                    return P(this._ownerElement, this, n), n;
                  },
                  getNamedItemNS: function (e, t) {
                    for (var n = this.length; n--; ) {
                      var r = this[n];
                      if (r.localName == t && r.namespaceURI == e) return r;
                    }
                    return null;
                  },
                }),
                (M.prototype = {
                  hasFeature: function (e, t) {
                    var n = this._features[e.toLowerCase()];
                    return !(!n || (t && !(t in n)));
                  },
                  createDocument: function (e, t, n) {
                    var r = new D();
                    if (
                      ((r.implementation = this),
                      (r.childNodes = new A()),
                      (r.doctype = n) && r.appendChild(n),
                      t)
                    ) {
                      var o = r.createElementNS(e, t);
                      r.appendChild(o);
                    }
                    return r;
                  },
                  createDocumentType: function (e, t, n) {
                    var r = new j();
                    return (
                      (r.name = e),
                      (r.nodeName = e),
                      (r.publicId = t),
                      (r.systemId = n),
                      r
                    );
                  },
                }),
                (L.prototype = {
                  firstChild: null,
                  lastChild: null,
                  previousSibling: null,
                  nextSibling: null,
                  attributes: null,
                  parentNode: null,
                  childNodes: null,
                  ownerDocument: null,
                  nodeValue: null,
                  namespaceURI: null,
                  prefix: null,
                  localName: null,
                  insertBefore: function (e, t) {
                    return G(this, e, t);
                  },
                  replaceChild: function (e, t) {
                    this.insertBefore(e, t), t && this.removeChild(t);
                  },
                  removeChild: function (e) {
                    return Y(this, e);
                  },
                  appendChild: function (e) {
                    return this.insertBefore(e, null);
                  },
                  hasChildNodes: function () {
                    return null != this.firstChild;
                  },
                  cloneNode: function (e) {
                    return (function e(t, n, r) {
                      var o = new n.constructor();
                      for (var a in n) {
                        var c = n[a];
                        "object" != typeof c && c != o[a] && (o[a] = c);
                      }
                      switch (
                        (n.childNodes && (o.childNodes = new A()),
                        (o.ownerDocument = t),
                        o.nodeType)
                      ) {
                        case i:
                          var u = n.attributes,
                            l = (o.attributes = new N()),
                            d = u.length;
                          l._ownerElement = o;
                          for (var p = 0; p < d; p++)
                            o.setAttributeNode(e(t, u.item(p), !0));
                          break;
                        case s:
                          r = !0;
                      }
                      if (r)
                        for (var f = n.firstChild; f; )
                          o.appendChild(e(t, f, r)), (f = f.nextSibling);
                      return o;
                    })(this.ownerDocument || this, this, e);
                  },
                  normalize: function () {
                    for (var e = this.firstChild; e; ) {
                      var t = e.nextSibling;
                      t && t.nodeType == a && e.nodeType == a
                        ? (this.removeChild(t), e.appendData(t.data))
                        : (e.normalize(), (e = t));
                    }
                  },
                  isSupported: function (e, t) {
                    return this.ownerDocument.implementation.hasFeature(e, t);
                  },
                  hasAttributes: function () {
                    return 0 < this.attributes.length;
                  },
                  lookupPrefix: function (e) {
                    for (var t = this; t; ) {
                      var n = t._nsMap;
                      if (n) for (var r in n) if (n[r] == e) return r;
                      t = t.nodeType == s ? t.ownerDocument : t.parentNode;
                    }
                    return null;
                  },
                  lookupNamespaceURI: function (e) {
                    for (var t = this; t; ) {
                      var n = t._nsMap;
                      if (n && e in n) return n[e];
                      t = t.nodeType == s ? t.ownerDocument : t.parentNode;
                    }
                    return null;
                  },
                  isDefaultNamespace: function (e) {
                    return null == this.lookupPrefix(e);
                  },
                }),
                n(o, L),
                n(o, L.prototype),
                (D.prototype = {
                  nodeName: "#document",
                  nodeType: f,
                  doctype: null,
                  documentElement: null,
                  _inc: 1,
                  insertBefore: function (e, t) {
                    if (e.nodeType != E)
                      return (
                        null == this.documentElement &&
                          e.nodeType == i &&
                          (this.documentElement = e),
                        G(this, e, t),
                        (e.ownerDocument = this),
                        e
                      );
                    for (var n = e.firstChild; n; ) {
                      var r = n.nextSibling;
                      this.insertBefore(n, t), (n = r);
                    }
                    return e;
                  },
                  removeChild: function (e) {
                    return (
                      this.documentElement == e &&
                        (this.documentElement = null),
                      Y(this, e)
                    );
                  },
                  importNode: function (e, t) {
                    return (function e(t, n, r) {
                      var o;
                      switch (n.nodeType) {
                        case i:
                          (o = n.cloneNode(!1)).ownerDocument = t;
                        case E:
                          break;
                        case s:
                          r = !0;
                      }
                      if (
                        (o || (o = n.cloneNode(!1)),
                        (o.ownerDocument = t),
                        (o.parentNode = null),
                        r)
                      )
                        for (var a = n.firstChild; a; )
                          o.appendChild(e(t, a, r)), (a = a.nextSibling);
                      return o;
                    })(this, e, t);
                  },
                  getElementById: function (e) {
                    var t = null;
                    return (
                      w(this.documentElement, function (n) {
                        if (n.nodeType == i && n.getAttribute("id") == e)
                          return (t = n), !0;
                      }),
                      t
                    );
                  },
                  createElement: function (e) {
                    var t = new k();
                    return (
                      (t.ownerDocument = this),
                      (t.nodeName = e),
                      (t.tagName = e),
                      (t.childNodes = new A()),
                      ((t.attributes = new N())._ownerElement = t)
                    );
                  },
                  createDocumentFragment: function () {
                    var e = new q();
                    return (
                      (e.ownerDocument = this), (e.childNodes = new A()), e
                    );
                  },
                  createTextNode: function (e) {
                    var t = new K();
                    return (t.ownerDocument = this), t.appendData(e), t;
                  },
                  createComment: function (e) {
                    var t = new H();
                    return (t.ownerDocument = this), t.appendData(e), t;
                  },
                  createCDATASection: function (e) {
                    var t = new V();
                    return (t.ownerDocument = this), t.appendData(e), t;
                  },
                  createProcessingInstruction: function (e, t) {
                    var n = new z();
                    return (
                      (n.ownerDocument = this),
                      (n.tagName = n.target = e),
                      (n.nodeValue = n.data = t),
                      n
                    );
                  },
                  createAttribute: function (e) {
                    var t = new F();
                    return (
                      (t.ownerDocument = this),
                      (t.name = e),
                      (t.nodeName = e),
                      (t.localName = e),
                      (t.specified = !0),
                      t
                    );
                  },
                  createEntityReference: function (e) {
                    var t = new W();
                    return (t.ownerDocument = this), (t.nodeName = e), t;
                  },
                  createElementNS: function (e, t) {
                    var n = new k(),
                      r = t.split(":"),
                      o = (n.attributes = new N());
                    return (
                      (n.childNodes = new A()),
                      (n.ownerDocument = this),
                      (n.nodeName = t),
                      (n.tagName = t),
                      (n.namespaceURI = e),
                      2 == r.length
                        ? ((n.prefix = r[0]), (n.localName = r[1]))
                        : (n.localName = t),
                      (o._ownerElement = n)
                    );
                  },
                  createAttributeNS: function (e, t) {
                    var n = new F(),
                      r = t.split(":");
                    return (
                      (n.ownerDocument = this),
                      (n.nodeName = t),
                      (n.name = t),
                      (n.namespaceURI = e),
                      (n.specified = !0),
                      2 == r.length
                        ? ((n.prefix = r[0]), (n.localName = r[1]))
                        : (n.localName = t),
                      n
                    );
                  },
                }),
                r(D, L),
                (D.prototype.getElementsByTagName = (k.prototype = {
                  nodeType: i,
                  hasAttribute: function (e) {
                    return null != this.getAttributeNode(e);
                  },
                  getAttribute: function (e) {
                    var t = this.getAttributeNode(e);
                    return (t && t.value) || "";
                  },
                  getAttributeNode: function (e) {
                    return this.attributes.getNamedItem(e);
                  },
                  setAttribute: function (e, t) {
                    var n = this.ownerDocument.createAttribute(e);
                    (n.value = n.nodeValue = "" + t), this.setAttributeNode(n);
                  },
                  removeAttribute: function (e) {
                    var t = this.getAttributeNode(e);
                    t && this.removeAttributeNode(t);
                  },
                  appendChild: function (e) {
                    return e.nodeType === E
                      ? this.insertBefore(e, null)
                      : (function (e, t) {
                          var n = t.parentNode;
                          if (n) {
                            var r = e.lastChild;
                            n.removeChild(t), (r = e.lastChild);
                          }
                          return (
                            (r = e.lastChild),
                            (t.parentNode = e),
                            (t.previousSibling = r),
                            (t.nextSibling = null),
                            r ? (r.nextSibling = t) : (e.firstChild = t),
                            (e.lastChild = t),
                            x(e.ownerDocument, e, t),
                            t
                          );
                        })(this, e);
                  },
                  setAttributeNode: function (e) {
                    return this.attributes.setNamedItem(e);
                  },
                  setAttributeNodeNS: function (e) {
                    return this.attributes.setNamedItemNS(e);
                  },
                  removeAttributeNode: function (e) {
                    return this.attributes.removeNamedItem(e.nodeName);
                  },
                  removeAttributeNS: function (e, t) {
                    var n = this.getAttributeNodeNS(e, t);
                    n && this.removeAttributeNode(n);
                  },
                  hasAttributeNS: function (e, t) {
                    return null != this.getAttributeNodeNS(e, t);
                  },
                  getAttributeNS: function (e, t) {
                    var n = this.getAttributeNodeNS(e, t);
                    return (n && n.value) || "";
                  },
                  setAttributeNS: function (e, t, n) {
                    var r = this.ownerDocument.createAttributeNS(e, t);
                    (r.value = r.nodeValue = "" + n), this.setAttributeNode(r);
                  },
                  getAttributeNodeNS: function (e, t) {
                    return this.attributes.getNamedItemNS(e, t);
                  },
                  getElementsByTagName: function (e) {
                    return new I(this, function (t) {
                      var n = [];
                      return (
                        w(t, function (r) {
                          r === t ||
                            r.nodeType != i ||
                            ("*" !== e && r.tagName != e) ||
                            n.push(r);
                        }),
                        n
                      );
                    });
                  },
                  getElementsByTagNameNS: function (e, t) {
                    return new I(this, function (n) {
                      var r = [];
                      return (
                        w(n, function (o) {
                          o === n ||
                            o.nodeType !== i ||
                            ("*" !== e && o.namespaceURI !== e) ||
                            ("*" !== t && o.localName != t) ||
                            r.push(o);
                        }),
                        r
                      );
                    });
                  },
                }).getElementsByTagName),
                (D.prototype.getElementsByTagNameNS =
                  k.prototype.getElementsByTagNameNS),
                r(k, L),
                (F.prototype.nodeType = s),
                r(F, L),
                (B.prototype = {
                  data: "",
                  substringData: function (e, t) {
                    return this.data.substring(e, e + t);
                  },
                  appendData: function (e) {
                    (e = this.data + e),
                      (this.nodeValue = this.data = e),
                      (this.length = e.length);
                  },
                  insertData: function (e, t) {
                    this.replaceData(e, 0, t);
                  },
                  appendChild: function (e) {
                    throw new Error(C[_]);
                  },
                  deleteData: function (e, t) {
                    this.replaceData(e, t, "");
                  },
                  replaceData: function (e, t, n) {
                    (n =
                      this.data.substring(0, e) +
                      n +
                      this.data.substring(e + t)),
                      (this.nodeValue = this.data = n),
                      (this.length = n.length);
                  },
                }),
                r(B, L),
                (K.prototype = {
                  nodeName: "#text",
                  nodeType: a,
                  splitText: function (e) {
                    var t = this.data,
                      n = t.substring(e);
                    (t = t.substring(0, e)),
                      (this.data = this.nodeValue = t),
                      (this.length = t.length);
                    var r = this.ownerDocument.createTextNode(n);
                    return (
                      this.parentNode &&
                        this.parentNode.insertBefore(r, this.nextSibling),
                      r
                    );
                  },
                }),
                r(K, B),
                (H.prototype = { nodeName: "#comment", nodeType: p }),
                r(H, B),
                (V.prototype = { nodeName: "#cdata-section", nodeType: c }),
                r(V, B),
                (j.prototype.nodeType = h),
                r(j, L),
                (J.prototype.nodeType = g),
                r(J, L),
                (X.prototype.nodeType = l),
                r(X, L),
                (W.prototype.nodeType = u),
                r(W, L),
                (q.prototype.nodeName = "#document-fragment"),
                (q.prototype.nodeType = E),
                r(q, L),
                (z.prototype.nodeType = d),
                r(z, L),
                (Q.prototype.serializeToString = function (e, t, n) {
                  return $.call(e, t, n);
                }),
                (L.prototype.toString = $);
              try {
                Object.defineProperty &&
                  (Object.defineProperty(I.prototype, "length", {
                    get: function () {
                      return v(this), this.$$length;
                    },
                  }),
                  Object.defineProperty(L.prototype, "textContent", {
                    get: function () {
                      return (function e(t) {
                        switch (t.nodeType) {
                          case i:
                          case E:
                            var n = [];
                            for (t = t.firstChild; t; )
                              7 !== t.nodeType &&
                                8 !== t.nodeType &&
                                n.push(e(t)),
                                (t = t.nextSibling);
                            return n.join("");
                          default:
                            return t.nodeValue;
                        }
                      })(this);
                    },
                    set: function (e) {
                      switch (this.nodeType) {
                        case i:
                        case E:
                          for (; this.firstChild; )
                            this.removeChild(this.firstChild);
                          (e || String(e)) &&
                            this.appendChild(
                              this.ownerDocument.createTextNode(e)
                            );
                          break;
                        default:
                          (this.data = e),
                            (this.value = e),
                            (this.nodeValue = e);
                      }
                    },
                  }),
                  (te = function (e, t, n) {
                    e["$$" + t] = n;
                  }));
              } catch (e) {}
              (t.DOMImplementation = M), (t.XMLSerializer = Q);
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(3);
              (t.init = function (e) {
                return r.CometChat.getInstance(e);
              }),
                (t.CometChat = r.CometChat);
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = (function () {
                function e() {
                  (this.RECEIPT_TYPE = {
                    READ_RECEIPT: "read",
                    DELIVERY_RECEIPT: "delivery",
                  }),
                    (this.receiptType = this.RECEIPT_TYPE.DELIVERY_RECEIPT);
                }
                return (
                  (e.prototype.getReceiverType = function () {
                    return this.receiverType;
                  }),
                  (e.prototype.setReceiverType = function (e) {
                    this.receiverType = e;
                  }),
                  (e.prototype.getSender = function () {
                    return this.sender;
                  }),
                  (e.prototype.setSender = function (e) {
                    this.sender = e;
                  }),
                  (e.prototype.getReceiver = function () {
                    return this.receiver;
                  }),
                  (e.prototype.setReceiver = function (e) {
                    this.receiver = e;
                  }),
                  (e.prototype.getTimestamp = function () {
                    return this.timestamp;
                  }),
                  (e.prototype.setTimestamp = function (e) {
                    this.timestamp = e;
                  }),
                  (e.prototype.setReadAt = function (e) {
                    this.readAt = e;
                  }),
                  (e.prototype.getReadAt = function () {
                    return this.readAt;
                  }),
                  (e.prototype.setDeliveredAt = function (e) {
                    this.deliveredAt = e;
                  }),
                  (e.prototype.getDeliveredAt = function () {
                    return this.deliveredAt;
                  }),
                  (e.prototype.getMessageId = function () {
                    return this.messageId;
                  }),
                  (e.prototype.setMessageId = function (e) {
                    this.messageId = e;
                  }),
                  (e.prototype.getReceiptType = function () {
                    return this.receiptType;
                  }),
                  (e.prototype.setReceiptType = function (e) {
                    void 0 === e && (e = this.RECEIPT_TYPE.DELIVERY_RECEIPT),
                      (this.receiptType = e);
                  }),
                  e
                );
              })();
              t.MessageReceipt = r;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = n(10),
                i = (function () {
                  function e(e, t, n, i) {
                    r.isFalsy(e) ||
                      ((this.jid = e),
                      (this.uid = o.getUidFromJid(e)),
                      r.isFalsy(i) || (this.priority = i),
                      r.isFalsy(t) || (this.status = t),
                      r.isFalsy(n) || (this.lastActiveAt = n));
                  }
                  return (
                    (e.prototype.getUid = function () {
                      return this.uid;
                    }),
                    (e.prototype.setUid = function (e) {
                      this.uid = e;
                    }),
                    (e.prototype.getJid = function () {
                      return this.jid;
                    }),
                    (e.prototype.setJid = function (e) {
                      this.jid = e;
                    }),
                    (e.prototype.getPriority = function () {
                      return this.priority;
                    }),
                    (e.prototype.setPriority = function (e) {
                      this.priority = e;
                    }),
                    (e.prototype.getStatus = function () {
                      return this.status;
                    }),
                    (e.prototype.setStatus = function (e) {
                      this.status = e;
                    }),
                    (e.prototype.getLastActiveAt = function () {
                      return this.lastActiveAt;
                    }),
                    (e.prototype.setLastActiveAt = function (e) {
                      this.lastActiveAt = e;
                    }),
                    (e.prototype.getStatusMessage = function () {
                      return this.statusMessage;
                    }),
                    (e.prototype.setStatusMessage = function (e) {
                      this.statusMessage = e;
                    }),
                    e
                  );
                })();
              t.UserPresence = i;
            },
            function (e, t, n) {
              !(function (e) {
                "use strict";
                var t,
                  n,
                  r = {}.hasOwnProperty,
                  o = function (e, t) {
                    return function () {
                      return e.apply(t, arguments);
                    };
                  };
                e.Strophe.addConnectionPlugin("muc", {
                  _connection: null,
                  rooms: {},
                  roomNames: [],
                  init: function (t) {
                    return (
                      (this._connection = t),
                      (this._muc_handler = null),
                      e.Strophe.addNamespace(
                        "MUC_OWNER",
                        e.Strophe.NS.MUC + "#owner"
                      ),
                      e.Strophe.addNamespace(
                        "MUC_ADMIN",
                        e.Strophe.NS.MUC + "#admin"
                      ),
                      e.Strophe.addNamespace(
                        "MUC_USER",
                        e.Strophe.NS.MUC + "#user"
                      ),
                      e.Strophe.addNamespace(
                        "MUC_ROOMCONF",
                        e.Strophe.NS.MUC + "#roomconfig"
                      ),
                      e.Strophe.addNamespace(
                        "MUC_REGISTER",
                        "jabber:iq:register"
                      )
                    );
                  },
                  join: function (t, r, o, i, s, a, c, u) {
                    var l, d, p;
                    return (
                      (d = this.test_append_nick(t, r)),
                      (l = e
                        .$pres({ from: this._connection.jid, to: d })
                        .c("x", { xmlns: e.Strophe.NS.MUC })),
                      null != c && (l = l.c("history", c).up()),
                      null != a &&
                        l.cnode(e.Strophe.xmlElement("password", [], a)),
                      null != u && l.up().cnode(u),
                      null == this._muc_handler &&
                        (this._muc_handler = this._connection.addHandler(
                          ((p = this),
                          function (n) {
                            var r, o, i, s, a, c, u, l;
                            if (!(r = n.getAttribute("from"))) return !0;
                            if (((c = r.split("/")[0]), !p.rooms[c])) return !0;
                            if (
                              ((t = p.rooms[c]),
                              (o = {}),
                              "message" === n.nodeName)
                            )
                              o = t._message_handlers;
                            else if (
                              "presence" === n.nodeName &&
                              0 < (l = n.getElementsByTagName("x")).length
                            )
                              for (i = 0, a = l.length; i < a; i++)
                                if (
                                  (u = l[i].getAttribute("xmlns")) &&
                                  u.match(e.Strophe.NS.MUC)
                                ) {
                                  o = t._presence_handlers;
                                  break;
                                }
                            for (s in o) (0, o[s])(n, t) || delete o[s];
                            return !0;
                          })
                        )),
                      this.rooms.hasOwnProperty(t) ||
                        ((this.rooms[t] = new n(this, t, r, a)),
                        i && this.rooms[t].addHandler("presence", i),
                        o && this.rooms[t].addHandler("message", o),
                        s && this.rooms[t].addHandler("roster", s),
                        this.roomNames.push(t)),
                      this._connection.send(l)
                    );
                  },
                  leave: function (t, n, r, o) {
                    var i, s, a, c;
                    return (
                      (i = this.roomNames.indexOf(t)),
                      delete this.rooms[t],
                      0 <= i &&
                        (this.roomNames.splice(i, 1),
                        0 === this.roomNames.length &&
                          (this._connection.deleteHandler(this._muc_handler),
                          (this._muc_handler = null))),
                      (c = this.test_append_nick(t, n)),
                      (a = this._connection.getUniqueId()),
                      (s = e.$pres({
                        type: "unavailable",
                        id: a,
                        from: this._connection.jid,
                        to: c,
                      })),
                      null != o && s.c("status", o),
                      null != r &&
                        this._connection.addHandler(
                          r,
                          null,
                          "presence",
                          null,
                          a
                        ),
                      this._connection.send(s),
                      a
                    );
                  },
                  message: function (t, n, r, o, i, s) {
                    var a, c, u;
                    return (
                      (u = this.test_append_nick(t, n)),
                      (i = i || (null != n ? "chat" : "groupchat")),
                      (s = s || this._connection.getUniqueId()),
                      (a = e
                        .$msg({
                          to: u,
                          from: this._connection.jid,
                          type: i,
                          id: s,
                        })
                        .c("body")
                        .t(r)).up(),
                      null != o &&
                        (a
                          .c("html", { xmlns: e.Strophe.NS.XHTML_IM })
                          .c("body", { xmlns: e.Strophe.NS.XHTML })
                          .h(o),
                        0 === a.node.childNodes.length
                          ? ((c = a.node.parentNode),
                            a.up().up(),
                            a.node.removeChild(c))
                          : a.up().up()),
                      a.c("x", { xmlns: "jabber:x:event" }).c("composing"),
                      this._connection.send(a),
                      s
                    );
                  },
                  groupchat: function (e, t, n, r) {
                    return this.message(e, null, t, n, void 0, r);
                  },
                  invite: function (t, n, r) {
                    var o, i;
                    return (
                      (i = this._connection.getUniqueId()),
                      (o = e
                        .$msg({ from: this._connection.jid, to: t, id: i })
                        .c("x", { xmlns: e.Strophe.NS.MUC_USER })
                        .c("invite", { to: n })),
                      null != r && o.c("reason", r),
                      this._connection.send(o),
                      i
                    );
                  },
                  multipleInvites: function (t, n, r) {
                    var o, i, s, a, c;
                    for (
                      a = this._connection.getUniqueId(),
                        i = e
                          .$msg({ from: this._connection.jid, to: t, id: a })
                          .c("x", { xmlns: e.Strophe.NS.MUC_USER }),
                        o = 0,
                        s = n.length;
                      o < s;
                      o++
                    )
                      (c = n[o]),
                        i.c("invite", { to: c }),
                        null != r && (i.c("reason", r), i.up()),
                        i.up();
                    return this._connection.send(i), a;
                  },
                  directInvite: function (t, n, r, o) {
                    var i, s, a;
                    return (
                      (a = this._connection.getUniqueId()),
                      (i = { xmlns: "jabber:x:conference", jid: t }),
                      null != r && (i.reason = r),
                      null != o && (i.password = o),
                      (s = e
                        .$msg({ from: this._connection.jid, to: n, id: a })
                        .c("x", i)),
                      this._connection.send(s),
                      a
                    );
                  },
                  queryOccupants: function (t, n, r) {
                    var o, i;
                    return (
                      (o = { xmlns: e.Strophe.NS.DISCO_ITEMS }),
                      (i = e
                        .$iq({ from: this._connection.jid, to: t, type: "get" })
                        .c("query", o)),
                      this._connection.sendIQ(i, n, r)
                    );
                  },
                  configure: function (t, n, r) {
                    var o;
                    return (
                      (o = e
                        .$iq({ to: t, type: "get" })
                        .c("query", { xmlns: e.Strophe.NS.MUC_OWNER })
                        .tree()),
                      this._connection.sendIQ(o, n, r)
                    );
                  },
                  cancelConfigure: function (t) {
                    var n;
                    return (
                      (n = e
                        .$iq({ to: t, type: "set" })
                        .c("query", { xmlns: e.Strophe.NS.MUC_OWNER })
                        .c("x", { xmlns: "jabber:x:data", type: "cancel" })
                        .tree()),
                      this._connection.sendIQ(n)
                    );
                  },
                  saveConfiguration: function (t, n, r, o) {
                    var i, s, a, c, u;
                    if (
                      ((a = e
                        .$iq({ to: t, type: "set" })
                        .c("query", { xmlns: e.Strophe.NS.MUC_OWNER })),
                      void 0 !== e.Strophe.x &&
                        void 0 !== e.Strophe.x.Form &&
                        n instanceof e.Strophe.x.Form)
                    )
                      (n.type = "submit"), a.cnode(n.toXML());
                    else
                      for (
                        a.c("x", { xmlns: "jabber:x:data", type: "submit" }),
                          s = 0,
                          c = n.length;
                        s < c;
                        s++
                      )
                        (i = n[s]), a.cnode(i).up();
                    return (u = a.tree()), this._connection.sendIQ(u, r, o);
                  },
                  createInstantRoom: function (t, n, r) {
                    var o;
                    return (
                      (o = e
                        .$iq({ to: t, type: "set" })
                        .c("query", { xmlns: e.Strophe.NS.MUC_OWNER })
                        .c("x", { xmlns: "jabber:x:data", type: "submit" })),
                      this._connection.sendIQ(o.tree(), n, r)
                    );
                  },
                  createConfiguredRoom: function (t, n, o, i) {
                    var s, a, c;
                    for (s in ((a = e
                      .$iq({ to: t, type: "set" })
                      .c("query", { xmlns: e.Strophe.NS.MUC_OWNER })
                      .c("x", { xmlns: "jabber:x:data", type: "submit" }))
                      .c("field", { var: "FORM_TYPE" })
                      .c("value")
                      .t("http://jabber.org/protocol/muc#roomconfig")
                      .up()
                      .up(),
                    n))
                      r.call(n, s) &&
                        ((c = n[s]),
                        a.c("field", { var: s }).c("value").t(c).up().up());
                    return this._connection.sendIQ(a.tree(), o, i);
                  },
                  setTopic: function (t, n) {
                    var r;
                    return (
                      (r = e
                        .$msg({
                          to: t,
                          from: this._connection.jid,
                          type: "groupchat",
                        })
                        .c("subject", { xmlns: "jabber:client" })
                        .t(n)),
                      this._connection.send(r.tree())
                    );
                  },
                  _modifyPrivilege: function (t, n, r, o, i) {
                    var s;
                    return (
                      (s = e
                        .$iq({ to: t, type: "set" })
                        .c("query", { xmlns: e.Strophe.NS.MUC_ADMIN })
                        .cnode(n.node)),
                      null != r && s.c("reason", r),
                      this._connection.sendIQ(s.tree(), o, i)
                    );
                  },
                  modifyRole: function (t, n, r, o, i, s) {
                    var a;
                    return (
                      (a = e.$build("item", { nick: n, role: r })),
                      this._modifyPrivilege(t, a, o, i, s)
                    );
                  },
                  kick: function (e, t, n, r, o) {
                    return this.modifyRole(e, t, "none", n, r, o);
                  },
                  voice: function (e, t, n, r, o) {
                    return this.modifyRole(e, t, "participant", n, r, o);
                  },
                  mute: function (e, t, n, r, o) {
                    return this.modifyRole(e, t, "visitor", n, r, o);
                  },
                  op: function (e, t, n, r, o) {
                    return this.modifyRole(e, t, "moderator", n, r, o);
                  },
                  deop: function (e, t, n, r, o) {
                    return this.modifyRole(e, t, "participant", n, r, o);
                  },
                  modifyAffiliation: function (t, n, r, o, i, s) {
                    var a;
                    return (
                      (a = e.$build("item", { jid: n, affiliation: r })),
                      this._modifyPrivilege(t, a, o, i, s)
                    );
                  },
                  ban: function (e, t, n, r, o) {
                    return this.modifyAffiliation(e, t, "outcast", n, r, o);
                  },
                  member: function (e, t, n, r, o) {
                    return this.modifyAffiliation(e, t, "member", n, r, o);
                  },
                  revoke: function (e, t, n, r, o) {
                    return this.modifyAffiliation(e, t, "none", n, r, o);
                  },
                  owner: function (e, t, n, r, o) {
                    return this.modifyAffiliation(e, t, "owner", n, r, o);
                  },
                  admin: function (e, t, n, r, o) {
                    return this.modifyAffiliation(e, t, "admin", n, r, o);
                  },
                  changeNick: function (t, n) {
                    var r, o;
                    return (
                      (o = this.test_append_nick(t, n)),
                      (r = e.$pres({
                        from: this._connection.jid,
                        to: o,
                        id: this._connection.getUniqueId(),
                      })),
                      this._connection.send(r.tree())
                    );
                  },
                  setStatus: function (t, n, r, o) {
                    var i, s;
                    return (
                      (s = this.test_append_nick(t, n)),
                      (i = e.$pres({ from: this._connection.jid, to: s })),
                      null != r && i.c("show", r).up(),
                      null != o && i.c("status", o),
                      this._connection.send(i.tree())
                    );
                  },
                  registrationRequest: function (t, n, r) {
                    var o;
                    return (
                      (o = e
                        .$iq({ to: t, from: this._connection.jid, type: "get" })
                        .c("query", { xmlns: e.Strophe.NS.MUC_REGISTER })),
                      this._connection.sendIQ(
                        o,
                        function (e) {
                          var t, r, o, i, s, a;
                          for (
                            (r = e.getElementsByTagName("field")).length,
                              i = { required: [], optional: [] },
                              s = 0,
                              a = r.length;
                            s < a;
                            s++
                          )
                            (o = {
                              var: (t = r[s]).getAttribute("var"),
                              label: t.getAttribute("label"),
                              type: t.getAttribute("type"),
                            }),
                              0 < t.getElementsByTagName("required").length
                                ? i.required.push(o)
                                : i.optional.push(o);
                          return n(i);
                        },
                        r
                      )
                    );
                  },
                  submitRegistrationForm: function (t, n, r, o) {
                    var i, s, a;
                    for (s in ((i = e
                      .$iq({ to: t, type: "set" })
                      .c("query", { xmlns: e.Strophe.NS.MUC_REGISTER })).c(
                      "x",
                      { xmlns: "jabber:x:data", type: "submit" }
                    ),
                    i
                      .c("field", { var: "FORM_TYPE" })
                      .c("value")
                      .t("http://jabber.org/protocol/muc#register")
                      .up()
                      .up(),
                    n))
                      (a = n[s]),
                        i.c("field", { var: s }).c("value").t(a).up().up();
                    return this._connection.sendIQ(i, r, o);
                  },
                  listRooms: function (t, n, r) {
                    var o;
                    return (
                      (o = e
                        .$iq({ to: t, from: this._connection.jid, type: "get" })
                        .c("query", { xmlns: e.Strophe.NS.DISCO_ITEMS })),
                      this._connection.sendIQ(o, n, r)
                    );
                  },
                  test_append_nick: function (t, n) {
                    return (
                      e.Strophe.escapeNode(e.Strophe.getNodeFromJid(t)) +
                      "@" +
                      e.Strophe.getDomainFromJid(t) +
                      (null != n ? "/" + n : "")
                    );
                  },
                }),
                  (n = (function () {
                    function n(t, n, r, i) {
                      (this.client = t),
                        (this.name = n),
                        (this.nick = r),
                        (this.password = i),
                        (this._roomRosterHandler = o(
                          this._roomRosterHandler,
                          this
                        )),
                        (this._addOccupant = o(this._addOccupant, this)),
                        (this.roster = {}),
                        (this._message_handlers = {}),
                        (this._presence_handlers = {}),
                        (this._roster_handlers = {}),
                        (this._handler_ids = 0),
                        this.client.muc && (this.client = this.client.muc),
                        (this.name = e.Strophe.getBareJidFromJid(this.name)),
                        this.addHandler("presence", this._roomRosterHandler);
                    }
                    return (
                      (n.prototype.join = function (e, t, n) {
                        return this.client.join(
                          this.name,
                          this.nick,
                          e,
                          t,
                          n,
                          this.password
                        );
                      }),
                      (n.prototype.leave = function (e, t) {
                        return (
                          this.client.leave(this.name, this.nick, e, t),
                          delete this.client.rooms[this.name]
                        );
                      }),
                      (n.prototype.message = function (e, t, n, r) {
                        return this.client.message(this.name, e, t, n, r);
                      }),
                      (n.prototype.groupchat = function (e, t) {
                        return this.client.groupchat(this.name, e, t);
                      }),
                      (n.prototype.invite = function (e, t) {
                        return this.client.invite(this.name, e, t);
                      }),
                      (n.prototype.multipleInvites = function (e, t) {
                        return this.client.invite(this.name, e, t);
                      }),
                      (n.prototype.directInvite = function (e, t) {
                        return this.client.directInvite(
                          this.name,
                          e,
                          t,
                          this.password
                        );
                      }),
                      (n.prototype.configure = function (e) {
                        return this.client.configure(this.name, e);
                      }),
                      (n.prototype.cancelConfigure = function () {
                        return this.client.cancelConfigure(this.name);
                      }),
                      (n.prototype.saveConfiguration = function (e) {
                        return this.client.saveConfiguration(this.name, e);
                      }),
                      (n.prototype.queryOccupants = function (e, t) {
                        return this.client.queryOccupants(this.name, e, t);
                      }),
                      (n.prototype.setTopic = function (e) {
                        return this.client.setTopic(this.name, e);
                      }),
                      (n.prototype.modifyRole = function (e, t, n, r, o) {
                        return this.client.modifyRole(this.name, e, t, n, r, o);
                      }),
                      (n.prototype.kick = function (e, t, n, r) {
                        return this.client.kick(this.name, e, t, n, r);
                      }),
                      (n.prototype.voice = function (e, t, n, r) {
                        return this.client.voice(this.name, e, t, n, r);
                      }),
                      (n.prototype.mute = function (e, t, n, r) {
                        return this.client.mute(this.name, e, t, n, r);
                      }),
                      (n.prototype.op = function (e, t, n, r) {
                        return this.client.op(this.name, e, t, n, r);
                      }),
                      (n.prototype.deop = function (e, t, n, r) {
                        return this.client.deop(this.name, e, t, n, r);
                      }),
                      (n.prototype.modifyAffiliation = function (
                        e,
                        t,
                        n,
                        r,
                        o
                      ) {
                        return this.client.modifyAffiliation(
                          this.name,
                          e,
                          t,
                          n,
                          r,
                          o
                        );
                      }),
                      (n.prototype.ban = function (e, t, n, r) {
                        return this.client.ban(this.name, e, t, n, r);
                      }),
                      (n.prototype.member = function (e, t, n, r) {
                        return this.client.member(this.name, e, t, n, r);
                      }),
                      (n.prototype.revoke = function (e, t, n, r) {
                        return this.client.revoke(this.name, e, t, n, r);
                      }),
                      (n.prototype.owner = function (e, t, n, r) {
                        return this.client.owner(this.name, e, t, n, r);
                      }),
                      (n.prototype.admin = function (e, t, n, r) {
                        return this.client.admin(this.name, e, t, n, r);
                      }),
                      (n.prototype.changeNick = function (e) {
                        return (
                          (this.nick = e),
                          this.client.changeNick(this.name, nick)
                        );
                      }),
                      (n.prototype.setStatus = function (e, t) {
                        return this.client.setStatus(
                          this.name,
                          this.nick,
                          e,
                          t
                        );
                      }),
                      (n.prototype.addHandler = function (e, t) {
                        var n;
                        switch (((n = this._handler_ids++), e)) {
                          case "presence":
                            this._presence_handlers[n] = t;
                            break;
                          case "message":
                            this._message_handlers[n] = t;
                            break;
                          case "roster":
                            this._roster_handlers[n] = t;
                            break;
                          default:
                            return this._handler_ids--, null;
                        }
                        return n;
                      }),
                      (n.prototype.removeHandler = function (e) {
                        return (
                          delete this._presence_handlers[e],
                          delete this._message_handlers[e],
                          delete this._roster_handlers[e]
                        );
                      }),
                      (n.prototype._addOccupant = function (e) {
                        var n;
                        return (n = new t(e, this)), (this.roster[n.nick] = n);
                      }),
                      (n.prototype._roomRosterHandler = function (e) {
                        var t, r, o, i, s;
                        switch (
                          ((i = (t = n._parsePresence(e)).nick),
                          (o = t.newnick || null),
                          t.type)
                        ) {
                          case "error":
                            return !0;
                          case "unavailable":
                            o &&
                              ((t.nick = o),
                              this.roster[i] &&
                                this.roster[o] &&
                                (this.roster[i].update(this.roster[o]),
                                (this.roster[o] = this.roster[i])),
                              this.roster[i] &&
                                !this.roster[o] &&
                                (this.roster[o] = this.roster[i].update(t))),
                              delete this.roster[i];
                            break;
                          default:
                            this.roster[i]
                              ? this.roster[i].update(t)
                              : this._addOccupant(t);
                        }
                        for (r in (s = this._roster_handlers))
                          (0, s[r])(this.roster, this) ||
                            delete this._roster_handlers[r];
                        return !0;
                      }),
                      (n._parsePresence = function (t) {
                        var n, r, o, i, s, a, c, u, l, d;
                        for (
                          (o = {}).nick = e.Strophe.getResourceFromJid(
                            t.getAttribute("from")
                          ),
                            o.type = t.getAttribute("type"),
                            o.states = [],
                            i = 0,
                            a = (u = t.childNodes).length;
                          i < a;
                          i++
                        )
                          switch ((n = u[i]).nodeName) {
                            case "error":
                              (o.errorcode = n.getAttribute("code")),
                                (o.error =
                                  null != (l = n.childNodes[0])
                                    ? l.nodeName
                                    : void 0);
                              break;
                            case "status":
                              o.status = n.textContent || null;
                              break;
                            case "show":
                              o.show = n.textContent || null;
                              break;
                            case "x":
                              if (
                                n.getAttribute("xmlns") ===
                                e.Strophe.NS.MUC_USER
                              )
                                for (
                                  s = 0, c = (d = n.childNodes).length;
                                  s < c;
                                  s++
                                )
                                  switch ((r = d[s]).nodeName) {
                                    case "item":
                                      (o.affiliation =
                                        r.getAttribute("affiliation")),
                                        (o.role = r.getAttribute("role")),
                                        (o.jid = r.getAttribute("jid")),
                                        (o.newnick = r.getAttribute("nick"));
                                      break;
                                    case "status":
                                      r.getAttribute("code") &&
                                        o.states.push(r.getAttribute("code"));
                                  }
                          }
                        return o;
                      }),
                      n
                    );
                  })()),
                  (t = (function () {
                    function e(e, t) {
                      (this.room = t),
                        (this.update = o(this.update, this)),
                        (this.admin = o(this.admin, this)),
                        (this.owner = o(this.owner, this)),
                        (this.revoke = o(this.revoke, this)),
                        (this.member = o(this.member, this)),
                        (this.ban = o(this.ban, this)),
                        (this.modifyAffiliation = o(
                          this.modifyAffiliation,
                          this
                        )),
                        (this.deop = o(this.deop, this)),
                        (this.op = o(this.op, this)),
                        (this.mute = o(this.mute, this)),
                        (this.voice = o(this.voice, this)),
                        (this.kick = o(this.kick, this)),
                        (this.modifyRole = o(this.modifyRole, this)),
                        this.update(e);
                    }
                    return (
                      (e.prototype.modifyRole = function (e, t, n, r) {
                        return this.room.modifyRole(this.nick, e, t, n, r);
                      }),
                      (e.prototype.kick = function (e, t, n) {
                        return this.room.kick(this.nick, e, t, n);
                      }),
                      (e.prototype.voice = function (e, t, n) {
                        return this.room.voice(this.nick, e, t, n);
                      }),
                      (e.prototype.mute = function (e, t, n) {
                        return this.room.mute(this.nick, e, t, n);
                      }),
                      (e.prototype.op = function (e, t, n) {
                        return this.room.op(this.nick, e, t, n);
                      }),
                      (e.prototype.deop = function (e, t, n) {
                        return this.room.deop(this.nick, e, t, n);
                      }),
                      (e.prototype.modifyAffiliation = function (e, t, n, r) {
                        return this.room.modifyAffiliation(
                          this.jid,
                          e,
                          t,
                          n,
                          r
                        );
                      }),
                      (e.prototype.ban = function (e, t, n) {
                        return this.room.ban(this.jid, e, t, n);
                      }),
                      (e.prototype.member = function (e, t, n) {
                        return this.room.member(this.jid, e, t, n);
                      }),
                      (e.prototype.revoke = function (e, t, n) {
                        return this.room.revoke(this.jid, e, t, n);
                      }),
                      (e.prototype.owner = function (e, t, n) {
                        return this.room.owner(this.jid, e, t, n);
                      }),
                      (e.prototype.admin = function (e, t, n) {
                        return this.room.admin(this.jid, e, t, n);
                      }),
                      (e.prototype.update = function (e) {
                        return (
                          (this.nick = e.nick || null),
                          (this.affiliation = e.affiliation || null),
                          (this.role = e.role || null),
                          (this.jid = e.jid || null),
                          (this.status = e.status || null),
                          (this.show = e.show || null),
                          this
                        );
                      }),
                      e
                    );
                  })());
              })(n(15));
            },
            function (e, t, n) {
              var r, o;
              (r = [n(15)]),
                void 0 ===
                  (o = function (e) {
                    var t, n, r;
                    return (
                      (t = e.Strophe),
                      e.$build,
                      (n = e.$iq),
                      e.$msg,
                      e.$pres,
                      (r = function (e, r, o) {
                        var i = n(r ? { type: e, to: r } : { type: e });
                        return (
                          i.c("vCard", { xmlns: t.NS.VCARD }),
                          o && i.cnode(o),
                          i
                        );
                      }),
                      t.addConnectionPlugin("vcard", {
                        _connection: null,
                        init: function (e) {
                          return (
                            (this._connection = e),
                            t.addNamespace("VCARD", "vcard-temp")
                          );
                        },
                        get: function (e, t, n) {
                          var o = r("get", t);
                          return this._connection.sendIQ(o, e, n);
                        },
                        set: function (e, t, n, o) {
                          var i = r("set", n, t);
                          return this._connection.sendIQ(i, e, o);
                        },
                      }),
                      e
                    );
                  }.apply(t, r)) || (e.exports = o);
            },
            function (e, t, n) {
              var r, o;
              (r = [n(15)]),
                void 0 ===
                  (o = function (e) {
                    var t, n;
                    return (
                      (t = e.Strophe),
                      e.$build,
                      (n = e.$iq),
                      e.$msg,
                      e.$pres,
                      t.addConnectionPlugin("ping", {
                        _c: null,
                        init: function (e) {
                          (this._c = e),
                            t.addNamespace("PING", "urn:xmpp:ping");
                        },
                        ping: function (e, r, o, i) {
                          var s = this._c.getUniqueId("ping"),
                            a = n({ type: "get", to: e, id: s }).c("ping", {
                              xmlns: t.NS.PING,
                            });
                          this._c.sendIQ(a, r, o, i);
                        },
                        pong: function (e) {
                          var t = e.getAttribute("from"),
                            r = e.getAttribute("id"),
                            o = n({ type: "result", to: t, id: r });
                          this._c.sendIQ(o);
                        },
                        addPingHandler: function (e) {
                          return this._c.addHandler(e, t.NS.PING, "iq", "get");
                        },
                      }),
                      e
                    );
                  }.apply(t, r)) || (e.exports = o);
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(4),
                o = n(0),
                i = n(10),
                s = (function () {
                  function e() {}
                  return (
                    (e.transformVCard = function (e) {
                      var t = {};
                      return (
                        (t[o.UserConstants.NAME] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.NAME)[0]
                          )
                        )),
                        (t[o.UserConstants.UID] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.UID)[0]
                          )
                        )),
                        (t[o.UserConstants.AVATAR] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.AVATAR)[0]
                          )
                        )),
                        (t[o.UserConstants.LINK] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.LINK)[0]
                          )
                        )),
                        (t[o.UserConstants.STATUS] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.STATUS)[0]
                          )
                        )),
                        (t[o.UserConstants.LAST_ACTIVE_AT] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(
                              o.UserConstants.LAST_ACTIVE_AT
                            )[0]
                          )
                        )),
                        (t[o.UserConstants.ROLE] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.ROLE)[0]
                          )
                        )),
                        (t[o.UserConstants.USER_NAME] = unescape(
                          i.parseHTML(
                            e.getElementsByTagName(o.UserConstants.USER_NAME)[0]
                          )
                        )),
                        new r.User(t)
                      );
                    }),
                    e
                  );
                })();
              t.VCardController = s;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(3),
                o = n(1),
                i = n(0),
                s = n(11),
                a = n(2),
                c = (function () {
                  function e(e) {
                    (this.store = i.constants.DEFAULT_STORE),
                      o.isFalsy(e) || (this.store = e),
                      (this.keyStore = s.createInstance({
                        name: o.format(
                          i.LOCAL_STORE.STORE_STRING,
                          r.CometChat.getAppId(),
                          i.LOCAL_STORE.KEYS_STORE
                        ),
                      })),
                      this.keyStore.setDriver([
                        s.LOCALSTORAGE,
                        s.INDEXEDDB,
                        s.WEBSQL,
                      ]);
                  }
                  return (
                    (e.getInstance = function () {
                      return (
                        null == e.KeyStore && (e.KeyStore = new e()), e.KeyStore
                      );
                    }),
                    (e.prototype.set = function (e, t) {
                      return this.keyStore.setItem(e, t);
                    }),
                    (e.prototype.remove = function (e) {
                      this.keyStore.removeItem(e);
                    }),
                    (e.prototype.get = function (e) {
                      var t = this;
                      return new Promise(function (n, r) {
                        try {
                          t.keyStore.getItem(e).then(
                            function (e) {
                              try {
                                n(JSON.parse(e));
                              } catch (t) {
                                n(e);
                              }
                            },
                            function (e) {
                              r(e);
                            }
                          );
                        } catch (e) {
                          r(new a.CometChatException(e));
                        }
                      });
                    }),
                    (e.prototype.clearStore = function () {
                      return this.keyStore.clear();
                    }),
                    e
                  );
                })();
              t.KeyStore = c;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(5),
                o = n(1),
                i = n(2),
                s = n(16),
                a = n(0),
                c = (function () {
                  function e(e) {
                    (this.cursor = -1),
                      (this.total = -1),
                      (this.next_page = 1),
                      (this.last_page = -1),
                      (this.current_page = 1),
                      (this.total_pages = -1),
                      (this.hasJoined = 0),
                      (this.withTags = !1),
                      (this.pagination = {
                        total: 0,
                        count: 0,
                        per_page: 0,
                        current_page: 0,
                        total_pages: 0,
                        links: [],
                      }),
                      o.isFalsy(e) ||
                        (o.isFalsy(e.limit) || (this.limit = e.limit),
                        o.isFalsy(e.searchKeyword) ||
                          (this.searchKeyword = e.searchKeyword),
                        o.isFalsy(e.hasJoined) || (this.hasJoined = 1),
                        o.isFalsy(e.tags) || (this.tags = e.tags),
                        o.isFalsy(e.showTags) || (this.withTags = e.showTags));
                  }
                  return (
                    (e.prototype.validateGroupBuilder = function () {
                      if (void 0 === this.limit)
                        return new i.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(a.GENERAL_ERROR.METHOD_COMPULSORY),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "Set Limit"
                            )
                          )
                        );
                      if (isNaN(this.limit))
                        return new i.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(
                                a.GENERAL_ERROR.PARAMETER_MUST_BE_A_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (this.limit > a.DEFAULT_VALUES.GROUPS_MAX_LIMIT)
                        return new i.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(a.GENERAL_ERROR.LIMIT_EXCEEDED),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              a.DEFAULT_VALUES.GROUPS_MAX_LIMIT
                            )
                          )
                        );
                      if (this.limit < a.DEFAULT_VALUES.ZERO)
                        return new i.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(
                                a.GENERAL_ERROR
                                  .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (void 0 !== this.searchKeyword) {
                        if (
                          typeof this.searchKeyword !==
                          a.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "setSearchKeyword()"
                              )
                            )
                          );
                        if (o.isFalsy(this.searchKeyword.trim()))
                          return new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(a.GENERAL_ERROR.INVALID),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "search keyword",
                                "search keyword"
                              )
                            )
                          );
                        this.searchKeyword = this.searchKeyword.trim();
                      }
                      if (void 0 !== this.withTags) {
                        if (
                          typeof this.withTags !==
                          a.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                        )
                          return new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.PARAMETER_MUST_BE_A_BOOLEAN
                                ),
                                "WITH_TAGS",
                                "WITH_TAGS",
                                "withTags()"
                              )
                            )
                          );
                        1 == this.withTags
                          ? (this.withTags = !0)
                          : (this.withTags = !1);
                      }
                      return void 0 === this.tags || Array.isArray(this.tags)
                        ? void 0
                        : new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.PARAMETER_MUST_BE_AN_ARRAY
                                ),
                                "TAGS",
                                "TAGS",
                                "setTags()"
                              )
                            )
                          );
                    }),
                    (e.prototype.fetchPrevious = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          0 == e.next_page && t([]);
                          var o = e.validateGroupBuilder();
                          return o instanceof i.CometChatException
                            ? void n(o)
                            : r.makeApiCall("groups", {}, e.getPreData()).then(
                                function (n) {
                                  if (
                                    (n.meta &&
                                      (e.total_pages =
                                        n.meta.pagination.total_pages),
                                    0 < n.data.length)
                                  ) {
                                    e.pagination = n.meta.pagination;
                                    var r = [];
                                    n.data.map(function (e, t) {
                                      r.push(
                                        s.GroupsController.trasformJSONGroup(e)
                                      );
                                    }),
                                      t(r);
                                  }
                                  t([]);
                                },
                                function (e) {
                                  n(new i.CometChatException(e.error));
                                }
                              );
                        } catch (o) {
                          n(new i.CometChatException(o));
                        }
                      });
                    }),
                    (e.prototype.fetchNext = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          var o = e.validateGroupBuilder();
                          if (o instanceof i.CometChatException)
                            return void n(o);
                          r.makeApiCall("getGroups", {}, e.getNextData()).then(
                            function (n) {
                              if (
                                (n.meta &&
                                  (e.total_pages =
                                    n.meta.pagination.total_pages),
                                0 < n.data.length)
                              ) {
                                e.pagination = n.meta.pagination;
                                var r = [];
                                n.data.map(function (e, t) {
                                  r.push(
                                    s.GroupsController.trasformJSONGroup(e)
                                  );
                                }),
                                  t(r);
                              }
                              t([]);
                            },
                            function (e) {
                              n(new i.CometChatException(e.error));
                            }
                          );
                        } catch (o) {
                          n(new i.CometChatException(o));
                        }
                      });
                    }),
                    (e.prototype.getNextData = function () {
                      var e = {};
                      if (
                        ((e.per_page = this.limit),
                        o.isFalsy(this.searchKeyword) ||
                          (e.searchKey = this.searchKeyword),
                        o.isFalsy(this.hasJoined) || (e.hasJoined = 1),
                        o.isFalsy(this.tags) || (e.tags = this.tags),
                        o.isFalsy(this.withTags) || (e.withTags = 1),
                        1 == this.current_page)
                      )
                        (e.page = this.next_page),
                          this.next_page++,
                          this.current_page++;
                      else {
                        if (this.next_page > this.total_pages)
                          return (e.page = this.next_page), e;
                        e.page = this.next_page++;
                      }
                      return e;
                    }),
                    (e.prototype.getPreData = function () {
                      var e = {};
                      return (
                        (e.per_page = this.limit),
                        0 <= this.next_page &&
                          0 < this.next_page &&
                          (e.page = --this.next_page),
                        e
                      );
                    }),
                    (e.MAX_LIMIT = 100),
                    (e.DEFAULT_LIMIT = 30),
                    e
                  );
                })();
              t.GroupsRequest = c;
              var u = (function () {
                function e() {}
                return (
                  (e.prototype.setLimit = function (e) {
                    return (this.limit = e), this;
                  }),
                  (e.prototype.setSearchKeyword = function (e) {
                    return (this.searchKeyword = e), this;
                  }),
                  (e.prototype.joinedOnly = function (e) {
                    return (this.hasJoined = e), this;
                  }),
                  (e.prototype.setTags = function (e) {
                    return (this.tags = e), this;
                  }),
                  (e.prototype.withTags = function (e) {
                    return (this.showTags = e), this;
                  }),
                  (e.prototype.build = function () {
                    return new c(this);
                  }),
                  e
                );
              })();
              t.GroupsRequestBuilder = u;
            },
            function (e, t, n) {
              "use strict";
              var r,
                o =
                  (this && this.__extends) ||
                  ((r = function (e, t) {
                    return (r =
                      Object.setPrototypeOf ||
                      ({ __proto__: [] } instanceof Array &&
                        function (e, t) {
                          e.__proto__ = t;
                        }) ||
                      function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                      })(e, t);
                  }),
                  function (e, t) {
                    function n() {
                      this.constructor = e;
                    }
                    r(e, t),
                      (e.prototype =
                        null === t
                          ? Object.create(t)
                          : ((n.prototype = t.prototype), new n()));
                  });
              t.__esModule = !0;
              var i = n(5),
                s = n(1),
                a = n(9),
                c = n(2),
                u = n(53),
                l = n(0),
                d = (function () {
                  function e(e) {
                    (this.cursor = -1),
                      (this.total = -1),
                      (this.next_page = 1),
                      (this.last_page = -1),
                      (this.current_page = 1),
                      (this.total_pages = -1),
                      (this.isOutCastReq = !1),
                      (this.pagination = {
                        total: 0,
                        count: 0,
                        per_page: 0,
                        current_page: 0,
                        total_pages: 0,
                        links: [],
                      }),
                      (this.store = a.LocalStorage.getInstance()),
                      s.isFalsy(e) ||
                        ((this.limit = e.limit),
                        (this.guid = e.guid),
                        s.isFalsy(e.searchKeyword) ||
                          (this.searchKeyword = e.searchKeyword),
                        s.isFalsy(e.scopes) || (this.scopes = e.scopes),
                        e instanceof f && (this.isOutCastReq = e.isOutCastReq));
                  }
                  return (
                    (e.prototype.validateGroupMembersBuilder = function () {
                      if (void 0 === this.limit)
                        return new c.CometChatException(
                          JSON.parse(
                            s.format(
                              JSON.stringify(l.GENERAL_ERROR.METHOD_COMPULSORY),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "Set Limit"
                            )
                          )
                        );
                      if (isNaN(this.limit))
                        return new c.CometChatException(
                          JSON.parse(
                            s.format(
                              JSON.stringify(
                                l.GENERAL_ERROR.PARAMETER_MUST_BE_A_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (this.limit > l.DEFAULT_VALUES.USERS_MAX_LIMIT)
                        return new c.CometChatException(
                          JSON.parse(
                            s.format(
                              JSON.stringify(l.GENERAL_ERROR.LIMIT_EXCEEDED),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              l.DEFAULT_VALUES.USERS_MAX_LIMIT
                            )
                          )
                        );
                      if (this.limit < l.DEFAULT_VALUES.ZERO)
                        return new c.CometChatException(
                          JSON.parse(
                            s.format(
                              JSON.stringify(
                                l.GENERAL_ERROR
                                  .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (void 0 !== this.searchKeyword) {
                        if (
                          typeof this.searchKeyword !==
                          l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new c.CometChatException(
                            JSON.parse(
                              s.format(
                                JSON.stringify(
                                  l.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "setSearchKeyword()"
                              )
                            )
                          );
                        if (s.isFalsy(this.searchKeyword.trim()))
                          return new c.CometChatException(
                            JSON.parse(
                              s.format(
                                JSON.stringify(l.GENERAL_ERROR.INVALID),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "search keyword",
                                "search keyword"
                              )
                            )
                          );
                        this.searchKeyword = this.searchKeyword.trim();
                      }
                      if (void 0 !== this.guid) {
                        if (
                          typeof this.guid !==
                          l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new c.CometChatException(
                            JSON.parse(
                              s.format(
                                JSON.stringify(
                                  l.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "GUID",
                                "GUID",
                                "GroupMembersRequestBuilder()"
                              )
                            )
                          );
                        if (s.isFalsy(this.guid))
                          return new c.CometChatException(
                            JSON.parse(
                              s.format(
                                JSON.stringify(l.GENERAL_ERROR.INVALID),
                                "GUID",
                                "GUID",
                                "GUID",
                                "GUID"
                              )
                            )
                          );
                      }
                      return void 0 === this.scopes ||
                        Array.isArray(this.scopes)
                        ? void 0
                        : new c.CometChatException(
                            JSON.parse(
                              s.format(
                                JSON.stringify(
                                  l.GENERAL_ERROR.PARAMETER_MUST_BE_AN_ARRAY
                                ),
                                "SET_SCOPES",
                                "SET_SCOPES",
                                "setScopes()"
                              )
                            )
                          );
                    }),
                    (e.prototype.fetchPrevious = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          0 == e.next_page && t([]);
                          var r = e.validateGroupMembersBuilder();
                          return r instanceof c.CometChatException
                            ? void n(r)
                            : i
                                .makeApiCall(
                                  e.isOutCastReq
                                    ? "getBannedGroupMembers"
                                    : "getGroupMembers",
                                  { guid: e.guid },
                                  e.getPreData()
                                )
                                .then(
                                  function (n) {
                                    if (
                                      (n.meta &&
                                        (e.total_pages =
                                          n.meta.pagination.total_pages),
                                      0 < n.data.length)
                                    ) {
                                      e.pagination = n.meta.pagination;
                                      var r = [];
                                      n.data.map(function (t) {
                                        (t.guid = e.guid),
                                          r.push(
                                            u.GroupMembersController.trasformJSONGroupMember(
                                              t
                                            )
                                          );
                                      }),
                                        t(r);
                                    }
                                    t([]);
                                  },
                                  function (e) {
                                    n(new c.CometChatException(e.error));
                                  }
                                );
                        } catch (r) {
                          n(new c.CometChatException(r));
                        }
                      });
                    }),
                    (e.prototype.fetchNext = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          var r = e.validateGroupMembersBuilder();
                          if (r instanceof c.CometChatException)
                            return void n(r);
                          i.makeApiCall(
                            e.isOutCastReq
                              ? "getBannedGroupMembers"
                              : "getGroupMembers",
                            { guid: e.guid },
                            e.getNextData()
                          ).then(
                            function (n) {
                              if (
                                (n.meta &&
                                  (e.total_pages =
                                    n.meta.pagination.total_pages),
                                0 < n.data.length)
                              ) {
                                e.pagination = n.meta.pagination;
                                var r = [];
                                n.data.map(function (t) {
                                  (t.guid = e.guid),
                                    r.push(
                                      u.GroupMembersController.trasformJSONGroupMember(
                                        t
                                      )
                                    );
                                }),
                                  t(r);
                              } else t([]);
                            },
                            function (e) {
                              n(new c.CometChatException(e.error));
                            }
                          );
                        } catch (r) {
                          n(new c.CometChatException(r));
                        }
                      });
                    }),
                    (e.prototype.getNextData = function () {
                      var e = {};
                      if (
                        ((e.per_page = this.limit),
                        s.isFalsy(this.searchKeyword) ||
                          (e.searchKey = this.searchKeyword),
                        s.isFalsy(this.scopes) || (e.scopes = this.scopes),
                        1 == this.current_page)
                      )
                        (e.page = this.next_page),
                          this.next_page++,
                          this.current_page++;
                      else {
                        if (this.next_page > this.total_pages)
                          return (e.page = this.next_page), e;
                        e.page = this.next_page++;
                      }
                      return e;
                    }),
                    (e.prototype.getPreData = function () {
                      var e = {};
                      return (
                        (e.per_page = this.limit),
                        0 <= this.next_page &&
                          0 < this.next_page &&
                          (e.page = --this.next_page),
                        e
                      );
                    }),
                    (e.MAX_LIMIT = 2),
                    (e.DEFAULT_LIMIT = 1),
                    e
                  );
                })();
              t.GroupMembersRequest = d;
              var p = (function () {
                  function e(e) {
                    this.guid = e;
                  }
                  return (
                    (e.prototype.setLimit = function (e) {
                      return (this.limit = e), this;
                    }),
                    (e.prototype.setSearchKeyword = function (e) {
                      return (this.searchKeyword = e), this;
                    }),
                    (e.prototype.setScopes = function (e) {
                      return (this.scopes = e), this;
                    }),
                    (e.prototype.build = function () {
                      return new d(this);
                    }),
                    e
                  );
                })(),
                f = (function (e) {
                  function t(t) {
                    var n = e.call(this, t) || this;
                    return (n.isOutCastReq = !0), n;
                  }
                  return (
                    o(t, e),
                    (t.prototype.build = function () {
                      return new d(this);
                    }),
                    t
                  );
                })((t.GroupMembersRequestBuilder = p));
              t.GroupOutCastMembersRequestBuilder = f;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(40),
                o = n(0),
                i = n(1),
                s = (function () {
                  function e() {}
                  return (
                    (e.trasformJSONGroupMember = function (e) {
                      var t;
                      try {
                        return (
                          e.status && "offline" !== e.status
                            ? (e.status = "online")
                            : (e.status = "offline"),
                          (t = new r.GroupMember(
                            e[o.GroupMemersConstans.KEYS.UID]
                          )),
                          Object.assign(t, e),
                          t
                        );
                      } catch (t) {
                        return (
                          i.Logger.error(
                            "GroupMembersController:trasformJSONGroupMember",
                            { e: t, groupMember: e }
                          ),
                          e
                        );
                      }
                    }),
                    e
                  );
                })();
              t.GroupMembersController = s;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(5),
                o = n(1),
                i = n(8),
                s = n(2),
                a = n(39),
                c = n(0),
                u = n(3),
                l = (function () {
                  function e(t) {
                    (this.next_page = 1),
                      (this.current_page = 1),
                      (this.total_pages = -1),
                      (this.hideBlockedUsers = !1),
                      (this.friendsOnly = !1),
                      (this.fetchingInProgress = !1),
                      (this.withTags = !1),
                      (this.pagination = {
                        total: 0,
                        count: 0,
                        per_page: 0,
                        current_page: 0,
                        total_pages: 0,
                        links: [],
                      }),
                      (e.userStore = a.UserStore.getInstance()),
                      o.isFalsy(t) ||
                        ((this.limit = t.limit),
                        o.isFalsy(t.searchKeyword) ||
                          (this.searchKeyword = t.searchKeyword),
                        o.isFalsy(t.status) ||
                          (t.status == e.USER_STATUS.ONLINE
                            ? (this.status =
                                c.PresenceConstatnts.STATUS.AVAILABLE)
                            : (this.status = t.status)),
                        o.isFalsy(t.shouldHideBlockedUsers) ||
                          (this.hideBlockedUsers = t.shouldHideBlockedUsers),
                        o.isFalsy(t.showFriendsOnly) ||
                          (this.friendsOnly = t.showFriendsOnly),
                        o.isFalsy(t.showTags) || (this.withTags = t.showTags),
                        o.isFalsy(t.role) || (this.role = t.role),
                        o.isFalsy(t.roles) || (this.roles = t.roles),
                        o.isFalsy(t.tags) || (this.tags = t.tags));
                  }
                  return (
                    (e.prototype.validateUserBuilder = function () {
                      if (void 0 === this.limit)
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(c.GENERAL_ERROR.METHOD_COMPULSORY),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "Set Limit"
                            )
                          )
                        );
                      if (isNaN(this.limit))
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(
                                c.GENERAL_ERROR.PARAMETER_MUST_BE_A_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (this.limit > c.DEFAULT_VALUES.USERS_MAX_LIMIT)
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(c.GENERAL_ERROR.LIMIT_EXCEEDED),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              c.DEFAULT_VALUES.USERS_MAX_LIMIT
                            )
                          )
                        );
                      if (this.limit < c.DEFAULT_VALUES.ZERO)
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(
                                c.GENERAL_ERROR
                                  .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (void 0 !== this.searchKeyword) {
                        if (
                          typeof this.searchKeyword !==
                          c.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  c.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "setSearchKeyword()"
                              )
                            )
                          );
                        if (o.isFalsy(this.searchKeyword.trim()))
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(c.GENERAL_ERROR.INVALID),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "search keyword",
                                "search keyword"
                              )
                            )
                          );
                        this.searchKeyword = this.searchKeyword.trim();
                      }
                      if (this.status) {
                        if (
                          typeof this.status !==
                          c.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  c.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "SET_STATUS",
                                "SET_STATUS",
                                "setStatus()"
                              )
                            )
                          );
                        if (
                          "available" != this.status.toLowerCase() &&
                          "offline" != this.status.toLowerCase()
                        )
                          return new s.CometChatException(
                            c.UserErrors.INVALID_STATUS
                          );
                      }
                      if (void 0 !== this.hideBlockedUsers) {
                        if (
                          typeof this.hideBlockedUsers !==
                          c.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  c.GENERAL_ERROR.PARAMETER_MUST_BE_A_BOOLEAN
                                ),
                                "HIDE_BLOCKED_USERS",
                                "HIDE_BLOCKED_USERS",
                                "hideBlockedUsers()"
                              )
                            )
                          );
                        1 == this.hideBlockedUsers
                          ? (this.hideBlockedUsers = !0)
                          : (this.hideBlockedUsers = !1);
                      }
                      if (void 0 !== this.friendsOnly) {
                        if (
                          typeof this.friendsOnly !==
                          c.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  c.GENERAL_ERROR.PARAMETER_MUST_BE_A_BOOLEAN
                                ),
                                "FRIENDS_ONLY",
                                "FRIENDS_ONLY",
                                "friendsOnly()"
                              )
                            )
                          );
                        1 == this.friendsOnly
                          ? (this.friendsOnly = !0)
                          : (this.friendsOnly = !1);
                      }
                      if (void 0 !== this.withTags) {
                        if (
                          typeof this.withTags !==
                          c.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  c.GENERAL_ERROR.MUST_BE_A_BOOLEAN
                                ),
                                "WITH_TAGS",
                                "WITH_TAGS",
                                "withTags()"
                              )
                            )
                          );
                        1 == this.withTags
                          ? (this.withTags = !0)
                          : (this.withTags = !1);
                      }
                      return void 0 === this.roles || Array.isArray(this.roles)
                        ? void 0 === this.tags || Array.isArray(this.tags)
                          ? void 0
                          : new s.CometChatException(
                              JSON.parse(
                                o.format(
                                  JSON.stringify(
                                    c.GENERAL_ERROR.PARAMETER_MUST_BE_AN_ARRAY
                                  ),
                                  "TAGS",
                                  "TAGS",
                                  "setTags()"
                                )
                              )
                            )
                        : new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  c.GENERAL_ERROR.PARAMETER_MUST_BE_AN_ARRAY
                                ),
                                "ROLES",
                                "ROLES",
                                "setRoles()"
                              )
                            )
                          );
                    }),
                    (e.prototype.fetchPrevious = function () {
                      var t = this;
                      return (
                        (this.fetchingInProgress = !0),
                        new Promise(function (n, o) {
                          try {
                            0 == t.next_page &&
                              (n([]), (t.fetchingInProgress = !1));
                            var a = t.validateUserBuilder();
                            if (a instanceof s.CometChatException)
                              return void o(a);
                            if (!t.fetchingInProgress)
                              return r
                                .makeApiCall("users", {}, t.getPreData())
                                .then(
                                  function (r) {
                                    if (
                                      (r.meta &&
                                        (t.total_pages =
                                          r.meta.pagination.total_pages),
                                      0 < r.data.length)
                                    ) {
                                      t.pagination = r.meta.pagination;
                                      var o = [];
                                      r.data.map(function (e, t) {
                                        o.push(
                                          i.UsersController.trasformJSONUser(e)
                                        );
                                      }),
                                        e.userStore.storeUsers(o),
                                        n(o),
                                        (t.fetchingInProgress = !1);
                                    }
                                    n([]), (t.fetchingInProgress = !1);
                                  },
                                  function (e) {
                                    o(new s.CometChatException(e.error)),
                                      (t.fetchingInProgress = !1);
                                  }
                                );
                            n([]);
                          } catch (a) {
                            (t.fetchingInProgress = !1),
                              o(new s.CometChatException(a));
                          }
                        })
                      );
                    }),
                    (e.prototype.fetchNext = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          if (e.fetchingInProgress)
                            (e.fetchingInProgress = !1), t([]);
                          else {
                            e.fetchingInProgress = !0;
                            var a = e.validateUserBuilder();
                            if (a instanceof s.CometChatException)
                              return void n(a);
                            r.makeApiCall("users", {}, e.getNextData()).then(
                              function (n) {
                                if (
                                  (n.meta &&
                                    (e.total_pages =
                                      n.meta.pagination.total_pages),
                                  0 < n.data.length)
                                ) {
                                  e.pagination = n.meta.pagination;
                                  var r = [],
                                    s = [];
                                  n.data.map(function (e) {
                                    r.push(
                                      i.UsersController.trasformJSONUser(e)
                                    ),
                                      s.push(
                                        o.format(
                                          c.XMPP.username_string,
                                          u.CometChat.getAppId(),
                                          e[c.UserConstants.UID]
                                        )
                                      );
                                  }),
                                    t(r);
                                } else t([]);
                                e.fetchingInProgress = !1;
                              },
                              function (t) {
                                (e.fetchingInProgress = !1),
                                  n(new s.CometChatException(t.error));
                              }
                            );
                          }
                        } catch (a) {
                          (e.fetchingInProgress = !1),
                            n(new s.CometChatException(a));
                        }
                      });
                    }),
                    (e.prototype.getNextData = function () {
                      var e = {};
                      if (
                        ((e.per_page = this.limit),
                        o.isFalsy(this.searchKeyword) ||
                          (e.searchKey = this.searchKeyword),
                        o.isFalsy(this.status) || (e.status = this.status),
                        o.isFalsy(this.hideBlockedUsers) ||
                          (e.hideBlockedUsers = 1),
                        o.isFalsy(this.role) || (e.roles = this.role),
                        o.isFalsy(this.roles) || (e.roles = this.roles),
                        o.isFalsy(this.tags) || (e.tags = this.tags),
                        o.isFalsy(this.friendsOnly) || (e.friendsOnly = 1),
                        o.isFalsy(this.withTags) || (e.withTags = 1),
                        1 == this.current_page)
                      )
                        (e.page = this.next_page),
                          this.next_page++,
                          this.current_page++;
                      else {
                        if (this.next_page > this.total_pages)
                          return (e.page = this.next_page), e;
                        e.page = this.next_page++;
                      }
                      return e;
                    }),
                    (e.prototype.getPreData = function () {
                      var e = {};
                      return (
                        (e.per_page = this.limit),
                        0 <= this.next_page &&
                          0 < this.next_page &&
                          (e.page = --this.next_page),
                        e
                      );
                    }),
                    (e.USER_STATUS = {
                      ONLINE: c.PresenceConstatnts.STATUS.ONLINE,
                      OFFLINE: c.PresenceConstatnts.STATUS.OFFLINE,
                    }),
                    e
                  );
                })();
              t.UsersRequest = l;
              var d = (function () {
                function e() {
                  this.shouldHideBlockedUsers = !1;
                }
                return (
                  (e.prototype.setLimit = function (e) {
                    return (this.limit = e), this;
                  }),
                  (e.prototype.setStatus = function (e) {
                    return (this.status = e), this;
                  }),
                  (e.prototype.setSearchKeyword = function (e) {
                    return (this.searchKeyword = e), this;
                  }),
                  (e.prototype.hideBlockedUsers = function (e) {
                    return (this.shouldHideBlockedUsers = e), this;
                  }),
                  (e.prototype.setRole = function (e) {
                    return (this.role = e), this;
                  }),
                  (e.prototype.setRoles = function (e) {
                    return (this.roles = e), this;
                  }),
                  (e.prototype.friendsOnly = function (e) {
                    return (this.showFriendsOnly = e), this;
                  }),
                  (e.prototype.setTags = function (e) {
                    return (this.tags = e), this;
                  }),
                  (e.prototype.withTags = function (e) {
                    return (this.showTags = e), this;
                  }),
                  (e.prototype.build = function () {
                    return (
                      this.role && this.roles && this.roles.push(this.role),
                      new l(this)
                    );
                  }),
                  e
                );
              })();
              t.UsersRequestBuilder = d;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(5),
                o = n(1),
                i = n(2),
                s = n(27),
                a = n(0),
                c = (function () {
                  function e(e) {
                    (this.limit = 100),
                      (this.next_page = 1),
                      (this.current_page = 1),
                      (this.total_pages = -1),
                      (this.fetchingInProgress = !1),
                      (this.pagination = {
                        total: 0,
                        count: 0,
                        per_page: 0,
                        current_page: 0,
                        total_pages: 0,
                        links: [],
                      }),
                      o.isFalsy(e) ||
                        ((this.limit = e.limit),
                        o.isFalsy(e.conversationType) ||
                          (this.conversationType = e.conversationType));
                  }
                  return (
                    (e.prototype.validateConversationBuilder = function () {
                      return void 0 === this.limit
                        ? new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.METHOD_COMPULSORY
                                ),
                                "SET_LIMIT",
                                "SET_LIMIT",
                                "Set Limit"
                              )
                            )
                          )
                        : isNaN(this.limit)
                        ? new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.PARAMETER_MUST_BE_A_NUMBER
                                ),
                                "SET_LIMIT",
                                "SET_LIMIT",
                                "setLimit()"
                              )
                            )
                          )
                        : this.limit > a.DEFAULT_VALUES.CONVERSATION_MAX_LIMIT
                        ? new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(a.GENERAL_ERROR.LIMIT_EXCEEDED),
                                "SET_LIMIT",
                                "SET_LIMIT",
                                a.DEFAULT_VALUES.CONVERSATION_MAX_LIMIT
                              )
                            )
                          )
                        : this.limit < a.DEFAULT_VALUES.ZERO
                        ? new i.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR
                                    .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                                ),
                                "SET_LIMIT",
                                "SET_LIMIT",
                                "setLimit()"
                              )
                            )
                          )
                        : void 0;
                    }),
                    (e.prototype.fetchNext = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          if (e.fetchingInProgress)
                            (e.fetchingInProgress = !1), t([]);
                          else {
                            e.fetchingInProgress = !0;
                            var o = e.validateConversationBuilder();
                            if (o instanceof i.CometChatException)
                              return void n(o);
                            r.makeApiCall(
                              "getConversations",
                              {},
                              e.getNextData()
                            ).then(
                              function (n) {
                                if (
                                  (n.meta &&
                                    (e.total_pages =
                                      n.meta.pagination.total_pages),
                                  0 < n.data.length)
                                ) {
                                  e.pagination = n.meta.pagination;
                                  var r = [];
                                  n.data.map(function (e) {
                                    r.push(
                                      s.ConversationController.trasformJSONConversation(
                                        e.conversationId,
                                        e.conversationType,
                                        e.lastMessage,
                                        e.conversationWith,
                                        e.unreadMessageCount
                                      )
                                    );
                                  }),
                                    t(r);
                                } else t([]);
                                e.fetchingInProgress = !1;
                              },
                              function (t) {
                                (e.fetchingInProgress = !1),
                                  n(new i.CometChatException(t.error));
                              }
                            );
                          }
                        } catch (o) {
                          (e.fetchingInProgress = !1),
                            n(new i.CometChatException(o));
                        }
                      });
                    }),
                    (e.prototype.getNextData = function () {
                      var e = {};
                      if (
                        ((e.per_page = this.limit),
                        o.isFalsy(this.conversationType) ||
                          (e.conversationType = this.conversationType),
                        1 == this.current_page)
                      )
                        (e.page = this.next_page),
                          this.next_page++,
                          this.current_page++;
                      else {
                        if (this.next_page > this.total_pages)
                          return (e.page = this.next_page), e;
                        e.page = this.next_page++;
                      }
                      return e;
                    }),
                    e
                  );
                })();
              t.ConversationsRequest = c;
              var u = (function () {
                function e() {}
                return (
                  (e.prototype.setLimit = function (e) {
                    return (this.limit = e), this;
                  }),
                  (e.prototype.setConversationType = function (e) {
                    return (this.conversationType = e), this;
                  }),
                  (e.prototype.build = function () {
                    return new c(this);
                  }),
                  e
                );
              })();
              t.ConversationsRequestBuilder = u;
            },
            function (e, t, n) {
              "use strict";
              var r =
                  (this && this.__awaiter) ||
                  function (e, t, n, r) {
                    return new (n || (n = Promise))(function (o, i) {
                      function s(e) {
                        try {
                          c(r.next(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function a(e) {
                        try {
                          c(r.throw(e));
                        } catch (e) {
                          i(e);
                        }
                      }
                      function c(e) {
                        e.done
                          ? o(e.value)
                          : new n(function (t) {
                              t(e.value);
                            }).then(s, a);
                      }
                      c((r = r.apply(e, t || [])).next());
                    });
                  },
                o =
                  (this && this.__generator) ||
                  function (e, t) {
                    var n,
                      r,
                      o,
                      i,
                      s = {
                        label: 0,
                        sent: function () {
                          if (1 & o[0]) throw o[1];
                          return o[1];
                        },
                        trys: [],
                        ops: [],
                      };
                    return (
                      (i = { next: a(0), throw: a(1), return: a(2) }),
                      "function" == typeof Symbol &&
                        (i[Symbol.iterator] = function () {
                          return this;
                        }),
                      i
                    );
                    function a(i) {
                      return function (a) {
                        return (function (i) {
                          if (n)
                            throw new TypeError(
                              "Generator is already executing."
                            );
                          for (; s; )
                            try {
                              if (
                                ((n = 1),
                                r &&
                                  (o =
                                    2 & i[0]
                                      ? r.return
                                      : i[0]
                                      ? r.throw ||
                                        ((o = r.return) && o.call(r), 0)
                                      : r.next) &&
                                  !(o = o.call(r, i[1])).done)
                              )
                                return o;
                              switch (
                                ((r = 0), o && (i = [2 & i[0], o.value]), i[0])
                              ) {
                                case 0:
                                case 1:
                                  o = i;
                                  break;
                                case 4:
                                  return s.label++, { value: i[1], done: !1 };
                                case 5:
                                  s.label++, (r = i[1]), (i = [0]);
                                  continue;
                                case 7:
                                  (i = s.ops.pop()), s.trys.pop();
                                  continue;
                                default:
                                  if (
                                    !(o =
                                      0 < (o = s.trys).length &&
                                      o[o.length - 1]) &&
                                    (6 === i[0] || 2 === i[0])
                                  ) {
                                    s = 0;
                                    continue;
                                  }
                                  if (
                                    3 === i[0] &&
                                    (!o || (i[1] > o[0] && i[1] < o[3]))
                                  ) {
                                    s.label = i[1];
                                    break;
                                  }
                                  if (6 === i[0] && s.label < o[1]) {
                                    (s.label = o[1]), (o = i);
                                    break;
                                  }
                                  if (o && s.label < o[2]) {
                                    (s.label = o[2]), s.ops.push(i);
                                    break;
                                  }
                                  o[2] && s.ops.pop(), s.trys.pop();
                                  continue;
                              }
                              i = t.call(e, s);
                            } catch (e) {
                              (i = [6, e]), (r = 0);
                            } finally {
                              n = o = 0;
                            }
                          if (5 & i[0]) throw i[1];
                          return { value: i[0] ? i[1] : void 0, done: !0 };
                        })([i, a]);
                      };
                    }
                  };
              t.__esModule = !0;
              var i = n(2),
                s = n(5),
                a = n(7),
                c = n(1),
                u = n(22),
                l = n(0),
                d = n(12),
                p = n(3),
                f = n(14),
                h = n(10),
                E = n(25),
                g = n(26),
                S = n(4),
                C = n(31),
                _ = (function () {
                  function e(e) {
                    (this.limit = l.DEFAULT_VALUES.MSGS_LIMIT),
                      (this.timestamp = 0),
                      (this.id = l.DEFAULT_VALUES.DEFAULT_MSG_ID),
                      (this.messageStore = u.MessagesStore.getInstance()),
                      (this.endpointName = "getUserMessages"),
                      (this.listId = ""),
                      (this.totalPages = 0),
                      (this.unread = !1),
                      (this.inProgress = !1),
                      (this.hideMessagesFromBlockedUsers = !1),
                      (this.updatedAt = 0),
                      (this.onlyUpdates = 0),
                      (this.paginationMeta = {}),
                      (this.limit = e.limit),
                      (this.paginationMeta[
                        l.MessageConstatnts.PAGINATION.KEYS.PER_PAGE
                      ] = this.limit),
                      (this.uid = e.uid),
                      (this.guid = e.guid),
                      (this.parentMessageId = e.parentMessageId),
                      (this.timestamp = e.timestamp),
                      this.timestamp &&
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.SENT_AT
                        ] = this.timestamp),
                      (this.id = e.id),
                      this.id != l.DEFAULT_VALUES.DEFAULT_MSG_ID &&
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.ID
                        ] = this.id),
                      (this.hideMessagesFromBlockedUsers =
                        e.HideMessagesFromBlockedUsers),
                      this.hideMessagesFromBlockedUsers &&
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.HIDE_MESSAGES_FROM_BLOCKED_USER
                        ] = this.hideMessagesFromBlockedUsers),
                      (this.unread = e.unread),
                      this.unread &&
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.UNREAD
                        ] = this.unread),
                      e.searchKey &&
                        ((this.searchKey = e.searchKey),
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.SEARCH_KEY
                        ] = this.searchKey)),
                      e.onlyUpdate &&
                        ((this.onlyUpdates = e.onlyUpdate),
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.ONLY_UPDATES
                        ] = this.onlyUpdates)),
                      e.updatedAt &&
                        ((this.updatedAt = e.updatedAt),
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.UPDATED_AT
                        ] = this.updatedAt)),
                      e.category && (this.category = e.category),
                      e.categories && (this.categories = e.categories),
                      e.type && (this.type = e.type),
                      e.types && (this.types = e.types),
                      e.HideReplies &&
                        ((this.hideReplies = e.HideReplies),
                        (this.paginationMeta[
                          l.MessageConstatnts.PAGINATION.KEYS.HIDE_REPLIES
                        ] = this.hideReplies));
                  }
                  return (
                    (e.prototype.fetchNext = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        return r(e, void 0, void 0, function () {
                          var e, r, s, a;
                          return o(this, function (o) {
                            switch (o.label) {
                              case 0:
                                if ((o.trys.push([0, 6, , 7]), this.inProgress))
                                  return (
                                    (this.inProgress = !1),
                                    n(
                                      new i.CometChatException(
                                        d.MESSAGES_REQUEST_ERRORS.REQUEST_IN_PROGRESS_ERROR
                                      )
                                    ),
                                    [2]
                                  );
                                if (
                                  ((this.inProgress = !0), this.onlyUpdates)
                                ) {
                                  if (0 == this.updatedAt)
                                    return (
                                      (this.inProgress = !1),
                                      n(
                                        new i.CometChatException(
                                          d.MESSAGES_REQUEST_ERRORS.NOT_ENOUGH_PARAMS
                                        )
                                      ),
                                      [2]
                                    );
                                } else if (0 == this.timestamp && 0 == this.id && 0 == this.updatedAt) return (this.inProgress = !1), n(new i.CometChatException(d.MESSAGES_REQUEST_ERRORS.NOT_ENOUGH_PARAMS)), [2];
                                (this.affix =
                                  l.MessageConstatnts.PAGINATION.AFFIX.APPEND),
                                  (this.paginationMeta[
                                    l.MessageConstatnts.PAGINATION.KEYS.AFFIX
                                  ] = this.affix),
                                  (this.currentMethod =
                                    l.MessageConstatnts.PAGINATION.AFFIX.APPEND),
                                  (o.label = 1);
                              case 1:
                                return (
                                  o.trys.push([1, 4, , 5]),
                                  [4, this.makeAPICall()]
                                );
                              case 2:
                                return (
                                  (e = o.sent()),
                                  [
                                    4,
                                    g.ExtensionController.hookOnMessageListIsFetched(
                                      e
                                    ),
                                  ]
                                );
                              case 3:
                                return (
                                  (r = o.sent()),
                                  t(r),
                                  (this.inProgress = !1),
                                  [3, 5]
                                );
                              case 4:
                                return (
                                  (s = o.sent()),
                                  (this.inProgress = !1),
                                  n(new i.CometChatException(s)),
                                  [3, 5]
                                );
                              case 5:
                                return [3, 7];
                              case 6:
                                return (
                                  (a = o.sent()),
                                  (this.inProgress = !1),
                                  n(new i.CometChatException(a)),
                                  [3, 7]
                                );
                              case 7:
                                return [2];
                            }
                          });
                        });
                      });
                    }),
                    (e.prototype.fetchPrevious = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        return r(e, void 0, void 0, function () {
                          var e, r, s, a;
                          return o(this, function (o) {
                            switch (o.label) {
                              case 0:
                                if ((o.trys.push([0, 6, , 7]), this.inProgress))
                                  return (
                                    n(
                                      new i.CometChatException(
                                        d.MESSAGES_REQUEST_ERRORS.REQUEST_IN_PROGRESS_ERROR
                                      )
                                    ),
                                    (this.inProgress = !1),
                                    [2]
                                  );
                                if (
                                  ((this.inProgress = !0),
                                  this.onlyUpdates && 0 == this.updatedAt)
                                )
                                  return (
                                    (this.inProgress = !1),
                                    n(
                                      new i.CometChatException(
                                        d.MESSAGES_REQUEST_ERRORS.NOT_ENOUGH_PARAMS
                                      )
                                    ),
                                    [2]
                                  );
                                (this.affix =
                                  l.MessageConstatnts.PAGINATION.AFFIX.PREPEND),
                                  (this.paginationMeta[
                                    l.MessageConstatnts.PAGINATION.KEYS.AFFIX
                                  ] = this.affix),
                                  (this.currentMethod =
                                    l.MessageConstatnts.PAGINATION.AFFIX.PREPEND),
                                  (o.label = 1);
                              case 1:
                                return (
                                  o.trys.push([1, 4, , 5]),
                                  [4, this.makeAPICall()]
                                );
                              case 2:
                                return (
                                  (e = o.sent()),
                                  [
                                    4,
                                    g.ExtensionController.hookOnMessageListIsFetched(
                                      e
                                    ),
                                  ]
                                );
                              case 3:
                                return (
                                  (r = o.sent()),
                                  t(r),
                                  (this.inProgress = !1),
                                  [3, 5]
                                );
                              case 4:
                                return (
                                  (s = o.sent()),
                                  (this.inProgress = !1),
                                  n(new i.CometChatException(s)),
                                  [3, 5]
                                );
                              case 5:
                                return [3, 7];
                              case 6:
                                return (
                                  (a = o.sent()),
                                  (this.inProgress = !1),
                                  n(new i.CometChatException(a)),
                                  [3, 7]
                                );
                              case 7:
                                return [2];
                            }
                          });
                        });
                      });
                    }),
                    (e.prototype.makeAPICall = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          var r = e.uid;
                          if (void 0 !== r) {
                            if (
                              typeof r !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_STRING
                                      ),
                                      "UID",
                                      "UID",
                                      "setUID()"
                                    )
                                  )
                                )
                              );
                            if (c.isFalsy(r.trim()))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(l.GENERAL_ERROR.INVALID),
                                      "UID",
                                      "UID",
                                      "UID",
                                      "UID"
                                    )
                                  )
                                )
                              );
                            e.uid = r.trim();
                          }
                          var o = e.guid;
                          if (void 0 !== o) {
                            if (
                              typeof o !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_STRING
                                      ),
                                      "GUID",
                                      "GUID",
                                      "setGUID()"
                                    )
                                  )
                                )
                              );
                            if (c.isFalsy(o.trim()))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(l.GENERAL_ERROR.INVALID),
                                      "GUID",
                                      "GUID",
                                      "GUID",
                                      "GUID"
                                    )
                                  )
                                )
                              );
                            e.guid = o.trim();
                          }
                          var u = e.parentMessageId;
                          if (void 0 !== u) {
                            if (isNaN(u))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_NUMBER
                                      ),
                                      "PARENT_MESSAGE_ID",
                                      "PARENT_MESSAGE_ID",
                                      "setParentMessageId()"
                                    )
                                  )
                                )
                              );
                            if (u < l.DEFAULT_VALUES.ZERO)
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                                      ),
                                      "PARENT_MESSAGE_ID",
                                      "PARENT_MESSAGE_ID",
                                      "setParentMessageId()"
                                    )
                                  )
                                )
                              );
                          }
                          var d =
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.PER_PAGE
                            ];
                          if (void 0 === d)
                            return void n(
                              new i.CometChatException(
                                JSON.parse(
                                  c.format(
                                    JSON.stringify(
                                      l.GENERAL_ERROR.METHOD_COMPULSORY
                                    ),
                                    "SET_LIMIT",
                                    "SET_LIMIT",
                                    "Set Limit"
                                  )
                                )
                              )
                            );
                          if (isNaN(d))
                            return void n(
                              new i.CometChatException(
                                JSON.parse(
                                  c.format(
                                    JSON.stringify(
                                      l.GENERAL_ERROR.PARAMETER_MUST_BE_A_NUMBER
                                    ),
                                    "SET_LIMIT",
                                    "SET_LIMIT",
                                    "setLimit()"
                                  )
                                )
                              )
                            );
                          if (d > l.DEFAULT_VALUES.MSGS_MAX_LIMIT)
                            return void n(
                              new i.CometChatException(
                                JSON.parse(
                                  c.format(
                                    JSON.stringify(
                                      l.GENERAL_ERROR.LIMIT_EXCEEDED
                                    ),
                                    "SET_LIMIT",
                                    "SET_LIMIT",
                                    l.DEFAULT_VALUES.MSGS_MAX_LIMIT
                                  )
                                )
                              )
                            );
                          if (d < l.DEFAULT_VALUES.ZERO)
                            return void n(
                              new i.CometChatException(
                                JSON.parse(
                                  c.format(
                                    JSON.stringify(
                                      l.GENERAL_ERROR
                                        .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                                    ),
                                    "SET_LIMIT",
                                    "SET_LIMIT",
                                    "setLimit()"
                                  )
                                )
                              )
                            );
                          var g =
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.SEARCH_KEY
                            ];
                          if (void 0 !== g) {
                            if (
                              typeof g !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_STRING
                                      ),
                                      "SET_SEARCH_KEYWORD",
                                      "SET_SEARCH_KEYWORD",
                                      "setSearchKeyword()"
                                    )
                                  )
                                )
                              );
                            if (c.isFalsy(g.trim()))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(l.GENERAL_ERROR.INVALID),
                                      "SET_SEARCH_KEYWORD",
                                      "SET_SEARCH_KEYWORD",
                                      "search keyword",
                                      "search keyword"
                                    )
                                  )
                                )
                              );
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.SEARCH_KEY
                            ] = g.trim();
                          }
                          var _ =
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.ID
                            ];
                          if (void 0 !== _) {
                            if (isNaN(_))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_NUMBER
                                      ),
                                      "MESSAGE_ID",
                                      "MESSAGE_ID",
                                      "setMessageId()"
                                    )
                                  )
                                )
                              );
                            if (_ < l.DEFAULT_VALUES.ZERO)
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                                      ),
                                      "MESSAGE_ID",
                                      "MESSAGE_ID",
                                      "setMessageId()"
                                    )
                                  )
                                )
                              );
                          }
                          var m =
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.SENT_AT
                            ];
                          if (void 0 !== m) {
                            if (isNaN(m))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_NUMBER
                                      ),
                                      "TIMESTAMP",
                                      "TIMESTAMP",
                                      "setTimestamp()"
                                    )
                                  )
                                )
                              );
                            if (m < l.DEFAULT_VALUES.ZERO)
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                                      ),
                                      "TIMESTAMP",
                                      "TIMESTAMP",
                                      "setTimestamp()"
                                    )
                                  )
                                )
                              );
                          }
                          var T =
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS
                                .HIDE_MESSAGES_FROM_BLOCKED_USER
                            ];
                          if (void 0 !== T) {
                            if (
                              typeof T !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_BOOLEAN
                                      ),
                                      "HIDE_MESSAGES_FROM_BLOCKED_USERS",
                                      "HIDE_MESSAGES_FROM_BLOCKED_USERS",
                                      "hideMessagesFromBlockedUsers()"
                                    )
                                  )
                                )
                              );
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.HIDE_MESSAGES_FROM_BLOCKED_USER
                            ] = 1 == T ? 1 : 0;
                          }
                          var y =
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.UNREAD
                            ];
                          if (void 0 !== y) {
                            if (
                              typeof y !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.BOOLEAN
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_BOOLEAN
                                      ),
                                      "UNREAD",
                                      "UNREAD",
                                      "setUnread()"
                                    )
                                  )
                                )
                              );
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.UNREAD
                            ] = 1 == y ? 1 : 0;
                          }
                          var A = e.category;
                          if (void 0 !== A) {
                            if (
                              typeof A !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_STRING
                                      ),
                                      "SET_CATEGORY",
                                      "SET_CATEGORY",
                                      "setCategory()"
                                    )
                                  )
                                )
                              );
                            if (c.isFalsy(A.trim()))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(l.GENERAL_ERROR.INVALID),
                                      "SET_CATEGORY",
                                      "SET_CATEGORY",
                                      "category",
                                      "category"
                                    )
                                  )
                                )
                              );
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.CATEGORIES
                            ] = A.trim();
                          }
                          var I = e.categories;
                          if (void 0 !== I) {
                            if (!Array.isArray(I))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_AN_ARRAY
                                      ),
                                      "SET_CATEGORIES",
                                      "SET_CATEGORIES",
                                      "setCategories()"
                                    )
                                  )
                                )
                              );
                            0 < I.length &&
                              (e.paginationMeta[
                                l.MessageConstatnts.PAGINATION.KEYS.CATEGORIES
                              ] = I);
                          }
                          var v = e.type;
                          if (void 0 !== v) {
                            if (
                              typeof v !==
                              l.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                            )
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_A_STRING
                                      ),
                                      "SET_TYPE",
                                      "SET_TYPE",
                                      "setType()"
                                    )
                                  )
                                )
                              );
                            if (c.isFalsy(v.trim()))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(l.GENERAL_ERROR.INVALID),
                                      "SET_TYPE",
                                      "SET_TYPE",
                                      "type",
                                      "type"
                                    )
                                  )
                                )
                              );
                            e.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.TYPES
                            ] = v.trim();
                          }
                          var N = e.types;
                          if (void 0 !== N) {
                            if (!Array.isArray(N))
                              return void n(
                                new i.CometChatException(
                                  JSON.parse(
                                    c.format(
                                      JSON.stringify(
                                        l.GENERAL_ERROR
                                          .PARAMETER_MUST_BE_AN_ARRAY
                                      ),
                                      "SET_TYPES",
                                      "SET_TYPES",
                                      "setTypes()"
                                    )
                                  )
                                )
                              );
                            0 < N.length &&
                              (e.paginationMeta[
                                l.MessageConstatnts.PAGINATION.KEYS.TYPES
                              ] = N);
                          }
                          if ((e.createEndpoint(), e.totalPages))
                            if (1 != e.totalPages);
                            else if (e.lastAffix == e.affix) return void t([]);
                          s.makeApiCall(
                            e.endpointName,
                            { listId: e.listId },
                            e.paginationMeta
                          ).then(
                            function (n) {
                              var r = [];
                              if (
                                (n[l.ResponseConstants.RESPONSE_KEYS.KEY_META][
                                  l.ResponseConstants.RESPONSE_KEYS.KEY_CURSOR
                                ].hasOwnProperty(
                                  l.MessageConstatnts.PAGINATION.KEYS.ID
                                ) &&
                                  0 == e.id &&
                                  (e.id = parseInt(
                                    n.meta.cursor[
                                      l.MessageConstatnts.PAGINATION.KEYS.ID
                                    ]
                                  )),
                                n[l.ResponseConstants.RESPONSE_KEYS.KEY_META][
                                  l.ResponseConstants.RESPONSE_KEYS.KEY_CURSOR
                                ].hasOwnProperty(
                                  l.MessageConstatnts.PAGINATION.KEYS.SENT_AT
                                ) &&
                                  0 == e.timestamp &&
                                  (e.timestamp =
                                    n.meta.cursor[
                                      l.MessageConstatnts.PAGINATION.KEYS.SENT_AT
                                    ]),
                                n.meta.pagination.hasOwnProperty(
                                  "total_pages"
                                ) &&
                                  (e.totalPages =
                                    n.meta.pagination.total_pages),
                                n.meta.cursor.hasOwnProperty("affix") &&
                                  (e.lastAffix = n.meta.cursor.affix),
                                n.data[0])
                              ) {
                                0 < e.id && (e.id = parseInt(n.data[0].id)),
                                  0 < e.timestamp &&
                                    (e.timestamp = n.data[0].sentAt);
                                var o = n.data[n.data.length - 1];
                                if (
                                  !p.CometChat.didMessagesPollingStart() &&
                                  p.CometChat.getConnectionStatus() ==
                                    l.CONNECTION_STATUS.CONNECTED &&
                                  f.XMPPConnectionHelper.getInstance()
                                    .connection &&
                                  o.sender.toLowerCase() !=
                                    h
                                      .getUidFromJid(
                                        f.XMPPConnectionHelper.getInstance()
                                          .connection.jid
                                      )
                                      .toLowerCase() &&
                                  (void 0 !== e.guid ||
                                    void 0 !== e.uid ||
                                    void 0 !== e.parentMessageId) &&
                                  void 0 !== o
                                ) {
                                  var i = o.receiverType,
                                    s = p.CometChat.getMode();
                                  (c.isFalsy(s) ||
                                    (s &&
                                      s ===
                                        l.APP_SETTINGS.KEYS.DEFAULT_MODE)) &&
                                    p.CometChat.getLoggedInUser().then(
                                      function (e) {
                                        var t = new S.User(e);
                                        t.setAuthToken("");
                                        var n = JSON.stringify(t);
                                        if (
                                          i ==
                                          l.MessageConstatnts.RECEIVER_TYPE.USER
                                        ) {
                                          if (c.isFalsy(o.deliveredAt)) {
                                            var r = o.receiver,
                                              s = o.id,
                                              a = o.sender;
                                            h.getJidFromUid(a).then(function (
                                              e
                                            ) {
                                              var t = C.$msg({
                                                  to: e,
                                                  from: f.XMPPConnectionHelper.getInstance()
                                                    .connection.jid,
                                                  id: f.XMPPConnectionHelper.getInstance().connection.getUniqueId(),
                                                  type: l.MessageConstatnts
                                                    .XMPP_KEYS.TYPE_USER,
                                                })
                                                  .c("user", {
                                                    xmlns:
                                                      "com.cometchat.models:User",
                                                  })
                                                  .t(n)
                                                  .up(),
                                                o = C.Strophe.xmlElement(
                                                  "delivered",
                                                  {
                                                    type: i,
                                                    receiverId: r,
                                                    xmlns: "urn:xmpp:receipts",
                                                    id:
                                                      "[" +
                                                      p.CometChat.getAppId() +
                                                      "]" +
                                                      s,
                                                  }
                                                );
                                              t.tree().appendChild(o),
                                                f.XMPPConnectionHelper.getInstance().connection.send(
                                                  t
                                                );
                                            });
                                          }
                                        } else {
                                          var u = o.receiver;
                                          (_ = o.id),
                                            h
                                              .getGroupJidFromGUID(u)
                                              .then(function (e) {
                                                var t = C.$msg({
                                                    to: e,
                                                    from: f.XMPPConnectionHelper.getInstance()
                                                      .connection.jid,
                                                    id: f.XMPPConnectionHelper.getInstance().connection.getUniqueId(),
                                                    type: l.MessageConstatnts
                                                      .XMPP_KEYS.TYPE_GROUP,
                                                  })
                                                    .c("user", {
                                                      xmlns:
                                                        "com.cometchat.models:User",
                                                    })
                                                    .t(n)
                                                    .up(),
                                                  r = C.Strophe.xmlElement(
                                                    "delivered",
                                                    {
                                                      type: i,
                                                      receiverId: u,
                                                      xmlns:
                                                        "urn:xmpp:receipts",
                                                      id:
                                                        "[" +
                                                        p.CometChat.getAppId() +
                                                        "]" +
                                                        _,
                                                    }
                                                  );
                                                t.tree().appendChild(r),
                                                  f.XMPPConnectionHelper.getInstance().connection.send(
                                                    t
                                                  );
                                              });
                                        }
                                      }
                                    );
                                }
                                n.data.map(function (t) {
                                  if (
                                    !p.CometChat.didMessagesPollingStart() &&
                                    p.CometChat.getConnectionStatus() ==
                                      l.CONNECTION_STATUS.CONNECTED &&
                                    f.XMPPConnectionHelper.getInstance()
                                      .connection &&
                                    t.sender.toLowerCase() !=
                                      h
                                        .getUidFromJid(
                                          f.XMPPConnectionHelper.getInstance()
                                            .connection.jid
                                        )
                                        .toLowerCase() &&
                                    void 0 === e.guid &&
                                    void 0 === e.uid &&
                                    void 0 === e.parentMessageId
                                  ) {
                                    var n = t.receiverType,
                                      i = p.CometChat.getMode();
                                    (c.isFalsy(i) ||
                                      (i &&
                                        i ===
                                          l.APP_SETTINGS.KEYS.DEFAULT_MODE)) &&
                                      p.CometChat.getLoggedInUser().then(
                                        function (e) {
                                          var r = new S.User(e);
                                          r.setAuthToken("");
                                          var i = JSON.stringify(r);
                                          if (
                                            n ==
                                            l.MessageConstatnts.RECEIVER_TYPE
                                              .USER
                                          ) {
                                            if (c.isFalsy(t.deliveredAt)) {
                                              var s = o.receiver,
                                                a = o.id,
                                                u = o.sender,
                                                d =
                                                  l.MessageConstatnts.XMPP_KEYS
                                                    .TYPE_USER;
                                              h.getJidFromUid(u).then(function (
                                                e
                                              ) {
                                                var t = C.$msg({
                                                    to: e,
                                                    from: f.XMPPConnectionHelper.getInstance()
                                                      .connection.jid,
                                                    id: f.XMPPConnectionHelper.getInstance().connection.getUniqueId(),
                                                    type: d,
                                                  })
                                                    .c("user", {
                                                      xmlns:
                                                        "com.cometchat.models:User",
                                                    })
                                                    .t(i)
                                                    .up(),
                                                  n = C.Strophe.xmlElement(
                                                    "delivered",
                                                    {
                                                      type: d,
                                                      receiverId: s,
                                                      xmlns:
                                                        "urn:xmpp:receipts",
                                                      id:
                                                        "[" +
                                                        p.CometChat.getAppId() +
                                                        "]" +
                                                        a,
                                                    }
                                                  );
                                                t.tree().appendChild(n),
                                                  f.XMPPConnectionHelper.getInstance().connection.send(
                                                    t
                                                  );
                                              });
                                            }
                                          } else if (c.isFalsy(t.myReceipt)) {
                                            var E = t.receiver,
                                              g = o.id,
                                              _ =
                                                l.MessageConstatnts.XMPP_KEYS
                                                  .TYPE_GROUP;
                                            h.getGroupJidFromGUID(E).then(
                                              function (e) {
                                                var t = C.$msg({
                                                    to: e,
                                                    from: f.XMPPConnectionHelper.getInstance()
                                                      .connection.jid,
                                                    id: f.XMPPConnectionHelper.getInstance().connection.getUniqueId(),
                                                    type: _,
                                                  })
                                                    .c("user", {
                                                      xmlns:
                                                        "com.cometchat.models:User",
                                                    })
                                                    .t(i)
                                                    .up(),
                                                  n = C.Strophe.xmlElement(
                                                    "delivered",
                                                    {
                                                      type: _,
                                                      receiverId: E,
                                                      xmlns:
                                                        "urn:xmpp:receipts",
                                                      id:
                                                        "[" +
                                                        p.CometChat.getAppId() +
                                                        "]" +
                                                        g,
                                                    }
                                                  );
                                                t.tree().appendChild(n),
                                                  f.XMPPConnectionHelper.getInstance().connection.send(
                                                    t
                                                  );
                                              }
                                            );
                                          }
                                        }
                                      );
                                  }
                                  E.MessageListnerMaping.getInstance()
                                    .get("all")
                                    .then(
                                      function (e) {
                                        parseInt(t.id) > e &&
                                          E.MessageListnerMaping.getInstance().set(
                                            "all",
                                            parseInt(t.id)
                                          );
                                      },
                                      function (e) {
                                        E.MessageListnerMaping.getInstance().set(
                                          "all",
                                          parseInt(t.id)
                                        );
                                      }
                                    ),
                                    e.affix ==
                                    l.MessageConstatnts.PAGINATION.AFFIX.APPEND
                                      ? (e.id < parseInt(t.id) &&
                                          0 < e.id &&
                                          (e.id = parseInt(t.id)),
                                        e.timestamp < t.sentAt &&
                                          0 < e.timestamp &&
                                          (e.timestamp = t.sentAt),
                                        e.updatedAt < t.updatedAt &&
                                          0 < e.updatedAt &&
                                          (e.updatedAt = t.updatedAt))
                                      : (e.id > parseInt(t.id) &&
                                          (e.id = parseInt(t.id)),
                                        e.timestamp > t.sentAt &&
                                          (e.timestamp = t.sentAt),
                                        e.updatedAt > t.updatedAt &&
                                          (e.updatedAt = t.updatedAt)),
                                    e.id &&
                                      (e.paginationMeta[
                                        l.MessageConstatnts.PAGINATION.KEYS.ID
                                      ] = e.id),
                                    e.timestamp &&
                                      (e.paginationMeta[
                                        l.MessageConstatnts.PAGINATION.KEYS.SENT_AT
                                      ] = e.timestamp),
                                    e.updatedAt &&
                                      (e.paginationMeta[
                                        l.MessageConstatnts.PAGINATION.KEYS.UPDATED_AT
                                      ] = e.updatedAt),
                                    r.push(
                                      a.MessageController.trasformJSONMessge(t)
                                    );
                                });
                              } else r = [];
                              t(r);
                            },
                            function (e) {
                              n(new i.CometChatException(e.error));
                            }
                          );
                        } catch (r) {
                          n(new i.CometChatException(r));
                        }
                      });
                    }),
                    (e.prototype.createEndpoint = function () {
                      this.parentMessageId
                        ? ((this.endpointName = "getThreadMessages"),
                          (this.listId = this.parentMessageId.toString()),
                          this.hideReplies &&
                            ((this.hideReplies = !1),
                            delete this.paginationMeta[
                              l.MessageConstatnts.PAGINATION.KEYS.HIDE_REPLIES
                            ]))
                        : (c.isFalsy(this.guid) || c.isFalsy(this.uid)) &&
                          c.isFalsy(this.guid)
                        ? (c.isFalsy(this.uid)
                            ? (this.endpointName = "getMessages")
                            : (this.endpointName = "getUserMessages"),
                          (this.listId = this.uid))
                        : ((this.endpointName = "getGroupMessages"),
                          (this.listId = this.guid));
                    }),
                    (e.prototype.makeData = function () {
                      var e = {};
                      (e[l.MessageConstatnts.PAGINATION.KEYS.PER_PAGE] =
                        this.limit),
                        (e[l.MessageConstatnts.PAGINATION.KEYS.AFFIX] =
                          this.affix),
                        (c.isFalsy(this.guid) || c.isFalsy(this.uid)) &&
                          c.isFalsy(this.guid) &&
                          c.isFalsy(this.uid);
                    }),
                    (e.prototype.getFilteredPreviousDataByReceiverId =
                      function (e) {
                        return r(this, void 0, void 0, function () {
                          var t,
                            n = this;
                          return o(this, function (r) {
                            switch (r.label) {
                              case 0:
                                switch (((t = []), e)) {
                                  case "user":
                                    return [3, 1];
                                  case "group":
                                    return [3, 3];
                                  case "both":
                                    return [3, 5];
                                }
                                return [3, 7];
                              case 1:
                                return [
                                  4,
                                  u.MessagesStore.getInstance()
                                    .get(this.uid)
                                    .then(function (e) {
                                      Object.keys(e)
                                        .filter(function (e) {
                                          return parseInt(e) > n.id;
                                        })
                                        .map(function (n) {
                                          t = t.concat([e[n]]);
                                        });
                                    }),
                                ];
                              case 2:
                                return r.sent(), [3, 9];
                              case 3:
                                return [
                                  4,
                                  u.MessagesStore.getInstance()
                                    .get(this.guid)
                                    .then(function (e) {
                                      Object.keys(e)
                                        .filter(function (e) {
                                          return parseInt(e) > n.id;
                                        })
                                        .map(function (n) {
                                          t = t.concat([e[n]]);
                                        });
                                    }),
                                ];
                              case 4:
                                r.sent(), (r.label = 5);
                              case 5:
                                return [
                                  4,
                                  u.MessagesStore.getInstance()
                                    .get(this.guid)
                                    .then(function (e) {
                                      Object.keys(e)
                                        .filter(function (e) {
                                          return parseInt(e) > n.id;
                                        })
                                        .filter(function (t) {
                                          return e[t].sender.uid == n.uid;
                                        })
                                        .map(function (n) {
                                          t = t.concat([e[n]]);
                                        });
                                    }),
                                ];
                              case 6:
                                return r.sent(), [3, 9];
                              case 7:
                                return [
                                  4,
                                  u.MessagesStore.getInstance()
                                    .getAllMessages()
                                    .then(function (e) {
                                      Object.keys(e)
                                        .filter(function (e) {
                                          return parseInt(e) > n.id;
                                        })
                                        .map(function (n) {
                                          t = t.concat([e[n]]);
                                        });
                                    }),
                                ];
                              case 8:
                                return r.sent(), [3, 9];
                              case 9:
                                return [2, t];
                            }
                          });
                        });
                      }),
                    (e.prototype.getFilteredNextDataByReceiverId = function (
                      e
                    ) {
                      return r(this, void 0, void 0, function () {
                        var t,
                          n = this;
                        return o(this, function (r) {
                          switch (r.label) {
                            case 0:
                              switch (((t = []), e)) {
                                case "user":
                                  return [3, 1];
                                case "group":
                                  return [3, 3];
                                case "both":
                                  return [3, 5];
                              }
                              return [3, 7];
                            case 1:
                              return [
                                4,
                                u.MessagesStore.getInstance()
                                  .get(this.uid)
                                  .then(function (e) {
                                    Object.keys(e)
                                      .filter(function (e) {
                                        return parseInt(e) > n.id;
                                      })
                                      .map(function (n) {
                                        t = t.concat([e[n]]);
                                      });
                                  }),
                              ];
                            case 2:
                              return r.sent(), [3, 9];
                            case 3:
                              return [
                                4,
                                u.MessagesStore.getInstance()
                                  .get(this.guid)
                                  .then(function (e) {
                                    Object.keys(e)
                                      .filter(function (e) {
                                        return parseInt(e) > n.id;
                                      })
                                      .map(function (n) {
                                        t = t.concat([e[n]]);
                                      });
                                  }),
                              ];
                            case 4:
                              r.sent(), (r.label = 5);
                            case 5:
                              return [
                                4,
                                u.MessagesStore.getInstance()
                                  .get(this.guid)
                                  .then(function (e) {
                                    Object.keys(e)
                                      .filter(function (e) {
                                        return parseInt(e) > n.id;
                                      })
                                      .filter(function (t) {
                                        return e[t].sender.uid == n.uid;
                                      })
                                      .map(function (n) {
                                        t = t.concat([e[n]]);
                                      });
                                  }),
                              ];
                            case 6:
                              return r.sent(), [3, 9];
                            case 7:
                              return [
                                4,
                                u.MessagesStore.getInstance()
                                  .getAllMessages()
                                  .then(function (e) {
                                    Object.keys(e)
                                      .filter(function (e) {
                                        return parseInt(e) > n.id;
                                      })
                                      .map(function (n) {
                                        t = t.concat([e[n]]);
                                      });
                                  }),
                              ];
                            case 8:
                              return r.sent(), [3, 9];
                            case 9:
                              return [2, t];
                          }
                        });
                      });
                    }),
                    e
                  );
                })();
              t.DefaultMessagesRequest = _;
              var m = (function () {
                function e() {
                  (this.maxLimit = l.DEFAULT_VALUES.MSGS_MAX_LIMIT),
                    (this.timestamp = 0),
                    (this.id = l.DEFAULT_VALUES.DEFAULT_MSG_ID),
                    (this.unread = !1),
                    (this.HideMessagesFromBlockedUsers = !1),
                    (this.onlyUpdate = 0);
                }
                return (
                  (e.prototype.setLimit = function (e) {
                    return (this.limit = e), this;
                  }),
                  (e.prototype.setGUID = function (e) {
                    return (this.guid = e), this;
                  }),
                  (e.prototype.setUID = function (e) {
                    return (this.uid = e), this;
                  }),
                  (e.prototype.setParentMessageId = function (e) {
                    return (this.parentMessageId = e), this;
                  }),
                  (e.prototype.setTimestamp = function (e) {
                    return (
                      void 0 === e && (e = c.getCurrentTime()),
                      (this.timestamp = e),
                      this
                    );
                  }),
                  (e.prototype.setMessageId = function (e) {
                    return (
                      void 0 === e && (e = l.DEFAULT_VALUES.DEFAULT_MSG_ID),
                      (this.id = e),
                      this
                    );
                  }),
                  (e.prototype.setUnread = function (e) {
                    return void 0 === e && (e = !1), (this.unread = e), this;
                  }),
                  (e.prototype.hideMessagesFromBlockedUsers = function (e) {
                    return (
                      void 0 === e && (e = !1),
                      (this.HideMessagesFromBlockedUsers = e),
                      this
                    );
                  }),
                  (e.prototype.setSearchKeyword = function (e) {
                    return (this.searchKey = e), this;
                  }),
                  (e.prototype.setUpdatedAfter = function (e) {
                    return (this.updatedAt = e), this;
                  }),
                  (e.prototype.updatesOnly = function (e) {
                    return e && (this.onlyUpdate = 1), this;
                  }),
                  (e.prototype.setCategory = function (e) {
                    return (this.category = e), this;
                  }),
                  (e.prototype.setCategories = function (e) {
                    return (this.categories = e), this;
                  }),
                  (e.prototype.setType = function (e) {
                    return (this.type = e), this;
                  }),
                  (e.prototype.setTypes = function (e) {
                    return (this.types = e), this;
                  }),
                  (e.prototype.hideReplies = function (e) {
                    return (this.HideReplies = e), this;
                  }),
                  (e.prototype.build = function () {
                    return (
                      this.category &&
                        this.categories &&
                        this.categories.push(this.category),
                      this.type && this.types && this.types.push(this.type),
                      new _(this)
                    );
                  }),
                  e
                );
              })();
              t.DefaultMessagesRequestBuilder = m;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              t.CometChatExtension = function (e) {};
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(5),
                o = n(1),
                i = n(8),
                s = n(2),
                a = n(0),
                c = (function () {
                  function e(e) {
                    (this.next_page = 1),
                      (this.current_page = 1),
                      (this.total_pages = -1),
                      (this.fetchingInProgress = !1),
                      (this.pagination = {
                        total: 0,
                        count: 0,
                        per_page: 0,
                        current_page: 0,
                        total_pages: 0,
                        links: [],
                      }),
                      o.isFalsy(e) ||
                        ((this.limit = e.limit),
                        o.isFalsy(e.searchKeyword) ||
                          (this.searchKeyword = e.searchKeyword),
                        o.isFalsy(e.direction) ||
                          (this.direction = e.direction));
                  }
                  return (
                    (e.prototype.validateBlockedUsersBuilder = function () {
                      if (void 0 === this.limit)
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(a.GENERAL_ERROR.METHOD_COMPULSORY),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "Set Limit"
                            )
                          )
                        );
                      if (isNaN(this.limit))
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(
                                a.GENERAL_ERROR.PARAMETER_MUST_BE_A_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (this.limit > a.DEFAULT_VALUES.USERS_MAX_LIMIT)
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(a.GENERAL_ERROR.LIMIT_EXCEEDED),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              a.DEFAULT_VALUES.USERS_MAX_LIMIT
                            )
                          )
                        );
                      if (this.limit < a.DEFAULT_VALUES.ZERO)
                        return new s.CometChatException(
                          JSON.parse(
                            o.format(
                              JSON.stringify(
                                a.GENERAL_ERROR
                                  .PARAMETER_MUST_BE_A_POSITIVE_NUMBER
                              ),
                              "SET_LIMIT",
                              "SET_LIMIT",
                              "setLimit()"
                            )
                          )
                        );
                      if (void 0 !== this.searchKeyword) {
                        if (
                          typeof this.searchKeyword !==
                          a.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "setSearchKeyword()"
                              )
                            )
                          );
                        if (o.isFalsy(this.searchKeyword.trim()))
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(a.GENERAL_ERROR.INVALID),
                                "SET_SEARCH_KEYWORD",
                                "SET_SEARCH_KEYWORD",
                                "search keyword",
                                "search keyword"
                              )
                            )
                          );
                        this.searchKeyword = this.searchKeyword.trim();
                      }
                      if (void 0 !== this.direction) {
                        if (
                          typeof this.direction !==
                          a.COMMON_UTILITY_CONSTANTS.TYPE_CONSTANTS.STRING
                        )
                          return new s.CometChatException(
                            JSON.parse(
                              o.format(
                                JSON.stringify(
                                  a.GENERAL_ERROR.PARAMETER_MUST_BE_A_STRING
                                ),
                                "SET_DIRECTION",
                                "SET_DIRECTION",
                                "setDirection()"
                              )
                            )
                          );
                        if (
                          this.direction !=
                            a.BlockedUsersConstants.REQUEST_KEYS.DIRECTIONS
                              .BOTH &&
                          this.direction !=
                            a.BlockedUsersConstants.REQUEST_KEYS.DIRECTIONS
                              .BLOCKED_BY_ME &&
                          this.direction !=
                            a.BlockedUsersConstants.REQUEST_KEYS.DIRECTIONS
                              .HAS_BLOCKED_ME
                        )
                          return new s.CometChatException(
                            a.UserErrors.INVALID_DIRECTION
                          );
                      }
                    }),
                    (e.prototype.fetchPrevious = function () {
                      var e = this;
                      return (
                        (this.fetchingInProgress = !0),
                        new Promise(function (t, n) {
                          try {
                            0 == e.next_page &&
                              (t([]), (e.fetchingInProgress = !1));
                            var o = e.validateBlockedUsersBuilder();
                            if (o instanceof s.CometChatException)
                              return void n(o);
                            if (!e.fetchingInProgress)
                              return r
                                .makeApiCall(
                                  "blockedUsersList",
                                  {},
                                  e.getPreData()
                                )
                                .then(
                                  function (n) {
                                    if (
                                      (n.meta &&
                                        (e.total_pages =
                                          n.meta.pagination.total_pages),
                                      0 < n.data.length)
                                    ) {
                                      e.pagination = n.meta.pagination;
                                      var r = [];
                                      n.data.map(function (e, t) {
                                        r.push(
                                          i.UsersController.trasformJSONUser(e)
                                        );
                                      }),
                                        t(r),
                                        (e.fetchingInProgress = !1);
                                    }
                                    t([]), (e.fetchingInProgress = !1);
                                  },
                                  function (t) {
                                    n(new s.CometChatException(t.error)),
                                      (e.fetchingInProgress = !1);
                                  }
                                );
                            t([]);
                          } catch (o) {
                            (e.fetchingInProgress = !1),
                              n(new s.CometChatException(o));
                          }
                        })
                      );
                    }),
                    (e.prototype.fetchNext = function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        try {
                          if (e.fetchingInProgress)
                            (e.fetchingInProgress = !1), t([]);
                          else {
                            e.fetchingInProgress = !0;
                            var o = e.validateBlockedUsersBuilder();
                            if (o instanceof s.CometChatException)
                              return void n(o);
                            r.makeApiCall(
                              "blockedUsersList",
                              {},
                              e.getNextData()
                            ).then(
                              function (n) {
                                if (
                                  (n.meta &&
                                    (e.total_pages =
                                      n.meta.pagination.total_pages),
                                  0 < n.data.length)
                                ) {
                                  e.pagination = n.meta.pagination;
                                  var r = [];
                                  n.data.map(function (e) {
                                    r.push(
                                      i.UsersController.trasformJSONUser(e)
                                    );
                                  }),
                                    t(r);
                                } else t([]);
                                e.fetchingInProgress = !1;
                              },
                              function (t) {
                                (e.fetchingInProgress = !1),
                                  n(new s.CometChatException(t.error));
                              }
                            );
                          }
                        } catch (o) {
                          (e.fetchingInProgress = !1),
                            n(new s.CometChatException(o));
                        }
                      });
                    }),
                    (e.prototype.getNextData = function () {
                      var e = {};
                      if (
                        ((e.per_page = this.limit),
                        o.isFalsy(this.direction) ||
                          (e.direction = this.direction),
                        o.isFalsy(this.searchKeyword) ||
                          (e.searchKey = this.searchKeyword),
                        1 == this.current_page)
                      )
                        (e.page = this.next_page),
                          this.next_page++,
                          this.current_page++;
                      else {
                        if (this.next_page > this.total_pages)
                          return (e.page = this.next_page), e;
                        e.page = this.next_page++;
                      }
                      return e;
                    }),
                    (e.prototype.getPreData = function () {
                      var e = {};
                      return (
                        (e.per_page = this.limit),
                        0 <= this.next_page &&
                          0 < this.next_page &&
                          (e.page = --this.next_page),
                        e
                      );
                    }),
                    (e.MAX_LIMIT = 2),
                    (e.DEFAULT_LIMIT = 1),
                    (e.directions =
                      a.BlockedUsersConstants.REQUEST_KEYS.DIRECTIONS),
                    e
                  );
                })();
              t.BlockedUsersRequest = c;
              var u = (function () {
                function e() {}
                return (
                  (e.prototype.setLimit = function (e) {
                    return (this.limit = e), this;
                  }),
                  (e.prototype.setSearchKeyword = function (e) {
                    return (this.searchKeyword = e), this;
                  }),
                  (e.prototype.setDirection = function (e) {
                    return (this.direction = e), this;
                  }),
                  (e.prototype.blockedByMe = function () {
                    return (
                      (this.direction =
                        a.BlockedUsersConstants.REQUEST_KEYS.DIRECTIONS.BLOCKED_BY_ME),
                      this
                    );
                  }),
                  (e.prototype.hasBlockedMe = function () {
                    return (
                      (this.direction =
                        a.BlockedUsersConstants.REQUEST_KEYS.DIRECTIONS.HAS_BLOCKED_ME),
                      this
                    );
                  }),
                  (e.prototype.build = function () {
                    return new c(this);
                  }),
                  e
                );
              })();
              t.BlockedUsersRequestBuilder = u;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(7),
                o = n(0),
                i = n(8),
                s = n(16),
                a = n(27),
                c = n(3),
                u = n(2),
                l = n(1),
                d = (function () {
                  function e() {}
                  return (
                    (e.processMessage = function (e) {
                      try {
                        return r.MessageController.trasformJSONMessge(e);
                      } catch (e) {
                        l.Logger.error("CometChatHelper: processMessage", e);
                      }
                    }),
                    (e.getConversationFromMessage = function (e) {
                      return new Promise(function (t, n) {
                        try {
                          c.CometChat.getLoggedinUser().then(
                            function (c) {
                              if (null !== c) {
                                var u =
                                    r.MessageController.trasformJSONMessge(e),
                                  l = u.receiverType,
                                  d = u.conversationId,
                                  p = void 0,
                                  f = r.MessageController.trasformJSONMessge(e);
                                if (
                                  l == o.MessageConstatnts.RECEIVER_TYPE.USER
                                ) {
                                  var h = i.UsersController.trasformJSONUser(
                                    u[o.MessageConstatnts.KEYS.SENDER]
                                  );
                                  p =
                                    h.getUid() == c.getUid()
                                      ? i.UsersController.trasformJSONUser(
                                          u[o.MessageConstatnts.KEYS.RECEIVER]
                                        )
                                      : h;
                                } else
                                  p = s.GroupsController.trasformJSONGroup(
                                    u[o.MessageConstatnts.KEYS.RECEIVER]
                                  );
                                var E =
                                  a.ConversationController.trasformJSONConversation(
                                    d,
                                    l,
                                    f,
                                    p,
                                    0
                                  );
                                t(E);
                              } else n(o.UserErrors.USER_NOT_LOGGED_IN);
                            },
                            function (e) {
                              n(new u.CometChatException(e.error));
                            }
                          );
                        } catch (e) {
                          n(new u.CometChatException(e));
                        }
                      });
                    }),
                    e
                  );
                })();
              t.CometChatHelper = d;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(0),
                o = (function () {
                  function e(e) {
                    (this.sessionID = e.sessionID),
                      (this.defaultLayout = e.defaultLayout),
                      (this.isAudioOnly = e.isAudioOnly),
                      (this.region = e.region),
                      (this.user = e.user),
                      (this.mode = e.mode),
                      (this.domain = e.domain),
                      (this.ShowEndCallButton = e.ShowEndCallButton),
                      (this.ShowMuteAudioButton = e.ShowMuteAudioButton),
                      (this.ShowPauseVideoButton = e.ShowPauseVideoButton),
                      (this.ShowScreenShareButton = e.ShowScreenShareButton),
                      (this.ShowSwitchModeButton = e.ShowSwitchModeButton),
                      (this.StartAudioMuted = e.StartAudioMuted),
                      (this.StartVideoMuted = e.StartVideoMuted),
                      (this.localizedObject = e.localizedObject),
                      (this.analyticsSettings = e.analyticsSettings),
                      (this.appId = e.appId),
                      (this.customCSS = e.customCSS);
                  }
                  return (
                    (e.prototype.getCustomCSS = function () {
                      return this.customCSS;
                    }),
                    (e.prototype.getSessionId = function () {
                      return this.sessionID;
                    }),
                    (e.prototype.isAudioOnlyCall = function () {
                      return this.isAudioOnly;
                    }),
                    (e.prototype.getUser = function () {
                      return this.user;
                    }),
                    (e.prototype.getRegion = function () {
                      return this.region;
                    }),
                    (e.prototype.getAppId = function () {
                      return this.appId;
                    }),
                    (e.prototype.getDomain = function () {
                      return this.domain;
                    }),
                    (e.prototype.isDefaultLayoutEnabled = function () {
                      return this.defaultLayout;
                    }),
                    (e.prototype.getMode = function () {
                      return this.mode;
                    }),
                    (e.prototype.getStartWithAudioMuted = function () {
                      return this.StartAudioMuted;
                    }),
                    (e.prototype.getStartWithVideoMuted = function () {
                      return this.StartVideoMuted;
                    }),
                    (e.prototype.isEndCallButtonEnabled = function () {
                      return this.ShowEndCallButton;
                    }),
                    (e.prototype.isMuteAudioButtonEnabled = function () {
                      return this.ShowMuteAudioButton;
                    }),
                    (e.prototype.isPauseVideoButtonEnabled = function () {
                      return this.ShowPauseVideoButton;
                    }),
                    (e.prototype.isScreenShareButtonEnabled = function () {
                      return this.ShowScreenShareButton;
                    }),
                    (e.prototype.isModeButtonEnabled = function () {
                      return this.ShowSwitchModeButton;
                    }),
                    (e.prototype.getLocalizedStringObject = function () {
                      return this.localizedObject;
                    }),
                    (e.prototype.getAnalyticsSettings = function () {
                      return this.analyticsSettings;
                    }),
                    e
                  );
                })();
              t.CallSettings = o;
              var i = (function () {
                function e() {
                  (this.defaultLayout = !0),
                    (this.isAudioOnly = !1),
                    (this.mode = r.CallConstants.CALL_MODE.DEFAULT),
                    (this.ShowEndCallButton = !0),
                    (this.ShowMuteAudioButton = !0),
                    (this.ShowPauseVideoButton = !0),
                    (this.ShowScreenShareButton = !0),
                    (this.ShowSwitchModeButton = !0),
                    (this.StartAudioMuted = !1),
                    (this.StartVideoMuted = !1),
                    (this.localizedObject = {}),
                    (this.analyticsSettings = {});
                }
                return (
                  (e.prototype.setSessionID = function (e) {
                    return (this.sessionID = e), this;
                  }),
                  (e.prototype.enableDefaultLayout = function (e) {
                    return (this.defaultLayout = e), this;
                  }),
                  (e.prototype.setIsAudioOnlyCall = function (e) {
                    return (this.isAudioOnly = e), this;
                  }),
                  (e.prototype.setRegion = function (e) {
                    return (this.region = e), this;
                  }),
                  (e.prototype.setDomain = function (e) {
                    return (this.domain = e), this;
                  }),
                  (e.prototype.setUser = function (e) {
                    return (this.user = e), this;
                  }),
                  (e.prototype.setMode = function (e) {
                    return (this.mode = e), this;
                  }),
                  (e.prototype.showEndCallButton = function (e) {
                    return (this.ShowEndCallButton = e), this;
                  }),
                  (e.prototype.showMuteAudioButton = function (e) {
                    return (this.ShowMuteAudioButton = e), this;
                  }),
                  (e.prototype.showPauseVideoButton = function (e) {
                    return (this.ShowPauseVideoButton = e), this;
                  }),
                  (e.prototype.showScreenShareButton = function (e) {
                    return (this.ShowScreenShareButton = e), this;
                  }),
                  (e.prototype.showModeButton = function (e) {
                    return (this.ShowSwitchModeButton = e), this;
                  }),
                  (e.prototype.setLocalizedStringObject = function (e) {
                    return (this.localizedObject = e), this;
                  }),
                  (e.prototype.setAnalyticsSettings = function (e) {
                    return (this.analyticsSettings = e), this;
                  }),
                  (e.prototype.setAppId = function (e) {
                    return (this.appId = e), this;
                  }),
                  (e.prototype.startWithAudioMuted = function (e) {
                    return (this.StartAudioMuted = e), this;
                  }),
                  (e.prototype.startWithVideoMuted = function (e) {
                    return (this.StartVideoMuted = e), this;
                  }),
                  (e.prototype.setCustomCSS = function (e) {
                    return (this.customCSS = e), this;
                  }),
                  (e.prototype.build = function () {
                    return new o(this);
                  }),
                  e
                );
              })();
              t.CallSettingsBuilder = i;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = (function () {
                  function e(e) {
                    (this.avatar = ""),
                      r.isFalsy(e) || (this.uid = e.toString());
                  }
                  return (
                    (e.prototype.setUID = function (e) {
                      this.uid = e ? e.toString() : "";
                    }),
                    (e.prototype.getUID = function () {
                      return this.uid.toString();
                    }),
                    (e.prototype.setName = function (e) {
                      this.name = e ? e.toString() : "";
                    }),
                    (e.prototype.getName = function () {
                      return this.name.toString();
                    }),
                    (e.prototype.setAvatar = function (e) {
                      this.avatar = e ? e.toString() : "";
                    }),
                    (e.prototype.getAvatar = function () {
                      return this.avatar.toString();
                    }),
                    (e.prototype.setJWT = function (e) {
                      this.jwt = e ? e.toString() : "";
                    }),
                    (e.prototype.getJWT = function () {
                      return this.jwt.toString();
                    }),
                    (e.prototype.setResource = function (e) {
                      this.resource = e ? e.toString() : "";
                    }),
                    (e.prototype.getResource = function () {
                      return this.resource.toString();
                    }),
                    e
                  );
                })();
              t.RTCUser = o;
            },
            function (e, t, n) {
              "use strict";
              t.__esModule = !0;
              var r = n(1),
                o = (function () {
                  function e(e) {
                    (this.id = ""),
                      (this.name = ""),
                      e &&
                        (r.isFalsy(e.id) || (this.id = e.id),
                        r.isFalsy(e.name) || (this.name = e.name));
                  }
                  return (
                    (e.prototype.getId = function () {
                      return this.id;
                    }),
                    (e.prototype.getName = function () {
                      return this.name;
                    }),
                    e
                  );
                })();
              t.CCExtension = o;
            },
            function (e, t, n) {
              var r = n(64),
                o = n(65);
              e.exports = function (e, t, n) {
                var i = (t && n) || 0;
                "string" == typeof e &&
                  ((t = "binary" === e ? new Array(16) : null), (e = null));
                var s = (e = e || {}).random || (e.rng || r)();
                if (((s[6] = (15 & s[6]) | 64), (s[8] = (63 & s[8]) | 128), t))
                  for (var a = 0; a < 16; ++a) t[i + a] = s[a];
                return t || o(s);
              };
            },
            function (e, t) {
              var n =
                ("undefined" != typeof crypto &&
                  crypto.getRandomValues &&
                  crypto.getRandomValues.bind(crypto)) ||
                ("undefined" != typeof msCrypto &&
                  "function" == typeof window.msCrypto.getRandomValues &&
                  msCrypto.getRandomValues.bind(msCrypto));
              if (n) {
                var r = new Uint8Array(16);
                e.exports = function () {
                  return n(r), r;
                };
              } else {
                var o = new Array(16);
                e.exports = function () {
                  for (var e, t = 0; t < 16; t++)
                    0 == (3 & t) && (e = 4294967296 * Math.random()),
                      (o[t] = (e >>> ((3 & t) << 3)) & 255);
                  return o;
                };
              }
            },
            function (e, t) {
              for (var n = [], r = 0; r < 256; ++r)
                n[r] = (r + 256).toString(16).substr(1);
              e.exports = function (e, t) {
                var r = t || 0,
                  o = n;
                return [
                  o[e[r++]],
                  o[e[r++]],
                  o[e[r++]],
                  o[e[r++]],
                  "-",
                  o[e[r++]],
                  o[e[r++]],
                  "-",
                  o[e[r++]],
                  o[e[r++]],
                  "-",
                  o[e[r++]],
                  o[e[r++]],
                  "-",
                  o[e[r++]],
                  o[e[r++]],
                  o[e[r++]],
                  o[e[r++]],
                  o[e[r++]],
                  o[e[r++]],
                ].join("");
              };
            },
            function (e, t, n) {
              function r(e) {
                this.options = e || { locator: {} };
              }
              function o() {
                this.cdata = !1;
              }
              function i(e, t) {
                (t.lineNumber = e.lineNumber),
                  (t.columnNumber = e.columnNumber);
              }
              function s(e, t, n) {
                return "string" == typeof e
                  ? e.substr(t, n)
                  : e.length >= t + n || t
                  ? new java.lang.String(e, t, n) + ""
                  : e;
              }
              function a(e, t) {
                e.currentElement
                  ? e.currentElement.appendChild(t)
                  : e.doc.appendChild(t);
              }
              (r.prototype.parseFromString = function (e, t) {
                var n = this.options,
                  r = new c(),
                  i = n.domBuilder || new o(),
                  s = n.errorHandler,
                  a = n.locator,
                  u = n.xmlns || {},
                  l = { lt: "<", gt: ">", amp: "&", quot: '"', apos: "'" };
                return (
                  a && i.setDocumentLocator(a),
                  (r.errorHandler = (function (e, t, n) {
                    if (!e) {
                      if (t instanceof o) return t;
                      e = t;
                    }
                    var r = {},
                      i = e instanceof Function;
                    function s(t) {
                      var o = e[t];
                      !o &&
                        i &&
                        (o =
                          2 == e.length
                            ? function (n) {
                                e(t, n);
                              }
                            : e),
                        (r[t] =
                          (o &&
                            function (e) {
                              o(
                                "[xmldom " +
                                  t +
                                  "]\t" +
                                  e +
                                  (function (e) {
                                    if (e)
                                      return (
                                        "\n@" +
                                        (e.systemId || "") +
                                        "#[line:" +
                                        e.lineNumber +
                                        ",col:" +
                                        e.columnNumber +
                                        "]"
                                      );
                                  })(n)
                              );
                            }) ||
                          function () {});
                    }
                    return (
                      (n = n || {}),
                      s("warning"),
                      s("error"),
                      s("fatalError"),
                      r
                    );
                  })(s, i, a)),
                  (r.domBuilder = n.domBuilder || i),
                  /\/x?html?$/.test(t) &&
                    ((l.nbsp = " "),
                    (l.copy = "©"),
                    (u[""] = "http://www.w3.org/1999/xhtml")),
                  (u.xml = u.xml || "http://www.w3.org/XML/1998/namespace"),
                  e
                    ? r.parse(e, u, l)
                    : r.errorHandler.error("invalid doc source"),
                  i.doc
                );
              }),
                (o.prototype = {
                  startDocument: function () {
                    (this.doc = new u().createDocument(null, null, null)),
                      this.locator &&
                        (this.doc.documentURI = this.locator.systemId);
                  },
                  startElement: function (e, t, n, r) {
                    var o = this.doc,
                      s = o.createElementNS(e, n || t),
                      c = r.length;
                    a(this, s),
                      (this.currentElement = s),
                      this.locator && i(this.locator, s);
                    for (var u = 0; u < c; u++) {
                      e = r.getURI(u);
                      var l = r.getValue(u),
                        d = ((n = r.getQName(u)), o.createAttributeNS(e, n));
                      this.locator && i(r.getLocator(u), d),
                        (d.value = d.nodeValue = l),
                        s.setAttributeNode(d);
                    }
                  },
                  endElement: function (e, t, n) {
                    var r = this.currentElement;
                    r.tagName, (this.currentElement = r.parentNode);
                  },
                  startPrefixMapping: function (e, t) {},
                  endPrefixMapping: function (e) {},
                  processingInstruction: function (e, t) {
                    var n = this.doc.createProcessingInstruction(e, t);
                    this.locator && i(this.locator, n), a(this, n);
                  },
                  ignorableWhitespace: function (e, t, n) {},
                  characters: function (e, t, n) {
                    if ((e = s.apply(this, arguments))) {
                      if (this.cdata) var r = this.doc.createCDATASection(e);
                      else r = this.doc.createTextNode(e);
                      this.currentElement
                        ? this.currentElement.appendChild(r)
                        : /^\s*$/.test(e) && this.doc.appendChild(r),
                        this.locator && i(this.locator, r);
                    }
                  },
                  skippedEntity: function (e) {},
                  endDocument: function () {
                    this.doc.normalize();
                  },
                  setDocumentLocator: function (e) {
                    (this.locator = e) && (e.lineNumber = 0);
                  },
                  comment: function (e, t, n) {
                    e = s.apply(this, arguments);
                    var r = this.doc.createComment(e);
                    this.locator && i(this.locator, r), a(this, r);
                  },
                  startCDATA: function () {
                    this.cdata = !0;
                  },
                  endCDATA: function () {
                    this.cdata = !1;
                  },
                  startDTD: function (e, t, n) {
                    var r = this.doc.implementation;
                    if (r && r.createDocumentType) {
                      var o = r.createDocumentType(e, t, n);
                      this.locator && i(this.locator, o), a(this, o);
                    }
                  },
                  warning: function (e) {},
                  error: function (e) {},
                  fatalError: function (e) {
                    throw e;
                  },
                }),
                "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(
                  /\w+/g,
                  function (e) {
                    o.prototype[e] = function () {
                      return null;
                    };
                  }
                );
              var c = n(67).XMLReader,
                u = (t.DOMImplementation = n(42).DOMImplementation);
              (t.XMLSerializer = n(42).XMLSerializer), (t.DOMParser = r);
            },
            function (e, t) {
              var n =
                  /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,
                r = new RegExp(
                  "[\\-\\.0-9" +
                    n.source.slice(1, -1) +
                    "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"
                ),
                o = new RegExp(
                  "^" +
                    n.source +
                    r.source +
                    "*(?::" +
                    n.source +
                    r.source +
                    "*)?$"
                );
              function i() {}
              function s(e, t) {
                return (
                  (t.lineNumber = e.lineNumber),
                  (t.columnNumber = e.columnNumber),
                  t
                );
              }
              function a(e, t, n, r, o, i) {
                for (var s, a = ++t, c = 0; ; ) {
                  var u = e.charAt(a);
                  switch (u) {
                    case "=":
                      if (1 === c) (s = e.slice(t, a)), (c = 3);
                      else {
                        if (2 !== c)
                          throw new Error(
                            "attribute equal must after attrName"
                          );
                        c = 3;
                      }
                      break;
                    case "'":
                    case '"':
                      if (3 === c || 1 === c) {
                        if (
                          (1 === c &&
                            (i.warning('attribute value must after "="'),
                            (s = e.slice(t, a))),
                          (t = a + 1),
                          !(0 < (a = e.indexOf(u, t))))
                        )
                          throw new Error(
                            "attribute value no end '" + u + "' match"
                          );
                        (l = e.slice(t, a).replace(/&#?\w+;/g, o)),
                          n.add(s, l, t - 1),
                          (c = 5);
                      } else {
                        if (4 != c)
                          throw new Error('attribute value must after "="');
                        (l = e.slice(t, a).replace(/&#?\w+;/g, o)),
                          n.add(s, l, t),
                          i.warning(
                            'attribute "' +
                              s +
                              '" missed start quot(' +
                              u +
                              ")!!"
                          ),
                          (t = a + 1),
                          (c = 5);
                      }
                      break;
                    case "/":
                      switch (c) {
                        case 0:
                          n.setTagName(e.slice(t, a));
                        case 5:
                        case 6:
                        case 7:
                          (c = 7), (n.closed = !0);
                        case 4:
                        case 1:
                        case 2:
                          break;
                        default:
                          throw new Error("attribute invalid close char('/')");
                      }
                      break;
                    case "":
                      return (
                        i.error("unexpected end of input"),
                        0 == c && n.setTagName(e.slice(t, a)),
                        a
                      );
                    case ">":
                      switch (c) {
                        case 0:
                          n.setTagName(e.slice(t, a));
                        case 5:
                        case 6:
                        case 7:
                          break;
                        case 4:
                        case 1:
                          "/" === (l = e.slice(t, a)).slice(-1) &&
                            ((n.closed = !0), (l = l.slice(0, -1)));
                        case 2:
                          2 === c && (l = s),
                            4 == c
                              ? (i.warning(
                                  'attribute "' + l + '" missed quot(")!!'
                                ),
                                n.add(s, l.replace(/&#?\w+;/g, o), t))
                              : (("http://www.w3.org/1999/xhtml" === r[""] &&
                                  l.match(
                                    /^(?:disabled|checked|selected)$/i
                                  )) ||
                                  i.warning(
                                    'attribute "' +
                                      l +
                                      '" missed value!! "' +
                                      l +
                                      '" instead!!'
                                  ),
                                n.add(l, l, t));
                          break;
                        case 3:
                          throw new Error("attribute value missed!!");
                      }
                      return a;
                    case "":
                      u = " ";
                    default:
                      if (u <= " ")
                        switch (c) {
                          case 0:
                            n.setTagName(e.slice(t, a)), (c = 6);
                            break;
                          case 1:
                            (s = e.slice(t, a)), (c = 2);
                            break;
                          case 4:
                            var l = e.slice(t, a).replace(/&#?\w+;/g, o);
                            i.warning('attribute "' + l + '" missed quot(")!!'),
                              n.add(s, l, t);
                          case 5:
                            c = 6;
                        }
                      else
                        switch (c) {
                          case 2:
                            n.tagName,
                              ("http://www.w3.org/1999/xhtml" === r[""] &&
                                s.match(/^(?:disabled|checked|selected)$/i)) ||
                                i.warning(
                                  'attribute "' +
                                    s +
                                    '" missed value!! "' +
                                    s +
                                    '" instead2!!'
                                ),
                              n.add(s, s, t),
                              (t = a),
                              (c = 1);
                            break;
                          case 5:
                            i.warning(
                              'attribute space is required"' + s + '"!!'
                            );
                          case 6:
                            (c = 1), (t = a);
                            break;
                          case 3:
                            (c = 4), (t = a);
                            break;
                          case 7:
                            throw new Error(
                              "elements closed character '/' and '>' must be connected to"
                            );
                        }
                  }
                  a++;
                }
              }
              function c(e, t, n) {
                for (var r = e.tagName, o = null, i = e.length; i--; ) {
                  var s = e[i],
                    a = s.qName,
                    c = s.value;
                  if (0 < (f = a.indexOf(":")))
                    var u = (s.prefix = a.slice(0, f)),
                      l = a.slice(f + 1),
                      p = "xmlns" === u && l;
                  else (u = null), (p = "xmlns" === (l = a) && "");
                  (s.localName = l),
                    !1 !== p &&
                      (null == o && ((o = {}), d(n, (n = {}))),
                      (n[p] = o[p] = c),
                      (s.uri = "http://www.w3.org/2000/xmlns/"),
                      t.startPrefixMapping(p, c));
                }
                for (i = e.length; i--; )
                  (u = (s = e[i]).prefix) &&
                    ("xml" === u &&
                      (s.uri = "http://www.w3.org/XML/1998/namespace"),
                    "xmlns" !== u && (s.uri = n[u || ""]));
                var f = r.indexOf(":");
                l = e.localName =
                  0 < f
                    ? ((u = e.prefix = r.slice(0, f)), r.slice(f + 1))
                    : ((u = null), r);
                var h = (e.uri = n[u || ""]);
                if ((t.startElement(h, l, r, e), !e.closed))
                  return (e.currentNSMap = n), (e.localNSMap = o), !0;
                if ((t.endElement(h, l, r), o))
                  for (u in o) t.endPrefixMapping(u);
              }
              function u(e, t, n, r, o) {
                if (/^(?:script|textarea)$/i.test(n)) {
                  var i = e.indexOf("</" + n + ">", t),
                    s = e.substring(t + 1, i);
                  if (/[&<]/.test(s))
                    return (
                      /^script$/i.test(n) || (s = s.replace(/&#?\w+;/g, r)),
                      o.characters(s, 0, s.length),
                      i
                    );
                }
                return t + 1;
              }
              function l(e, t, n, r) {
                var o = r[n];
                return (
                  null == o &&
                    ((o = e.lastIndexOf("</" + n + ">")) < t &&
                      (o = e.lastIndexOf("</" + n)),
                    (r[n] = o)),
                  o < t
                );
              }
              function d(e, t) {
                for (var n in e) t[n] = e[n];
              }
              function p(e, t, n, r) {
                switch (e.charAt(t + 2)) {
                  case "-":
                    return "-" !== e.charAt(t + 3)
                      ? -1
                      : t < (o = e.indexOf("--\x3e", t + 4))
                      ? (n.comment(e, t + 4, o - t - 4), o + 3)
                      : (r.error("Unclosed comment"), -1);
                  default:
                    if ("CDATA[" == e.substr(t + 3, 6)) {
                      var o = e.indexOf("]]>", t + 9);
                      return (
                        n.startCDATA(),
                        n.characters(e, t + 9, o - t - 9),
                        n.endCDATA(),
                        o + 3
                      );
                    }
                    var i = (function (e, t) {
                        var n,
                          r = [],
                          o = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
                        for (o.lastIndex = t, o.exec(e); (n = o.exec(e)); )
                          if ((r.push(n), n[1])) return r;
                      })(e, t),
                      s = i.length;
                    if (1 < s && /!doctype/i.test(i[0][0])) {
                      var a = i[1][0],
                        c = 3 < s && /^public$/i.test(i[2][0]) && i[3][0],
                        u = 4 < s && i[4][0],
                        l = i[s - 1];
                      return (
                        n.startDTD(
                          a,
                          c && c.replace(/^(['"])(.*?)\1$/, "$2"),
                          u && u.replace(/^(['"])(.*?)\1$/, "$2")
                        ),
                        n.endDTD(),
                        l.index + l[0].length
                      );
                    }
                }
                return -1;
              }
              function f(e, t, n) {
                var r = e.indexOf("?>", t);
                if (r) {
                  var o = e.substring(t, r).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
                  return o
                    ? (o[0].length, n.processingInstruction(o[1], o[2]), r + 2)
                    : -1;
                }
                return -1;
              }
              function h(e) {}
              function E(e, t) {
                return (e.__proto__ = t), e;
              }
              (i.prototype = {
                parse: function (e, t, n) {
                  var r = this.domBuilder;
                  r.startDocument(),
                    d(t, (t = {})),
                    (function (e, t, n, r, o) {
                      function i(e) {
                        var t = e.slice(1, -1);
                        return t in n
                          ? n[t]
                          : "#" === t.charAt(0)
                          ? (function (e) {
                              if (65535 < e) {
                                var t = 55296 + ((e -= 65536) >> 10),
                                  n = 56320 + (1023 & e);
                                return String.fromCharCode(t, n);
                              }
                              return String.fromCharCode(e);
                            })(parseInt(t.substr(1).replace("x", "0x")))
                          : (o.error("entity not found:" + e), e);
                      }
                      function d(t) {
                        if (y < t) {
                          var n = e.substring(y, t).replace(/&#?\w+;/g, i);
                          _ && E(y), r.characters(n, 0, t - y), (y = t);
                        }
                      }
                      function E(t, n) {
                        for (; S <= t && (n = C.exec(e)); )
                          (g = n.index), (S = g + n[0].length), _.lineNumber++;
                        _.columnNumber = t - g + 1;
                      }
                      for (
                        var g = 0,
                          S = 0,
                          C = /.*(?:\r\n?|\n)|.*$/g,
                          _ = r.locator,
                          m = [{ currentNSMap: t }],
                          T = {},
                          y = 0;
                        ;

                      ) {
                        try {
                          var A = e.indexOf("<", y);
                          if (A < 0) {
                            if (!e.substr(y).match(/^\s*$/)) {
                              var I = r.doc,
                                v = I.createTextNode(e.substr(y));
                              I.appendChild(v), (r.currentElement = v);
                            }
                            return;
                          }
                          switch ((y < A && d(A), e.charAt(A + 1))) {
                            case "/":
                              var N = e.indexOf(">", A + 3),
                                R = e.substring(A + 2, N),
                                O = m.pop();
                              N < 0
                                ? ((R = e
                                    .substring(A + 2)
                                    .replace(/[\s<].*/, "")),
                                  o.error(
                                    "end tag name: " +
                                      R +
                                      " is not complete:" +
                                      O.tagName
                                  ),
                                  (N = A + 1 + R.length))
                                : R.match(/\s</) &&
                                  ((R = R.replace(/[\s<].*/, "")),
                                  o.error(
                                    "end tag name: " + R + " maybe not complete"
                                  ),
                                  (N = A + 1 + R.length));
                              var P = O.localNSMap,
                                M = O.tagName == R;
                              if (
                                M ||
                                (O.tagName &&
                                  O.tagName.toLowerCase() == R.toLowerCase())
                              ) {
                                if ((r.endElement(O.uri, O.localName, R), P))
                                  for (var L in P) r.endPrefixMapping(L);
                                M ||
                                  o.fatalError(
                                    "end tag name: " +
                                      R +
                                      " is not match the current start tagName:" +
                                      O.tagName
                                  );
                              } else m.push(O);
                              N++;
                              break;
                            case "?":
                              _ && E(A), (N = f(e, A, r));
                              break;
                            case "!":
                              _ && E(A), (N = p(e, A, r, o));
                              break;
                            default:
                              _ && E(A);
                              var b = new h(),
                                w = m[m.length - 1].currentNSMap,
                                D = ((N = a(e, A, b, w, i, o)), b.length);
                              if (
                                (!b.closed &&
                                  l(e, N, b.tagName, T) &&
                                  ((b.closed = !0),
                                  n.nbsp ||
                                    o.warning("unclosed xml attribute")),
                                _ && D)
                              ) {
                                for (var U = s(_, {}), x = 0; x < D; x++) {
                                  var Y = b[x];
                                  E(Y.offset), (Y.locator = s(_, {}));
                                }
                                (r.locator = U),
                                  c(b, r, w) && m.push(b),
                                  (r.locator = _);
                              } else c(b, r, w) && m.push(b);
                              "http://www.w3.org/1999/xhtml" !== b.uri ||
                              b.closed
                                ? N++
                                : (N = u(e, N, b.tagName, i, r));
                          }
                        } catch (t) {
                          o.error("element parse error: " + t), (N = -1);
                        }
                        y < N ? (y = N) : d(Math.max(A, y) + 1);
                      }
                    })(e, t, n, r, this.errorHandler),
                    r.endDocument();
                },
              }),
                (h.prototype = {
                  setTagName: function (e) {
                    if (!o.test(e)) throw new Error("invalid tagName:" + e);
                    this.tagName = e;
                  },
                  add: function (e, t, n) {
                    if (!o.test(e)) throw new Error("invalid attribute:" + e);
                    this[this.length++] = { qName: e, value: t, offset: n };
                  },
                  length: 0,
                  getLocalName: function (e) {
                    return this[e].localName;
                  },
                  getLocator: function (e) {
                    return this[e].locator;
                  },
                  getQName: function (e) {
                    return this[e].qName;
                  },
                  getURI: function (e) {
                    return this[e].uri;
                  },
                  getValue: function (e) {
                    return this[e].value;
                  },
                }),
                E({}, E.prototype) instanceof E ||
                  (E = function (e, t) {
                    function n() {}
                    for (t in ((n.prototype = t), (n = new n()), e))
                      n[t] = e[t];
                    return n;
                  }),
                (t.XMLReader = i);
            },
          ]));
      },
      7607: (e, t, n) => {
        "use strict";
        function r(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        n.d(t, { Z: () => a });
        var o,
          i,
          s,
          a = (function () {
            function e() {
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError("Cannot call a class as a function");
              })(this, e);
            }
            var t, n;
            return (
              (t = e),
              (n = [
                {
                  key: "on",
                  value: function (t, n) {
                    e._triggers[t] || (e._triggers[t] = []),
                      e._triggers[t].push(n);
                  },
                },
                {
                  key: "triggerHandler",
                  value: function (t, n) {
                    if (e._triggers[t])
                      for (var r in e._triggers[t]) e._triggers[t][r](n);
                  },
                },
              ]),
              null && r(t.prototype, null),
              n && r(t, n),
              e
            );
          })();
        (s = {}),
          (i = "_triggers") in (o = a)
            ? Object.defineProperty(o, i, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (o[i] = s);
      },
      6775: (e, t, n) => {
        "use strict";
        n.d(t, { Z: () => d }), n(6253), n(851), n(7476), n(5115);
        var r = n(7294),
          o = n(3935),
          i = n(6418),
          s = n(7607);
        function a() {
          return (a =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        function c(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function u(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var l = (0, n(2861).Z)(function () {
            return Promise.all([n.e(1), n.e(2)]).then(n.bind(n, 1726));
          }),
          d = (function () {
            function e(t) {
              var n = this;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError("Cannot call a class as a function");
              })(this, e),
                u(this, "options", {
                  defaultID: "",
                  defaultType: "",
                  loggedInUser: {},
                  settings: {},
                  targetElement: null,
                }),
                u(this, "getUserOrGroup", function () {
                  return new Promise(function (e, t) {
                    (!1 !== n.options.hasOwnProperty("defaultID") &&
                      0 !== n.options.defaultID.trim().length) ||
                      (console.log(
                        "CometChat Widget: ",
                        "defaultID not available."
                      ),
                      e({ type: "", user: {} })),
                      (!1 !== n.options.hasOwnProperty("defaultType") &&
                        0 !== n.options.defaultType.trim().length) ||
                        (console.log(
                          "CometChat Widget: ",
                          "defaultType not available."
                        ),
                        e({ type: "", user: {} }));
                    var r = n.options.defaultID.trim(),
                      o = n.options.defaultType.trim();
                    r && o === i.CometChat.ACTION_TYPE.TYPE_USER
                      ? (n.options.loggedInUser.uid === r &&
                          e({ type: "", user: {} }),
                        i.CometChat.getUser(r)
                          .then(function (t) {
                            e({
                              type: i.CometChat.ACTION_TYPE.TYPE_USER,
                              user: t,
                            });
                          })
                          .catch(function (t) {
                            console.log("CometChat Widget Error: ", t),
                              e({ type: "", user: {} });
                          }))
                      : r &&
                        o === i.CometChat.ACTION_TYPE.TYPE_GROUP &&
                        i.CometChat.getGroup(r)
                          .then(function (t) {
                            if (t.hasJoined)
                              e({
                                type: i.CometChat.ACTION_TYPE.TYPE_GROUP,
                                user: t,
                              });
                            else {
                              var n = t.guid,
                                r = t.type,
                                o = "";
                              r === i.CometChat.GROUP_TYPE.PASSWORD &&
                                (o = prompt("Enter password to join group")),
                                i.CometChat.joinGroup(n, r, o)
                                  .then(function (t) {
                                    console.log(
                                      "CometChat Widget: Group joined successfully",
                                      t
                                    ),
                                      e({
                                        type: i.CometChat.ACTION_TYPE
                                          .TYPE_GROUP,
                                        user: t,
                                      });
                                  })
                                  .catch(function (t) {
                                    console.log("CometChat Widget Error: ", t),
                                      e({ type: "", user: {} });
                                  });
                            }
                          })
                          .catch(function (t) {
                            console.log("CometChat Widget Error: ", t),
                              e({ type: "", user: {} });
                          });
                  });
                }),
                u(this, "fetchSettings", function () {
                  var e = n.options.appRegion,
                    t = n.options.widgetID,
                    r = "https://widget"
                      .concat("", "-")
                      .concat(e, ".cometchat.io/v2/widget?id=")
                      .concat(t);
                  return fetch(r);
                }),
                u(this, "checkForSettings", function () {
                  return new Promise(function (e, t) {
                    if (
                      n.options.hasOwnProperty("settings") &&
                      Object.keys(n.options.settings).length
                    ) {
                      var r = "CometChat Widget: Settings already fetched.";
                      console.log(r), e(r);
                    } else
                      n.fetchSettings(n.options.appRegion, n.options.widgetID)
                        .then(function (e) {
                          return e.json();
                        })
                        .then(function (r) {
                          if (
                            r.hasOwnProperty("data") &&
                            r.data.hasOwnProperty("configuration")
                          ) {
                            n.options.settings = r.data.configuration;
                            var o = "CometChat Widget: Settings fetched.";
                            console.log(o), e(o);
                          } else t("Widget settings not found.");
                        })
                        .catch(function (e) {
                          return t(e);
                        });
                  });
                }),
                u(this, "actionHandler", function (e, t) {
                  switch (e) {
                    case "onMessageReceived":
                      return void s.Z.triggerHandler("onMessageReceived", {
                        status: "success",
                        response: t,
                      });
                  }
                }),
                Object.assign(this.options, t);
            }
            var t, n;
            return (
              (t = e),
              (n = [
                {
                  key: "render",
                  value: function () {
                    var e = this;
                    return new Promise(function (t, n) {
                      e.getUserOrGroup().then(function (i) {
                        (!1 !== e.options.hasOwnProperty("target") &&
                            0 !== e.options.target.trim().length) ||
                            n("Target not available.");
                          var s = document.createElement("div");
                          s.setAttribute("id", "cometchat__widget"),
                            document
                              .querySelector(e.options.target)
                              .appendChild(s),
                            (e.options.targetElement = s);
                        // if (
                        //   !e.options.hasOwnProperty("docked") ||
                        //   (!0 !== e.options.docked &&
                        //     "true" !== e.options.docked)
                        // ) {

                        // } else {
                        //   var c = document.createElement("div");
                        //   c.setAttribute("id", "cometchat__widget"),
                        //     document.body.appendChild(c),
                        //     (e.options.targetElement = c);
                        // }
                        var u = Object.assign({}, e.options, {
                          user: i.user,
                          type: i.type,
                        });
                        o.render(
                          r.createElement(
                            l,
                            a({}, u, { actionGenerated: e.actionHandler })
                          ),
                          e.options.targetElement,
                          function () {
                            t("Widget launched.");
                          }
                        );
                      });
                    });
                  },
                },
              ]) && c(t.prototype, n),
              e
            );
          })();
      },
      2861: (e, t, n) => {
        "use strict";
        n.d(t, { Z: () => p }),
          n(8838),
          n(1520),
          n(2139),
          n(5767),
          n(9115),
          n(6253),
          n(6997),
          n(1181);
        var r = n(7294);
        function o(e) {
          return (o =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function i(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function s(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function a(e, t) {
          return (a =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function c(e, t) {
          return !t || ("object" !== o(t) && "function" != typeof t) ? u(e) : t;
        }
        function u(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function l(e) {
          return (l = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function d(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        const p = function (e) {
          return (function (t) {
            !(function (e, t) {
              if ("function" != typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                t && a(e, t);
            })(E, t);
            var n,
              o,
              p,
              f,
              h =
                ((p = E),
                (f = (function () {
                  if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                  if (Reflect.construct.sham) return !1;
                  if ("function" == typeof Proxy) return !0;
                  try {
                    return (
                      Boolean.prototype.valueOf.call(
                        Reflect.construct(Boolean, [], function () {})
                      ),
                      !0
                    );
                  } catch (e) {
                    return !1;
                  }
                })()),
                function () {
                  var e,
                    t = l(p);
                  if (f) {
                    var n = l(this).constructor;
                    e = Reflect.construct(t, arguments, n);
                  } else e = t.apply(this, arguments);
                  return c(this, e);
                });
            function E() {
              var e;
              i(this, E);
              for (
                var t = arguments.length, n = new Array(t), r = 0;
                r < t;
                r++
              )
                n[r] = arguments[r];
              return (
                d(u((e = h.call.apply(h, [this].concat(n)))), "state", {
                  component: null,
                }),
                e
              );
            }
            return (
              (n = E),
              (o = [
                {
                  key: "componentDidMount",
                  value: function () {
                    var t = this;
                    e()
                      .then(function (e) {
                        t.setState({ component: e.default });
                      })
                      .catch(function (e) {
                        console.log("asyncComponent error", e);
                      });
                  },
                },
                {
                  key: "render",
                  value: function () {
                    var e = this.state.component;
                    return e ? r.createElement(e, this.props) : null;
                  },
                },
              ]) && s(n.prototype, o),
              E
            );
          })(r.Component);
        };
      },
      4963: (e) => {
        e.exports = function (e) {
          if ("function" != typeof e)
            throw TypeError(e + " is not a function!");
          return e;
        };
      },
      7722: (e, t, n) => {
        var r = n(6314)("unscopables"),
          o = Array.prototype;
        null == o[r] && n(7728)(o, r, {}),
          (e.exports = function (e) {
            o[r][e] = !0;
          });
      },
      3328: (e) => {
        e.exports = function (e, t, n, r) {
          if (!(e instanceof t) || (void 0 !== r && r in e))
            throw TypeError(n + ": incorrect invocation!");
          return e;
        };
      },
      7007: (e, t, n) => {
        var r = n(5286);
        e.exports = function (e) {
          if (!r(e)) throw TypeError(e + " is not an object!");
          return e;
        };
      },
      9315: (e, t, n) => {
        var r = n(2110),
          o = n(875),
          i = n(2337);
        e.exports = function (e) {
          return function (t, n, s) {
            var a,
              c = r(t),
              u = o(c.length),
              l = i(s, u);
            if (e && n != n) {
              for (; u > l; ) if ((a = c[l++]) != a) return !0;
            } else
              for (; u > l; l++)
                if ((e || l in c) && c[l] === n) return e || l || 0;
            return !e && -1;
          };
        };
      },
      50: (e, t, n) => {
        var r = n(741),
          o = n(9797),
          i = n(508),
          s = n(875),
          a = n(6886);
        e.exports = function (e, t) {
          var n = 1 == e,
            c = 2 == e,
            u = 3 == e,
            l = 4 == e,
            d = 6 == e,
            p = 5 == e || d,
            f = t || a;
          return function (t, a, h) {
            for (
              var E,
                g,
                S = i(t),
                C = o(S),
                _ = r(a, h, 3),
                m = s(C.length),
                T = 0,
                y = n ? f(t, m) : c ? f(t, 0) : void 0;
              m > T;
              T++
            )
              if ((p || T in C) && ((g = _((E = C[T]), T, S)), e))
                if (n) y[T] = g;
                else if (g)
                  switch (e) {
                    case 3:
                      return !0;
                    case 5:
                      return E;
                    case 6:
                      return T;
                    case 2:
                      y.push(E);
                  }
                else if (l) return !1;
            return d ? -1 : u || l ? l : y;
          };
        };
      },
      2736: (e, t, n) => {
        var r = n(5286),
          o = n(4302),
          i = n(6314)("species");
        e.exports = function (e) {
          var t;
          return (
            o(e) &&
              ("function" != typeof (t = e.constructor) ||
                (t !== Array && !o(t.prototype)) ||
                (t = void 0),
              r(t) && null === (t = t[i]) && (t = void 0)),
            void 0 === t ? Array : t
          );
        };
      },
      6886: (e, t, n) => {
        var r = n(2736);
        e.exports = function (e, t) {
          return new (r(e))(t);
        };
      },
      4398: (e, t, n) => {
        "use strict";
        var r = n(4963),
          o = n(5286),
          i = n(7242),
          s = [].slice,
          a = {},
          c = function (e, t, n) {
            if (!(t in a)) {
              for (var r = [], o = 0; o < t; o++) r[o] = "a[" + o + "]";
              a[t] = Function("F,a", "return new F(" + r.join(",") + ")");
            }
            return a[t](e, n);
          };
        e.exports =
          Function.bind ||
          function (e) {
            var t = r(this),
              n = s.call(arguments, 1),
              a = function () {
                var r = n.concat(s.call(arguments));
                return this instanceof a ? c(t, r.length, r) : i(t, r, e);
              };
            return o(t.prototype) && (a.prototype = t.prototype), a;
          };
      },
      1488: (e, t, n) => {
        var r = n(2032),
          o = n(6314)("toStringTag"),
          i =
            "Arguments" ==
            r(
              (function () {
                return arguments;
              })()
            );
        e.exports = function (e) {
          var t, n, s;
          return void 0 === e
            ? "Undefined"
            : null === e
            ? "Null"
            : "string" ==
              typeof (n = (function (e, t) {
                try {
                  return e[t];
                } catch (e) {}
              })((t = Object(e)), o))
            ? n
            : i
            ? r(t)
            : "Object" == (s = r(t)) && "function" == typeof t.callee
            ? "Arguments"
            : s;
        };
      },
      2032: (e) => {
        var t = {}.toString;
        e.exports = function (e) {
          return t.call(e).slice(8, -1);
        };
      },
      5645: (e) => {
        var t = (e.exports = { version: "2.6.12" });
        "number" == typeof __e && (__e = t);
      },
      2811: (e, t, n) => {
        "use strict";
        var r = n(9275),
          o = n(681);
        e.exports = function (e, t, n) {
          t in e ? r.f(e, t, o(0, n)) : (e[t] = n);
        };
      },
      741: (e, t, n) => {
        var r = n(4963);
        e.exports = function (e, t, n) {
          if ((r(e), void 0 === t)) return e;
          switch (n) {
            case 1:
              return function (n) {
                return e.call(t, n);
              };
            case 2:
              return function (n, r) {
                return e.call(t, n, r);
              };
            case 3:
              return function (n, r, o) {
                return e.call(t, n, r, o);
              };
          }
          return function () {
            return e.apply(t, arguments);
          };
        };
      },
      1355: (e) => {
        e.exports = function (e) {
          if (null == e) throw TypeError("Can't call method on  " + e);
          return e;
        };
      },
      7057: (e, t, n) => {
        e.exports = !n(4253)(function () {
          return (
            7 !=
            Object.defineProperty({}, "a", {
              get: function () {
                return 7;
              },
            }).a
          );
        });
      },
      2457: (e, t, n) => {
        var r = n(5286),
          o = n(3816).document,
          i = r(o) && r(o.createElement);
        e.exports = function (e) {
          return i ? o.createElement(e) : {};
        };
      },
      4430: (e) => {
        e.exports =
          "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(
            ","
          );
      },
      5541: (e, t, n) => {
        var r = n(7184),
          o = n(4548),
          i = n(4682);
        e.exports = function (e) {
          var t = r(e),
            n = o.f;
          if (n)
            for (var s, a = n(e), c = i.f, u = 0; a.length > u; )
              c.call(e, (s = a[u++])) && t.push(s);
          return t;
        };
      },
      2985: (e, t, n) => {
        var r = n(3816),
          o = n(5645),
          i = n(7728),
          s = n(7234),
          a = n(741),
          c = function (e, t, n) {
            var u,
              l,
              d,
              p,
              f = e & c.F,
              h = e & c.G,
              E = e & c.S,
              g = e & c.P,
              S = e & c.B,
              C = h ? r : E ? r[t] || (r[t] = {}) : (r[t] || {}).prototype,
              _ = h ? o : o[t] || (o[t] = {}),
              m = _.prototype || (_.prototype = {});
            for (u in (h && (n = t), n))
              (d = ((l = !f && C && void 0 !== C[u]) ? C : n)[u]),
                (p =
                  S && l
                    ? a(d, r)
                    : g && "function" == typeof d
                    ? a(Function.call, d)
                    : d),
                C && s(C, u, d, e & c.U),
                _[u] != d && i(_, u, p),
                g && m[u] != d && (m[u] = d);
          };
        (r.core = o),
          (c.F = 1),
          (c.G = 2),
          (c.S = 4),
          (c.P = 8),
          (c.B = 16),
          (c.W = 32),
          (c.U = 64),
          (c.R = 128),
          (e.exports = c);
      },
      4253: (e) => {
        e.exports = function (e) {
          try {
            return !!e();
          } catch (e) {
            return !0;
          }
        };
      },
      3218: (e, t, n) => {
        "use strict";
        var r = n(7007);
        e.exports = function () {
          var e = r(this),
            t = "";
          return (
            e.global && (t += "g"),
            e.ignoreCase && (t += "i"),
            e.multiline && (t += "m"),
            e.unicode && (t += "u"),
            e.sticky && (t += "y"),
            t
          );
        };
      },
      3531: (e, t, n) => {
        var r = n(741),
          o = n(8851),
          i = n(6555),
          s = n(7007),
          a = n(875),
          c = n(9002),
          u = {},
          l = {},
          d = (e.exports = function (e, t, n, d, p) {
            var f,
              h,
              E,
              g,
              S = p
                ? function () {
                    return e;
                  }
                : c(e),
              C = r(n, d, t ? 2 : 1),
              _ = 0;
            if ("function" != typeof S)
              throw TypeError(e + " is not iterable!");
            if (i(S)) {
              for (f = a(e.length); f > _; _++)
                if (
                  (g = t ? C(s((h = e[_]))[0], h[1]) : C(e[_])) === u ||
                  g === l
                )
                  return g;
            } else
              for (E = S.call(e); !(h = E.next()).done; )
                if ((g = o(E, C, h.value, t)) === u || g === l) return g;
          });
        (d.BREAK = u), (d.RETURN = l);
      },
      18: (e, t, n) => {
        e.exports = n(3825)("native-function-to-string", Function.toString);
      },
      3816: (e) => {
        var t = (e.exports =
          "undefined" != typeof window && window.Math == Math
            ? window
            : "undefined" != typeof self && self.Math == Math
            ? self
            : Function("return this")());
        "number" == typeof __g && (__g = t);
      },
      9181: (e) => {
        var t = {}.hasOwnProperty;
        e.exports = function (e, n) {
          return t.call(e, n);
        };
      },
      7728: (e, t, n) => {
        var r = n(9275),
          o = n(681);
        e.exports = n(7057)
          ? function (e, t, n) {
              return r.f(e, t, o(1, n));
            }
          : function (e, t, n) {
              return (e[t] = n), e;
            };
      },
      639: (e, t, n) => {
        var r = n(3816).document;
        e.exports = r && r.documentElement;
      },
      1734: (e, t, n) => {
        e.exports =
          !n(7057) &&
          !n(4253)(function () {
            return (
              7 !=
              Object.defineProperty(n(2457)("div"), "a", {
                get: function () {
                  return 7;
                },
              }).a
            );
          });
      },
      7242: (e) => {
        e.exports = function (e, t, n) {
          var r = void 0 === n;
          switch (t.length) {
            case 0:
              return r ? e() : e.call(n);
            case 1:
              return r ? e(t[0]) : e.call(n, t[0]);
            case 2:
              return r ? e(t[0], t[1]) : e.call(n, t[0], t[1]);
            case 3:
              return r ? e(t[0], t[1], t[2]) : e.call(n, t[0], t[1], t[2]);
            case 4:
              return r
                ? e(t[0], t[1], t[2], t[3])
                : e.call(n, t[0], t[1], t[2], t[3]);
          }
          return e.apply(n, t);
        };
      },
      9797: (e, t, n) => {
        var r = n(2032);
        e.exports = Object("z").propertyIsEnumerable(0)
          ? Object
          : function (e) {
              return "String" == r(e) ? e.split("") : Object(e);
            };
      },
      6555: (e, t, n) => {
        var r = n(2803),
          o = n(6314)("iterator"),
          i = Array.prototype;
        e.exports = function (e) {
          return void 0 !== e && (r.Array === e || i[o] === e);
        };
      },
      4302: (e, t, n) => {
        var r = n(2032);
        e.exports =
          Array.isArray ||
          function (e) {
            return "Array" == r(e);
          };
      },
      5286: (e) => {
        e.exports = function (e) {
          return "object" == typeof e ? null !== e : "function" == typeof e;
        };
      },
      8851: (e, t, n) => {
        var r = n(7007);
        e.exports = function (e, t, n, o) {
          try {
            return o ? t(r(n)[0], n[1]) : t(n);
          } catch (t) {
            var i = e.return;
            throw (void 0 !== i && r(i.call(e)), t);
          }
        };
      },
      9988: (e, t, n) => {
        "use strict";
        var r = n(2503),
          o = n(681),
          i = n(2943),
          s = {};
        n(7728)(s, n(6314)("iterator"), function () {
          return this;
        }),
          (e.exports = function (e, t, n) {
            (e.prototype = r(s, { next: o(1, n) })), i(e, t + " Iterator");
          });
      },
      2923: (e, t, n) => {
        "use strict";
        var r = n(4461),
          o = n(2985),
          i = n(7234),
          s = n(7728),
          a = n(2803),
          c = n(9988),
          u = n(2943),
          l = n(468),
          d = n(6314)("iterator"),
          p = !([].keys && "next" in [].keys()),
          f = "keys",
          h = "values",
          E = function () {
            return this;
          };
        e.exports = function (e, t, n, g, S, C, _) {
          c(n, t, g);
          var m,
            T,
            y,
            A = function (e) {
              if (!p && e in R) return R[e];
              switch (e) {
                case f:
                case h:
                  return function () {
                    return new n(this, e);
                  };
              }
              return function () {
                return new n(this, e);
              };
            },
            I = t + " Iterator",
            v = S == h,
            N = !1,
            R = e.prototype,
            O = R[d] || R["@@iterator"] || (S && R[S]),
            P = O || A(S),
            M = S ? (v ? A("entries") : P) : void 0,
            L = ("Array" == t && R.entries) || O;
          if (
            (L &&
              (y = l(L.call(new e()))) !== Object.prototype &&
              y.next &&
              (u(y, I, !0), r || "function" == typeof y[d] || s(y, d, E)),
            v &&
              O &&
              O.name !== h &&
              ((N = !0),
              (P = function () {
                return O.call(this);
              })),
            (r && !_) || (!p && !N && R[d]) || s(R, d, P),
            (a[t] = P),
            (a[I] = E),
            S)
          )
            if (
              ((m = { values: v ? P : A(h), keys: C ? P : A(f), entries: M }),
              _)
            )
              for (T in m) T in R || i(R, T, m[T]);
            else o(o.P + o.F * (p || N), t, m);
          return m;
        };
      },
      7462: (e, t, n) => {
        var r = n(6314)("iterator"),
          o = !1;
        try {
          var i = [7][r]();
          (i.return = function () {
            o = !0;
          }),
            Array.from(i, function () {
              throw 2;
            });
        } catch (e) {}
        e.exports = function (e, t) {
          if (!t && !o) return !1;
          var n = !1;
          try {
            var i = [7],
              s = i[r]();
            (s.next = function () {
              return { done: (n = !0) };
            }),
              (i[r] = function () {
                return s;
              }),
              e(i);
          } catch (e) {}
          return n;
        };
      },
      5436: (e) => {
        e.exports = function (e, t) {
          return { value: t, done: !!e };
        };
      },
      2803: (e) => {
        e.exports = {};
      },
      4461: (e) => {
        e.exports = !1;
      },
      4728: (e, t, n) => {
        var r = n(3953)("meta"),
          o = n(5286),
          i = n(9181),
          s = n(9275).f,
          a = 0,
          c =
            Object.isExtensible ||
            function () {
              return !0;
            },
          u = !n(4253)(function () {
            return c(Object.preventExtensions({}));
          }),
          l = function (e) {
            s(e, r, { value: { i: "O" + ++a, w: {} } });
          },
          d = (e.exports = {
            KEY: r,
            NEED: !1,
            fastKey: function (e, t) {
              if (!o(e))
                return "symbol" == typeof e
                  ? e
                  : ("string" == typeof e ? "S" : "P") + e;
              if (!i(e, r)) {
                if (!c(e)) return "F";
                if (!t) return "E";
                l(e);
              }
              return e[r].i;
            },
            getWeak: function (e, t) {
              if (!i(e, r)) {
                if (!c(e)) return !0;
                if (!t) return !1;
                l(e);
              }
              return e[r].w;
            },
            onFreeze: function (e) {
              return u && d.NEED && c(e) && !i(e, r) && l(e), e;
            },
          });
      },
      4351: (e, t, n) => {
        var r = n(3816),
          o = n(4193).set,
          i = r.MutationObserver || r.WebKitMutationObserver,
          s = r.process,
          a = r.Promise,
          c = "process" == n(2032)(s);
        e.exports = function () {
          var e,
            t,
            n,
            u = function () {
              var r, o;
              for (c && (r = s.domain) && r.exit(); e; ) {
                (o = e.fn), (e = e.next);
                try {
                  o();
                } catch (r) {
                  throw (e ? n() : (t = void 0), r);
                }
              }
              (t = void 0), r && r.enter();
            };
          if (c)
            n = function () {
              s.nextTick(u);
            };
          else if (!i || (r.navigator && r.navigator.standalone))
            if (a && a.resolve) {
              var l = a.resolve(void 0);
              n = function () {
                l.then(u);
              };
            } else
              n = function () {
                o.call(r, u);
              };
          else {
            var d = !0,
              p = document.createTextNode("");
            new i(u).observe(p, { characterData: !0 }),
              (n = function () {
                p.data = d = !d;
              });
          }
          return function (r) {
            var o = { fn: r, next: void 0 };
            t && (t.next = o), e || ((e = o), n()), (t = o);
          };
        };
      },
      3499: (e, t, n) => {
        "use strict";
        var r = n(4963);
        function o(e) {
          var t, n;
          (this.promise = new e(function (e, r) {
            if (void 0 !== t || void 0 !== n)
              throw TypeError("Bad Promise constructor");
            (t = e), (n = r);
          })),
            (this.resolve = r(t)),
            (this.reject = r(n));
        }
        e.exports.f = function (e) {
          return new o(e);
        };
      },
      5345: (e, t, n) => {
        "use strict";
        var r = n(7057),
          o = n(7184),
          i = n(4548),
          s = n(4682),
          a = n(508),
          c = n(9797),
          u = Object.assign;
        e.exports =
          !u ||
          n(4253)(function () {
            var e = {},
              t = {},
              n = Symbol(),
              r = "abcdefghijklmnopqrst";
            return (
              (e[n] = 7),
              r.split("").forEach(function (e) {
                t[e] = e;
              }),
              7 != u({}, e)[n] || Object.keys(u({}, t)).join("") != r
            );
          })
            ? function (e, t) {
                for (
                  var n = a(e), u = arguments.length, l = 1, d = i.f, p = s.f;
                  u > l;

                )
                  for (
                    var f,
                      h = c(arguments[l++]),
                      E = d ? o(h).concat(d(h)) : o(h),
                      g = E.length,
                      S = 0;
                    g > S;

                  )
                    (f = E[S++]), (r && !p.call(h, f)) || (n[f] = h[f]);
                return n;
              }
            : u;
      },
      2503: (e, t, n) => {
        var r = n(7007),
          o = n(5588),
          i = n(4430),
          s = n(9335)("IE_PROTO"),
          a = function () {},
          c = function () {
            var e,
              t = n(2457)("iframe"),
              r = i.length;
            for (
              t.style.display = "none",
                n(639).appendChild(t),
                t.src = "javascript:",
                (e = t.contentWindow.document).open(),
                e.write("<script>document.F=Object</script>"),
                e.close(),
                c = e.F;
              r--;

            )
              delete c.prototype[i[r]];
            return c();
          };
        e.exports =
          Object.create ||
          function (e, t) {
            var n;
            return (
              null !== e
                ? ((a.prototype = r(e)),
                  (n = new a()),
                  (a.prototype = null),
                  (n[s] = e))
                : (n = c()),
              void 0 === t ? n : o(n, t)
            );
          };
      },
      9275: (e, t, n) => {
        var r = n(7007),
          o = n(1734),
          i = n(1689),
          s = Object.defineProperty;
        t.f = n(7057)
          ? Object.defineProperty
          : function (e, t, n) {
              if ((r(e), (t = i(t, !0)), r(n), o))
                try {
                  return s(e, t, n);
                } catch (e) {}
              if ("get" in n || "set" in n)
                throw TypeError("Accessors not supported!");
              return "value" in n && (e[t] = n.value), e;
            };
      },
      5588: (e, t, n) => {
        var r = n(9275),
          o = n(7007),
          i = n(7184);
        e.exports = n(7057)
          ? Object.defineProperties
          : function (e, t) {
              o(e);
              for (var n, s = i(t), a = s.length, c = 0; a > c; )
                r.f(e, (n = s[c++]), t[n]);
              return e;
            };
      },
      8693: (e, t, n) => {
        var r = n(4682),
          o = n(681),
          i = n(2110),
          s = n(1689),
          a = n(9181),
          c = n(1734),
          u = Object.getOwnPropertyDescriptor;
        t.f = n(7057)
          ? u
          : function (e, t) {
              if (((e = i(e)), (t = s(t, !0)), c))
                try {
                  return u(e, t);
                } catch (e) {}
              if (a(e, t)) return o(!r.f.call(e, t), e[t]);
            };
      },
      9327: (e, t, n) => {
        var r = n(2110),
          o = n(616).f,
          i = {}.toString,
          s =
            "object" == typeof window && window && Object.getOwnPropertyNames
              ? Object.getOwnPropertyNames(window)
              : [];
        e.exports.f = function (e) {
          return s && "[object Window]" == i.call(e)
            ? (function (e) {
                try {
                  return o(e);
                } catch (e) {
                  return s.slice();
                }
              })(e)
            : o(r(e));
        };
      },
      616: (e, t, n) => {
        var r = n(189),
          o = n(4430).concat("length", "prototype");
        t.f =
          Object.getOwnPropertyNames ||
          function (e) {
            return r(e, o);
          };
      },
      4548: (e, t) => {
        t.f = Object.getOwnPropertySymbols;
      },
      468: (e, t, n) => {
        var r = n(9181),
          o = n(508),
          i = n(9335)("IE_PROTO"),
          s = Object.prototype;
        e.exports =
          Object.getPrototypeOf ||
          function (e) {
            return (
              (e = o(e)),
              r(e, i)
                ? e[i]
                : "function" == typeof e.constructor &&
                  e instanceof e.constructor
                ? e.constructor.prototype
                : e instanceof Object
                ? s
                : null
            );
          };
      },
      189: (e, t, n) => {
        var r = n(9181),
          o = n(2110),
          i = n(9315)(!1),
          s = n(9335)("IE_PROTO");
        e.exports = function (e, t) {
          var n,
            a = o(e),
            c = 0,
            u = [];
          for (n in a) n != s && r(a, n) && u.push(n);
          for (; t.length > c; ) r(a, (n = t[c++])) && (~i(u, n) || u.push(n));
          return u;
        };
      },
      7184: (e, t, n) => {
        var r = n(189),
          o = n(4430);
        e.exports =
          Object.keys ||
          function (e) {
            return r(e, o);
          };
      },
      4682: (e, t) => {
        t.f = {}.propertyIsEnumerable;
      },
      3160: (e, t, n) => {
        var r = n(2985),
          o = n(5645),
          i = n(4253);
        e.exports = function (e, t) {
          var n = (o.Object || {})[e] || Object[e],
            s = {};
          (s[e] = t(n)),
            r(
              r.S +
                r.F *
                  i(function () {
                    n(1);
                  }),
              "Object",
              s
            );
        };
      },
      7643: (e, t, n) => {
        var r = n(616),
          o = n(4548),
          i = n(7007),
          s = n(3816).Reflect;
        e.exports =
          (s && s.ownKeys) ||
          function (e) {
            var t = r.f(i(e)),
              n = o.f;
            return n ? t.concat(n(e)) : t;
          };
      },
      188: (e) => {
        e.exports = function (e) {
          try {
            return { e: !1, v: e() };
          } catch (e) {
            return { e: !0, v: e };
          }
        };
      },
      94: (e, t, n) => {
        var r = n(7007),
          o = n(5286),
          i = n(3499);
        e.exports = function (e, t) {
          if ((r(e), o(t) && t.constructor === e)) return t;
          var n = i.f(e);
          return (0, n.resolve)(t), n.promise;
        };
      },
      681: (e) => {
        e.exports = function (e, t) {
          return {
            enumerable: !(1 & e),
            configurable: !(2 & e),
            writable: !(4 & e),
            value: t,
          };
        };
      },
      4408: (e, t, n) => {
        var r = n(7234);
        e.exports = function (e, t, n) {
          for (var o in t) r(e, o, t[o], n);
          return e;
        };
      },
      7234: (e, t, n) => {
        var r = n(3816),
          o = n(7728),
          i = n(9181),
          s = n(3953)("src"),
          a = n(18),
          c = "toString",
          u = ("" + a).split(c);
        (n(5645).inspectSource = function (e) {
          return a.call(e);
        }),
          (e.exports = function (e, t, n, a) {
            var c = "function" == typeof n;
            c && (i(n, "name") || o(n, "name", t)),
              e[t] !== n &&
                (c &&
                  (i(n, s) || o(n, s, e[t] ? "" + e[t] : u.join(String(t)))),
                e === r
                  ? (e[t] = n)
                  : a
                  ? e[t]
                    ? (e[t] = n)
                    : o(e, t, n)
                  : (delete e[t], o(e, t, n)));
          })(Function.prototype, c, function () {
            return ("function" == typeof this && this[s]) || a.call(this);
          });
      },
      7375: (e, t, n) => {
        var r = n(5286),
          o = n(7007),
          i = function (e, t) {
            if ((o(e), !r(t) && null !== t))
              throw TypeError(t + ": can't set as prototype!");
          };
        e.exports = {
          set:
            Object.setPrototypeOf ||
            ("__proto__" in {}
              ? (function (e, t, r) {
                  try {
                    (r = n(741)(
                      Function.call,
                      n(8693).f(Object.prototype, "__proto__").set,
                      2
                    ))(e, []),
                      (t = !(e instanceof Array));
                  } catch (e) {
                    t = !0;
                  }
                  return function (e, n) {
                    return i(e, n), t ? (e.__proto__ = n) : r(e, n), e;
                  };
                })({}, !1)
              : void 0),
          check: i,
        };
      },
      2974: (e, t, n) => {
        "use strict";
        var r = n(3816),
          o = n(9275),
          i = n(7057),
          s = n(6314)("species");
        e.exports = function (e) {
          var t = r[e];
          i &&
            t &&
            !t[s] &&
            o.f(t, s, {
              configurable: !0,
              get: function () {
                return this;
              },
            });
        };
      },
      2943: (e, t, n) => {
        var r = n(9275).f,
          o = n(9181),
          i = n(6314)("toStringTag");
        e.exports = function (e, t, n) {
          e &&
            !o((e = n ? e : e.prototype), i) &&
            r(e, i, { configurable: !0, value: t });
        };
      },
      9335: (e, t, n) => {
        var r = n(3825)("keys"),
          o = n(3953);
        e.exports = function (e) {
          return r[e] || (r[e] = o(e));
        };
      },
      3825: (e, t, n) => {
        var r = n(5645),
          o = n(3816),
          i = "__core-js_shared__",
          s = o[i] || (o[i] = {});
        (e.exports = function (e, t) {
          return s[e] || (s[e] = void 0 !== t ? t : {});
        })("versions", []).push({
          version: r.version,
          mode: n(4461) ? "pure" : "global",
          copyright: "© 2020 Denis Pushkarev (zloirock.ru)",
        });
      },
      8364: (e, t, n) => {
        var r = n(7007),
          o = n(4963),
          i = n(6314)("species");
        e.exports = function (e, t) {
          var n,
            s = r(e).constructor;
          return void 0 === s || null == (n = r(s)[i]) ? t : o(n);
        };
      },
      7717: (e, t, n) => {
        "use strict";
        var r = n(4253);
        e.exports = function (e, t) {
          return (
            !!e &&
            r(function () {
              t ? e.call(null, function () {}, 1) : e.call(null);
            })
          );
        };
      },
      4496: (e, t, n) => {
        var r = n(1467),
          o = n(1355);
        e.exports = function (e) {
          return function (t, n) {
            var i,
              s,
              a = String(o(t)),
              c = r(n),
              u = a.length;
            return c < 0 || c >= u
              ? e
                ? ""
                : void 0
              : (i = a.charCodeAt(c)) < 55296 ||
                i > 56319 ||
                c + 1 === u ||
                (s = a.charCodeAt(c + 1)) < 56320 ||
                s > 57343
              ? e
                ? a.charAt(c)
                : i
              : e
              ? a.slice(c, c + 2)
              : s - 56320 + ((i - 55296) << 10) + 65536;
          };
        };
      },
      4193: (e, t, n) => {
        var r,
          o,
          i,
          s = n(741),
          a = n(7242),
          c = n(639),
          u = n(2457),
          l = n(3816),
          d = l.process,
          p = l.setImmediate,
          f = l.clearImmediate,
          h = l.MessageChannel,
          E = l.Dispatch,
          g = 0,
          S = {},
          C = function () {
            var e = +this;
            if (S.hasOwnProperty(e)) {
              var t = S[e];
              delete S[e], t();
            }
          },
          _ = function (e) {
            C.call(e.data);
          };
        (p && f) ||
          ((p = function (e) {
            for (var t = [], n = 1; arguments.length > n; )
              t.push(arguments[n++]);
            return (
              (S[++g] = function () {
                a("function" == typeof e ? e : Function(e), t);
              }),
              r(g),
              g
            );
          }),
          (f = function (e) {
            delete S[e];
          }),
          "process" == n(2032)(d)
            ? (r = function (e) {
                d.nextTick(s(C, e, 1));
              })
            : E && E.now
            ? (r = function (e) {
                E.now(s(C, e, 1));
              })
            : h
            ? ((i = (o = new h()).port2),
              (o.port1.onmessage = _),
              (r = s(i.postMessage, i, 1)))
            : l.addEventListener &&
              "function" == typeof postMessage &&
              !l.importScripts
            ? ((r = function (e) {
                l.postMessage(e + "", "*");
              }),
              l.addEventListener("message", _, !1))
            : (r =
                "onreadystatechange" in u("script")
                  ? function (e) {
                      c.appendChild(u("script")).onreadystatechange =
                        function () {
                          c.removeChild(this), C.call(e);
                        };
                    }
                  : function (e) {
                      setTimeout(s(C, e, 1), 0);
                    })),
          (e.exports = { set: p, clear: f });
      },
      2337: (e, t, n) => {
        var r = n(1467),
          o = Math.max,
          i = Math.min;
        e.exports = function (e, t) {
          return (e = r(e)) < 0 ? o(e + t, 0) : i(e, t);
        };
      },
      1467: (e) => {
        var t = Math.ceil,
          n = Math.floor;
        e.exports = function (e) {
          return isNaN((e = +e)) ? 0 : (e > 0 ? n : t)(e);
        };
      },
      2110: (e, t, n) => {
        var r = n(9797),
          o = n(1355);
        e.exports = function (e) {
          return r(o(e));
        };
      },
      875: (e, t, n) => {
        var r = n(1467),
          o = Math.min;
        e.exports = function (e) {
          return e > 0 ? o(r(e), 9007199254740991) : 0;
        };
      },
      508: (e, t, n) => {
        var r = n(1355);
        e.exports = function (e) {
          return Object(r(e));
        };
      },
      1689: (e, t, n) => {
        var r = n(5286);
        e.exports = function (e, t) {
          if (!r(e)) return e;
          var n, o;
          if (t && "function" == typeof (n = e.toString) && !r((o = n.call(e))))
            return o;
          if ("function" == typeof (n = e.valueOf) && !r((o = n.call(e))))
            return o;
          if (
            !t &&
            "function" == typeof (n = e.toString) &&
            !r((o = n.call(e)))
          )
            return o;
          throw TypeError("Can't convert object to primitive value");
        };
      },
      3953: (e) => {
        var t = 0,
          n = Math.random();
        e.exports = function (e) {
          return "Symbol(".concat(
            void 0 === e ? "" : e,
            ")_",
            (++t + n).toString(36)
          );
        };
      },
      575: (e, t, n) => {
        var r = n(3816).navigator;
        e.exports = (r && r.userAgent) || "";
      },
      6074: (e, t, n) => {
        var r = n(3816),
          o = n(5645),
          i = n(4461),
          s = n(8787),
          a = n(9275).f;
        e.exports = function (e) {
          var t = o.Symbol || (o.Symbol = i ? {} : r.Symbol || {});
          "_" == e.charAt(0) || e in t || a(t, e, { value: s.f(e) });
        };
      },
      8787: (e, t, n) => {
        t.f = n(6314);
      },
      6314: (e, t, n) => {
        var r = n(3825)("wks"),
          o = n(3953),
          i = n(3816).Symbol,
          s = "function" == typeof i;
        (e.exports = function (e) {
          return r[e] || (r[e] = (s && i[e]) || (s ? i : o)("Symbol." + e));
        }).store = r;
      },
      9002: (e, t, n) => {
        var r = n(1488),
          o = n(6314)("iterator"),
          i = n(2803);
        e.exports = n(5645).getIteratorMethod = function (e) {
          if (null != e) return e[o] || e["@@iterator"] || i[r(e)];
        };
      },
      8837: (e, t, n) => {
        "use strict";
        var r = n(2985),
          o = n(50)(2);
        r(r.P + r.F * !n(7717)([].filter, !0), "Array", {
          filter: function (e) {
            return o(this, e, arguments[1]);
          },
        });
      },
      6997: (e, t, n) => {
        "use strict";
        var r = n(7722),
          o = n(5436),
          i = n(2803),
          s = n(2110);
        (e.exports = n(2923)(
          Array,
          "Array",
          function (e, t) {
            (this._t = s(e)), (this._i = 0), (this._k = t);
          },
          function () {
            var e = this._t,
              t = this._k,
              n = this._i++;
            return !e || n >= e.length
              ? ((this._t = void 0), o(1))
              : o(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]]);
          },
          "values"
        )),
          (i.Arguments = i.Array),
          r("keys"),
          r("values"),
          r("entries");
      },
      6059: (e, t, n) => {
        var r = n(9275).f,
          o = Function.prototype,
          i = /^\s*function ([^ (]*)/,
          s = "name";
        s in o ||
          (n(7057) &&
            r(o, s, {
              configurable: !0,
              get: function () {
                try {
                  return ("" + this).match(i)[1];
                } catch (e) {
                  return "";
                }
              },
            }));
      },
      5115: (e, t, n) => {
        var r = n(2985);
        r(r.S + r.F, "Object", { assign: n(5345) });
      },
      4882: (e, t, n) => {
        var r = n(2110),
          o = n(8693).f;
        n(3160)("getOwnPropertyDescriptor", function () {
          return function (e, t) {
            return o(r(e), t);
          };
        });
      },
      1520: (e, t, n) => {
        var r = n(508),
          o = n(468);
        n(3160)("getPrototypeOf", function () {
          return function (e) {
            return o(r(e));
          };
        });
      },
      7476: (e, t, n) => {
        var r = n(508),
          o = n(7184);
        n(3160)("keys", function () {
          return function (e) {
            return o(r(e));
          };
        });
      },
      8838: (e, t, n) => {
        var r = n(2985);
        r(r.S, "Object", { setPrototypeOf: n(7375).set });
      },
      6253: (e, t, n) => {
        "use strict";
        var r = n(1488),
          o = {};
        (o[n(6314)("toStringTag")] = "z"),
          o + "" != "[object z]" &&
            n(7234)(
              Object.prototype,
              "toString",
              function () {
                return "[object " + r(this) + "]";
              },
              !0
            );
      },
      851: (e, t, n) => {
        "use strict";
        var r,
          o,
          i,
          s,
          a = n(4461),
          c = n(3816),
          u = n(741),
          l = n(1488),
          d = n(2985),
          p = n(5286),
          f = n(4963),
          h = n(3328),
          E = n(3531),
          g = n(8364),
          S = n(4193).set,
          C = n(4351)(),
          _ = n(3499),
          m = n(188),
          T = n(575),
          y = n(94),
          A = "Promise",
          I = c.TypeError,
          v = c.process,
          N = v && v.versions,
          R = (N && N.v8) || "",
          O = c.Promise,
          P = "process" == l(v),
          M = function () {},
          L = (o = _.f),
          b = !!(function () {
            try {
              var e = O.resolve(1),
                t = ((e.constructor = {})[n(6314)("species")] = function (e) {
                  e(M, M);
                });
              return (
                (P || "function" == typeof PromiseRejectionEvent) &&
                e.then(M) instanceof t &&
                0 !== R.indexOf("6.6") &&
                -1 === T.indexOf("Chrome/66")
              );
            } catch (e) {}
          })(),
          w = function (e) {
            var t;
            return !(!p(e) || "function" != typeof (t = e.then)) && t;
          },
          D = function (e, t) {
            if (!e._n) {
              e._n = !0;
              var n = e._c;
              C(function () {
                for (
                  var r = e._v,
                    o = 1 == e._s,
                    i = 0,
                    s = function (t) {
                      var n,
                        i,
                        s,
                        a = o ? t.ok : t.fail,
                        c = t.resolve,
                        u = t.reject,
                        l = t.domain;
                      try {
                        a
                          ? (o || (2 == e._h && Y(e), (e._h = 1)),
                            !0 === a
                              ? (n = r)
                              : (l && l.enter(),
                                (n = a(r)),
                                l && (l.exit(), (s = !0))),
                            n === t.promise
                              ? u(I("Promise-chain cycle"))
                              : (i = w(n))
                              ? i.call(n, c, u)
                              : c(n))
                          : u(r);
                      } catch (e) {
                        l && !s && l.exit(), u(e);
                      }
                    };
                  n.length > i;

                )
                  s(n[i++]);
                (e._c = []), (e._n = !1), t && !e._h && U(e);
              });
            }
          },
          U = function (e) {
            S.call(c, function () {
              var t,
                n,
                r,
                o = e._v,
                i = x(e);
              if (
                (i &&
                  ((t = m(function () {
                    P
                      ? v.emit("unhandledRejection", o, e)
                      : (n = c.onunhandledrejection)
                      ? n({ promise: e, reason: o })
                      : (r = c.console) &&
                        r.error &&
                        r.error("Unhandled promise rejection", o);
                  })),
                  (e._h = P || x(e) ? 2 : 1)),
                (e._a = void 0),
                i && t.e)
              )
                throw t.v;
            });
          },
          x = function (e) {
            return 1 !== e._h && 0 === (e._a || e._c).length;
          },
          Y = function (e) {
            S.call(c, function () {
              var t;
              P
                ? v.emit("rejectionHandled", e)
                : (t = c.onrejectionhandled) && t({ promise: e, reason: e._v });
            });
          },
          G = function (e) {
            var t = this;
            t._d ||
              ((t._d = !0),
              ((t = t._w || t)._v = e),
              (t._s = 2),
              t._a || (t._a = t._c.slice()),
              D(t, !0));
          },
          k = function (e) {
            var t,
              n = this;
            if (!n._d) {
              (n._d = !0), (n = n._w || n);
              try {
                if (n === e) throw I("Promise can't be resolved itself");
                (t = w(e))
                  ? C(function () {
                      var r = { _w: n, _d: !1 };
                      try {
                        t.call(e, u(k, r, 1), u(G, r, 1));
                      } catch (e) {
                        G.call(r, e);
                      }
                    })
                  : ((n._v = e), (n._s = 1), D(n, !1));
              } catch (e) {
                G.call({ _w: n, _d: !1 }, e);
              }
            }
          };
        b ||
          ((O = function (e) {
            h(this, O, A, "_h"), f(e), r.call(this);
            try {
              e(u(k, this, 1), u(G, this, 1));
            } catch (e) {
              G.call(this, e);
            }
          }),
          ((r = function (e) {
            (this._c = []),
              (this._a = void 0),
              (this._s = 0),
              (this._d = !1),
              (this._v = void 0),
              (this._h = 0),
              (this._n = !1);
          }).prototype = n(4408)(O.prototype, {
            then: function (e, t) {
              var n = L(g(this, O));
              return (
                (n.ok = "function" != typeof e || e),
                (n.fail = "function" == typeof t && t),
                (n.domain = P ? v.domain : void 0),
                this._c.push(n),
                this._a && this._a.push(n),
                this._s && D(this, !1),
                n.promise
              );
            },
            catch: function (e) {
              return this.then(void 0, e);
            },
          })),
          (i = function () {
            var e = new r();
            (this.promise = e),
              (this.resolve = u(k, e, 1)),
              (this.reject = u(G, e, 1));
          }),
          (_.f = L =
            function (e) {
              return e === O || e === s ? new i(e) : o(e);
            })),
          d(d.G + d.W + d.F * !b, { Promise: O }),
          n(2943)(O, A),
          n(2974)(A),
          (s = n(5645).Promise),
          d(d.S + d.F * !b, A, {
            reject: function (e) {
              var t = L(this);
              return (0, t.reject)(e), t.promise;
            },
          }),
          d(d.S + d.F * (a || !b), A, {
            resolve: function (e) {
              return y(a && this === s ? O : this, e);
            },
          }),
          d(
            d.S +
              d.F *
                !(
                  b &&
                  n(7462)(function (e) {
                    O.all(e).catch(M);
                  })
                ),
            A,
            {
              all: function (e) {
                var t = this,
                  n = L(t),
                  r = n.resolve,
                  o = n.reject,
                  i = m(function () {
                    var n = [],
                      i = 0,
                      s = 1;
                    E(e, !1, function (e) {
                      var a = i++,
                        c = !1;
                      n.push(void 0),
                        s++,
                        t.resolve(e).then(function (e) {
                          c || ((c = !0), (n[a] = e), --s || r(n));
                        }, o);
                    }),
                      --s || r(n);
                  });
                return i.e && o(i.v), n.promise;
              },
              race: function (e) {
                var t = this,
                  n = L(t),
                  r = n.reject,
                  o = m(function () {
                    E(e, !1, function (e) {
                      t.resolve(e).then(n.resolve, r);
                    });
                  });
                return o.e && r(o.v), n.promise;
              },
            }
          );
      },
      2139: (e, t, n) => {
        var r = n(2985),
          o = n(2503),
          i = n(4963),
          s = n(7007),
          a = n(5286),
          c = n(4253),
          u = n(4398),
          l = (n(3816).Reflect || {}).construct,
          d = c(function () {
            function e() {}
            return !(l(function () {}, [], e) instanceof e);
          }),
          p = !c(function () {
            l(function () {});
          });
        r(r.S + r.F * (d || p), "Reflect", {
          construct: function (e, t) {
            i(e), s(t);
            var n = arguments.length < 3 ? e : i(arguments[2]);
            if (p && !d) return l(e, t, n);
            if (e == n) {
              switch (t.length) {
                case 0:
                  return new e();
                case 1:
                  return new e(t[0]);
                case 2:
                  return new e(t[0], t[1]);
                case 3:
                  return new e(t[0], t[1], t[2]);
                case 4:
                  return new e(t[0], t[1], t[2], t[3]);
              }
              var r = [null];
              return r.push.apply(r, t), new (u.apply(e, r))();
            }
            var c = n.prototype,
              f = o(a(c) ? c : Object.prototype),
              h = Function.apply.call(e, f, t);
            return a(h) ? h : f;
          },
        });
      },
      6774: (e, t, n) => {
        n(7057) &&
          "g" != /./g.flags &&
          n(9275).f(RegExp.prototype, "flags", {
            configurable: !0,
            get: n(3218),
          });
      },
      6108: (e, t, n) => {
        "use strict";
        n(6774);
        var r = n(7007),
          o = n(3218),
          i = n(7057),
          s = "toString",
          a = /./.toString,
          c = function (e) {
            n(7234)(RegExp.prototype, s, e, !0);
          };
        n(4253)(function () {
          return "/a/b" != a.call({ source: "a", flags: "b" });
        })
          ? c(function () {
              var e = r(this);
              return "/".concat(
                e.source,
                "/",
                "flags" in e
                  ? e.flags
                  : !i && e instanceof RegExp
                  ? o.call(e)
                  : void 0
              );
            })
          : a.name != s &&
            c(function () {
              return a.call(this);
            });
      },
      9115: (e, t, n) => {
        "use strict";
        var r = n(4496)(!0);
        n(2923)(
          String,
          "String",
          function (e) {
            (this._t = String(e)), (this._i = 0);
          },
          function () {
            var e,
              t = this._t,
              n = this._i;
            return n >= t.length
              ? { value: void 0, done: !0 }
              : ((e = r(t, n)), (this._i += e.length), { value: e, done: !1 });
          }
        );
      },
      5767: (e, t, n) => {
        "use strict";
        var r = n(3816),
          o = n(9181),
          i = n(7057),
          s = n(2985),
          a = n(7234),
          c = n(4728).KEY,
          u = n(4253),
          l = n(3825),
          d = n(2943),
          p = n(3953),
          f = n(6314),
          h = n(8787),
          E = n(6074),
          g = n(5541),
          S = n(4302),
          C = n(7007),
          _ = n(5286),
          m = n(508),
          T = n(2110),
          y = n(1689),
          A = n(681),
          I = n(2503),
          v = n(9327),
          N = n(8693),
          R = n(4548),
          O = n(9275),
          P = n(7184),
          M = N.f,
          L = O.f,
          b = v.f,
          w = r.Symbol,
          D = r.JSON,
          U = D && D.stringify,
          x = f("_hidden"),
          Y = f("toPrimitive"),
          G = {}.propertyIsEnumerable,
          k = l("symbol-registry"),
          F = l("symbols"),
          B = l("op-symbols"),
          K = Object.prototype,
          H = "function" == typeof w && !!R.f,
          V = r.QObject,
          j = !V || !V.prototype || !V.prototype.findChild,
          J =
            i &&
            u(function () {
              return (
                7 !=
                I(
                  L({}, "a", {
                    get: function () {
                      return L(this, "a", { value: 7 }).a;
                    },
                  })
                ).a
              );
            })
              ? function (e, t, n) {
                  var r = M(K, t);
                  r && delete K[t], L(e, t, n), r && e !== K && L(K, t, r);
                }
              : L,
          X = function (e) {
            var t = (F[e] = I(w.prototype));
            return (t._k = e), t;
          },
          W =
            H && "symbol" == typeof w.iterator
              ? function (e) {
                  return "symbol" == typeof e;
                }
              : function (e) {
                  return e instanceof w;
                },
          q = function (e, t, n) {
            return (
              e === K && q(B, t, n),
              C(e),
              (t = y(t, !0)),
              C(n),
              o(F, t)
                ? (n.enumerable
                    ? (o(e, x) && e[x][t] && (e[x][t] = !1),
                      (n = I(n, { enumerable: A(0, !1) })))
                    : (o(e, x) || L(e, x, A(1, {})), (e[x][t] = !0)),
                  J(e, t, n))
                : L(e, t, n)
            );
          },
          z = function (e, t) {
            C(e);
            for (var n, r = g((t = T(t))), o = 0, i = r.length; i > o; )
              q(e, (n = r[o++]), t[n]);
            return e;
          },
          Q = function (e) {
            var t = G.call(this, (e = y(e, !0)));
            return (
              !(this === K && o(F, e) && !o(B, e)) &&
              (!(t || !o(this, e) || !o(F, e) || (o(this, x) && this[x][e])) ||
                t)
            );
          },
          $ = function (e, t) {
            if (((e = T(e)), (t = y(t, !0)), e !== K || !o(F, t) || o(B, t))) {
              var n = M(e, t);
              return (
                !n || !o(F, t) || (o(e, x) && e[x][t]) || (n.enumerable = !0), n
              );
            }
          },
          Z = function (e) {
            for (var t, n = b(T(e)), r = [], i = 0; n.length > i; )
              o(F, (t = n[i++])) || t == x || t == c || r.push(t);
            return r;
          },
          ee = function (e) {
            for (
              var t, n = e === K, r = b(n ? B : T(e)), i = [], s = 0;
              r.length > s;

            )
              !o(F, (t = r[s++])) || (n && !o(K, t)) || i.push(F[t]);
            return i;
          };
        H ||
          (a(
            (w = function () {
              if (this instanceof w)
                throw TypeError("Symbol is not a constructor!");
              var e = p(arguments.length > 0 ? arguments[0] : void 0),
                t = function (n) {
                  this === K && t.call(B, n),
                    o(this, x) && o(this[x], e) && (this[x][e] = !1),
                    J(this, e, A(1, n));
                };
              return i && j && J(K, e, { configurable: !0, set: t }), X(e);
            }).prototype,
            "toString",
            function () {
              return this._k;
            }
          ),
          (N.f = $),
          (O.f = q),
          (n(616).f = v.f = Z),
          (n(4682).f = Q),
          (R.f = ee),
          i && !n(4461) && a(K, "propertyIsEnumerable", Q, !0),
          (h.f = function (e) {
            return X(f(e));
          })),
          s(s.G + s.W + s.F * !H, { Symbol: w });
        for (
          var te =
              "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(
                ","
              ),
            ne = 0;
          te.length > ne;

        )
          f(te[ne++]);
        for (var re = P(f.store), oe = 0; re.length > oe; ) E(re[oe++]);
        s(s.S + s.F * !H, "Symbol", {
          for: function (e) {
            return o(k, (e += "")) ? k[e] : (k[e] = w(e));
          },
          keyFor: function (e) {
            if (!W(e)) throw TypeError(e + " is not a symbol!");
            for (var t in k) if (k[t] === e) return t;
          },
          useSetter: function () {
            j = !0;
          },
          useSimple: function () {
            j = !1;
          },
        }),
          s(s.S + s.F * !H, "Object", {
            create: function (e, t) {
              return void 0 === t ? I(e) : z(I(e), t);
            },
            defineProperty: q,
            defineProperties: z,
            getOwnPropertyDescriptor: $,
            getOwnPropertyNames: Z,
            getOwnPropertySymbols: ee,
          });
        var ie = u(function () {
          R.f(1);
        });
        s(s.S + s.F * ie, "Object", {
          getOwnPropertySymbols: function (e) {
            return R.f(m(e));
          },
        }),
          D &&
            s(
              s.S +
                s.F *
                  (!H ||
                    u(function () {
                      var e = w();
                      return (
                        "[null]" != U([e]) ||
                        "{}" != U({ a: e }) ||
                        "{}" != U(Object(e))
                      );
                    })),
              "JSON",
              {
                stringify: function (e) {
                  for (var t, n, r = [e], o = 1; arguments.length > o; )
                    r.push(arguments[o++]);
                  if (((n = t = r[1]), (_(t) || void 0 !== e) && !W(e)))
                    return (
                      S(t) ||
                        (t = function (e, t) {
                          if (
                            ("function" == typeof n && (t = n.call(this, e, t)),
                            !W(t))
                          )
                            return t;
                        }),
                      (r[1] = t),
                      U.apply(D, r)
                    );
                },
              }
            ),
          w.prototype[Y] || n(7728)(w.prototype, Y, w.prototype.valueOf),
          d(w, "Symbol"),
          d(Math, "Math", !0),
          d(r.JSON, "JSON", !0);
      },
      8351: (e, t, n) => {
        var r = n(2985),
          o = n(7643),
          i = n(2110),
          s = n(8693),
          a = n(2811);
        r(r.S, "Object", {
          getOwnPropertyDescriptors: function (e) {
            for (
              var t, n, r = i(e), c = s.f, u = o(r), l = {}, d = 0;
              u.length > d;

            )
              void 0 !== (n = c(r, (t = u[d++]))) && a(l, t, n);
            return l;
          },
        });
      },
      1181: (e, t, n) => {
        for (
          var r = n(6997),
            o = n(7184),
            i = n(7234),
            s = n(3816),
            a = n(7728),
            c = n(2803),
            u = n(6314),
            l = u("iterator"),
            d = u("toStringTag"),
            p = c.Array,
            f = {
              CSSRuleList: !0,
              CSSStyleDeclaration: !1,
              CSSValueList: !1,
              ClientRectList: !1,
              DOMRectList: !1,
              DOMStringList: !1,
              DOMTokenList: !0,
              DataTransferItemList: !1,
              FileList: !1,
              HTMLAllCollection: !1,
              HTMLCollection: !1,
              HTMLFormElement: !1,
              HTMLSelectElement: !1,
              MediaList: !0,
              MimeTypeArray: !1,
              NamedNodeMap: !1,
              NodeList: !0,
              PaintRequestList: !1,
              Plugin: !1,
              PluginArray: !1,
              SVGLengthList: !1,
              SVGNumberList: !1,
              SVGPathSegList: !1,
              SVGPointList: !1,
              SVGStringList: !1,
              SVGTransformList: !1,
              SourceBufferList: !1,
              StyleSheetList: !0,
              TextTrackCueList: !1,
              TextTrackList: !1,
              TouchList: !1,
            },
            h = o(f),
            E = 0;
          E < h.length;
          E++
        ) {
          var g,
            S = h[E],
            C = f[S],
            _ = s[S],
            m = _ && _.prototype;
          if (m && (m[l] || a(m, l, p), m[d] || a(m, d, S), (c[S] = p), C))
            for (g in r) m[g] || i(m, g, r[g], !0);
        }
      },
      7418: (e) => {
        "use strict";
        var t = Object.getOwnPropertySymbols,
          n = Object.prototype.hasOwnProperty,
          r = Object.prototype.propertyIsEnumerable;
        function o(e) {
          if (null == e)
            throw new TypeError(
              "Object.assign cannot be called with null or undefined"
            );
          return Object(e);
        }
        e.exports = (function () {
          try {
            if (!Object.assign) return !1;
            var e = new String("abc");
            if (((e[5] = "de"), "5" === Object.getOwnPropertyNames(e)[0]))
              return !1;
            for (var t = {}, n = 0; n < 10; n++)
              t["_" + String.fromCharCode(n)] = n;
            if (
              "0123456789" !==
              Object.getOwnPropertyNames(t)
                .map(function (e) {
                  return t[e];
                })
                .join("")
            )
              return !1;
            var r = {};
            return (
              "abcdefghijklmnopqrst".split("").forEach(function (e) {
                r[e] = e;
              }),
              "abcdefghijklmnopqrst" ===
                Object.keys(Object.assign({}, r)).join("")
            );
          } catch (e) {
            return !1;
          }
        })()
          ? Object.assign
          : function (e, i) {
              for (var s, a, c = o(e), u = 1; u < arguments.length; u++) {
                for (var l in (s = Object(arguments[u])))
                  n.call(s, l) && (c[l] = s[l]);
                if (t) {
                  a = t(s);
                  for (var d = 0; d < a.length; d++)
                    r.call(s, a[d]) && (c[a[d]] = s[a[d]]);
                }
              }
              return c;
            };
      },
      4448: (e, t, n) => {
        "use strict";
        var r = n(7294),
          o = n(7418),
          i = n(3840);
        function s(e) {
          for (
            var t =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
              n = 1;
            n < arguments.length;
            n++
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        if (!r) throw Error(s(227));
        var a = new Set(),
          c = {};
        function u(e, t) {
          l(e, t), l(e + "Capture", t);
        }
        function l(e, t) {
          for (c[e] = t, e = 0; e < t.length; e++) a.add(t[e]);
        }
        var d = !(
            "undefined" == typeof window ||
            void 0 === window.document ||
            void 0 === window.document.createElement
          ),
          p =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          f = Object.prototype.hasOwnProperty,
          h = {},
          E = {};
        function g(e, t, n, r, o, i, s) {
          (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
            (this.attributeName = r),
            (this.attributeNamespace = o),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = i),
            (this.removeEmptyString = s);
        }
        var S = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
          .split(" ")
          .forEach(function (e) {
            S[e] = new g(e, 0, !1, e, null, !1, !1);
          }),
          [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
          ].forEach(function (e) {
            var t = e[0];
            S[t] = new g(t, 1, !1, e[1], null, !1, !1);
          }),
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            function (e) {
              S[e] = new g(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
          ),
          [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
          ].forEach(function (e) {
            S[e] = new g(e, 2, !1, e, null, !1, !1);
          }),
          "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
            .split(" ")
            .forEach(function (e) {
              S[e] = new g(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
          ["checked", "multiple", "muted", "selected"].forEach(function (e) {
            S[e] = new g(e, 3, !0, e, null, !1, !1);
          }),
          ["capture", "download"].forEach(function (e) {
            S[e] = new g(e, 4, !1, e, null, !1, !1);
          }),
          ["cols", "rows", "size", "span"].forEach(function (e) {
            S[e] = new g(e, 6, !1, e, null, !1, !1);
          }),
          ["rowSpan", "start"].forEach(function (e) {
            S[e] = new g(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        var C = /[\-:]([a-z])/g;
        function _(e) {
          return e[1].toUpperCase();
        }
        function m(e, t, n, r) {
          var o = S.hasOwnProperty(t) ? S[t] : null;
          (null !== o
            ? 0 === o.type
            : !r &&
              2 < t.length &&
              ("o" === t[0] || "O" === t[0]) &&
              ("n" === t[1] || "N" === t[1])) ||
            ((function (e, t, n, r) {
              if (
                null == t ||
                (function (e, t, n, r) {
                  if (null !== n && 0 === n.type) return !1;
                  switch (typeof t) {
                    case "function":
                    case "symbol":
                      return !0;
                    case "boolean":
                      return (
                        !r &&
                        (null !== n
                          ? !n.acceptsBooleans
                          : "data-" !== (e = e.toLowerCase().slice(0, 5)) &&
                            "aria-" !== e)
                      );
                    default:
                      return !1;
                  }
                })(e, t, n, r)
              )
                return !0;
              if (r) return !1;
              if (null !== n)
                switch (n.type) {
                  case 3:
                    return !t;
                  case 4:
                    return !1 === t;
                  case 5:
                    return isNaN(t);
                  case 6:
                    return isNaN(t) || 1 > t;
                }
              return !1;
            })(t, n, o, r) && (n = null),
            r || null === o
              ? (function (e) {
                  return (
                    !!f.call(E, e) ||
                    (!f.call(h, e) &&
                      (p.test(e) ? (E[e] = !0) : ((h[e] = !0), !1)))
                  );
                })(t) &&
                (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
              : o.mustUseProperty
              ? (e[o.propertyName] = null === n ? 3 !== o.type && "" : n)
              : ((t = o.attributeName),
                (r = o.attributeNamespace),
                null === n
                  ? e.removeAttribute(t)
                  : ((n =
                      3 === (o = o.type) || (4 === o && !0 === n)
                        ? ""
                        : "" + n),
                    r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
          .split(" ")
          .forEach(function (e) {
            var t = e.replace(C, _);
            S[t] = new g(t, 1, !1, e, null, !1, !1);
          }),
          "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
            .split(" ")
            .forEach(function (e) {
              var t = e.replace(C, _);
              S[t] = new g(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
            }),
          ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
            var t = e.replace(C, _);
            S[t] = new g(
              t,
              1,
              !1,
              e,
              "http://www.w3.org/XML/1998/namespace",
              !1,
              !1
            );
          }),
          ["tabIndex", "crossOrigin"].forEach(function (e) {
            S[e] = new g(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (S.xlinkHref = new g(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
          )),
          ["src", "href", "action", "formAction"].forEach(function (e) {
            S[e] = new g(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        var T = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
          y = 60103,
          A = 60106,
          I = 60107,
          v = 60108,
          N = 60114,
          R = 60109,
          O = 60110,
          P = 60112,
          M = 60113,
          L = 60120,
          b = 60115,
          w = 60116,
          D = 60121,
          U = 60128,
          x = 60129,
          Y = 60130,
          G = 60131;
        if ("function" == typeof Symbol && Symbol.for) {
          var k = Symbol.for;
          (y = k("react.element")),
            (A = k("react.portal")),
            (I = k("react.fragment")),
            (v = k("react.strict_mode")),
            (N = k("react.profiler")),
            (R = k("react.provider")),
            (O = k("react.context")),
            (P = k("react.forward_ref")),
            (M = k("react.suspense")),
            (L = k("react.suspense_list")),
            (b = k("react.memo")),
            (w = k("react.lazy")),
            (D = k("react.block")),
            k("react.scope"),
            (U = k("react.opaque.id")),
            (x = k("react.debug_trace_mode")),
            (Y = k("react.offscreen")),
            (G = k("react.legacy_hidden"));
        }
        var F,
          B = "function" == typeof Symbol && Symbol.iterator;
        function K(e) {
          return null === e || "object" != typeof e
            ? null
            : "function" == typeof (e = (B && e[B]) || e["@@iterator"])
            ? e
            : null;
        }
        function H(e) {
          if (void 0 === F)
            try {
              throw Error();
            } catch (e) {
              var t = e.stack.trim().match(/\n( *(at )?)/);
              F = (t && t[1]) || "";
            }
          return "\n" + F + e;
        }
        var V = !1;
        function j(e, t) {
          if (!e || V) return "";
          V = !0;
          var n = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          try {
            if (t)
              if (
                ((t = function () {
                  throw Error();
                }),
                Object.defineProperty(t.prototype, "props", {
                  set: function () {
                    throw Error();
                  },
                }),
                "object" == typeof Reflect && Reflect.construct)
              ) {
                try {
                  Reflect.construct(t, []);
                } catch (e) {
                  var r = e;
                }
                Reflect.construct(e, [], t);
              } else {
                try {
                  t.call();
                } catch (e) {
                  r = e;
                }
                e.call(t.prototype);
              }
            else {
              try {
                throw Error();
              } catch (e) {
                r = e;
              }
              e();
            }
          } catch (e) {
            if (e && r && "string" == typeof e.stack) {
              for (
                var o = e.stack.split("\n"),
                  i = r.stack.split("\n"),
                  s = o.length - 1,
                  a = i.length - 1;
                1 <= s && 0 <= a && o[s] !== i[a];

              )
                a--;
              for (; 1 <= s && 0 <= a; s--, a--)
                if (o[s] !== i[a]) {
                  if (1 !== s || 1 !== a)
                    do {
                      if ((s--, 0 > --a || o[s] !== i[a]))
                        return "\n" + o[s].replace(" at new ", " at ");
                    } while (1 <= s && 0 <= a);
                  break;
                }
            }
          } finally {
            (V = !1), (Error.prepareStackTrace = n);
          }
          return (e = e ? e.displayName || e.name : "") ? H(e) : "";
        }
        function J(e) {
          switch (e.tag) {
            case 5:
              return H(e.type);
            case 16:
              return H("Lazy");
            case 13:
              return H("Suspense");
            case 19:
              return H("SuspenseList");
            case 0:
            case 2:
            case 15:
              return j(e.type, !1);
            case 11:
              return j(e.type.render, !1);
            case 22:
              return j(e.type._render, !1);
            case 1:
              return j(e.type, !0);
            default:
              return "";
          }
        }
        function X(e) {
          if (null == e) return null;
          if ("function" == typeof e) return e.displayName || e.name || null;
          if ("string" == typeof e) return e;
          switch (e) {
            case I:
              return "Fragment";
            case A:
              return "Portal";
            case N:
              return "Profiler";
            case v:
              return "StrictMode";
            case M:
              return "Suspense";
            case L:
              return "SuspenseList";
          }
          if ("object" == typeof e)
            switch (e.$$typeof) {
              case O:
                return (e.displayName || "Context") + ".Consumer";
              case R:
                return (e._context.displayName || "Context") + ".Provider";
              case P:
                var t = e.render;
                return (
                  (t = t.displayName || t.name || ""),
                  e.displayName ||
                    ("" !== t ? "ForwardRef(" + t + ")" : "ForwardRef")
                );
              case b:
                return X(e.type);
              case D:
                return X(e._render);
              case w:
                (t = e._payload), (e = e._init);
                try {
                  return X(e(t));
                } catch (e) {}
            }
          return null;
        }
        function W(e) {
          switch (typeof e) {
            case "boolean":
            case "number":
            case "object":
            case "string":
            case "undefined":
              return e;
            default:
              return "";
          }
        }
        function q(e) {
          var t = e.type;
          return (
            (e = e.nodeName) &&
            "input" === e.toLowerCase() &&
            ("checkbox" === t || "radio" === t)
          );
        }
        function z(e) {
          e._valueTracker ||
            (e._valueTracker = (function (e) {
              var t = q(e) ? "checked" : "value",
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                r = "" + e[t];
              if (
                !e.hasOwnProperty(t) &&
                void 0 !== n &&
                "function" == typeof n.get &&
                "function" == typeof n.set
              ) {
                var o = n.get,
                  i = n.set;
                return (
                  Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                      return o.call(this);
                    },
                    set: function (e) {
                      (r = "" + e), i.call(this, e);
                    },
                  }),
                  Object.defineProperty(e, t, { enumerable: n.enumerable }),
                  {
                    getValue: function () {
                      return r;
                    },
                    setValue: function (e) {
                      r = "" + e;
                    },
                    stopTracking: function () {
                      (e._valueTracker = null), delete e[t];
                    },
                  }
                );
              }
            })(e));
        }
        function Q(e) {
          if (!e) return !1;
          var t = e._valueTracker;
          if (!t) return !0;
          var n = t.getValue(),
            r = "";
          return (
            e && (r = q(e) ? (e.checked ? "true" : "false") : e.value),
            (e = r) !== n && (t.setValue(e), !0)
          );
        }
        function $(e) {
          if (
            void 0 ===
            (e = e || ("undefined" != typeof document ? document : void 0))
          )
            return null;
          try {
            return e.activeElement || e.body;
          } catch (t) {
            return e.body;
          }
        }
        function Z(e, t) {
          var n = t.checked;
          return o({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked,
          });
        }
        function ee(e, t) {
          var n = null == t.defaultValue ? "" : t.defaultValue,
            r = null != t.checked ? t.checked : t.defaultChecked;
          (n = W(null != t.value ? t.value : n)),
            (e._wrapperState = {
              initialChecked: r,
              initialValue: n,
              controlled:
                "checkbox" === t.type || "radio" === t.type
                  ? null != t.checked
                  : null != t.value,
            });
        }
        function te(e, t) {
          null != (t = t.checked) && m(e, "checked", t, !1);
        }
        function ne(e, t) {
          te(e, t);
          var n = W(t.value),
            r = t.type;
          if (null != n)
            "number" === r
              ? ((0 === n && "" === e.value) || e.value != n) &&
                (e.value = "" + n)
              : e.value !== "" + n && (e.value = "" + n);
          else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
          t.hasOwnProperty("value")
            ? oe(e, t.type, n)
            : t.hasOwnProperty("defaultValue") &&
              oe(e, t.type, W(t.defaultValue)),
            null == t.checked &&
              null != t.defaultChecked &&
              (e.defaultChecked = !!t.defaultChecked);
        }
        function re(e, t, n) {
          if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (
              !(
                ("submit" !== r && "reset" !== r) ||
                (void 0 !== t.value && null !== t.value)
              )
            )
              return;
            (t = "" + e._wrapperState.initialValue),
              n || t === e.value || (e.value = t),
              (e.defaultValue = t);
          }
          "" !== (n = e.name) && (e.name = ""),
            (e.defaultChecked = !!e._wrapperState.initialChecked),
            "" !== n && (e.name = n);
        }
        function oe(e, t, n) {
          ("number" === t && $(e.ownerDocument) === e) ||
            (null == n
              ? (e.defaultValue = "" + e._wrapperState.initialValue)
              : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
        }
        function ie(e, t) {
          return (
            (e = o({ children: void 0 }, t)),
            (t = (function (e) {
              var t = "";
              return (
                r.Children.forEach(e, function (e) {
                  null != e && (t += e);
                }),
                t
              );
            })(t.children)) && (e.children = t),
            e
          );
        }
        function se(e, t, n, r) {
          if (((e = e.options), t)) {
            t = {};
            for (var o = 0; o < n.length; o++) t["$" + n[o]] = !0;
            for (n = 0; n < e.length; n++)
              (o = t.hasOwnProperty("$" + e[n].value)),
                e[n].selected !== o && (e[n].selected = o),
                o && r && (e[n].defaultSelected = !0);
          } else {
            for (n = "" + W(n), t = null, o = 0; o < e.length; o++) {
              if (e[o].value === n)
                return (
                  (e[o].selected = !0), void (r && (e[o].defaultSelected = !0))
                );
              null !== t || e[o].disabled || (t = e[o]);
            }
            null !== t && (t.selected = !0);
          }
        }
        function ae(e, t) {
          if (null != t.dangerouslySetInnerHTML) throw Error(s(91));
          return o({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue,
          });
        }
        function ce(e, t) {
          var n = t.value;
          if (null == n) {
            if (((n = t.children), (t = t.defaultValue), null != n)) {
              if (null != t) throw Error(s(92));
              if (Array.isArray(n)) {
                if (!(1 >= n.length)) throw Error(s(93));
                n = n[0];
              }
              t = n;
            }
            null == t && (t = ""), (n = t);
          }
          e._wrapperState = { initialValue: W(n) };
        }
        function ue(e, t) {
          var n = W(t.value),
            r = W(t.defaultValue);
          null != n &&
            ((n = "" + n) !== e.value && (e.value = n),
            null == t.defaultValue &&
              e.defaultValue !== n &&
              (e.defaultValue = n)),
            null != r && (e.defaultValue = "" + r);
        }
        function le(e) {
          var t = e.textContent;
          t === e._wrapperState.initialValue &&
            "" !== t &&
            null !== t &&
            (e.value = t);
        }
        var de = "http://www.w3.org/1999/xhtml";
        function pe(e) {
          switch (e) {
            case "svg":
              return "http://www.w3.org/2000/svg";
            case "math":
              return "http://www.w3.org/1998/Math/MathML";
            default:
              return "http://www.w3.org/1999/xhtml";
          }
        }
        function fe(e, t) {
          return null == e || "http://www.w3.org/1999/xhtml" === e
            ? pe(t)
            : "http://www.w3.org/2000/svg" === e && "foreignObject" === t
            ? "http://www.w3.org/1999/xhtml"
            : e;
        }
        var he,
          Ee,
          ge =
            ((Ee = function (e, t) {
              if (
                "http://www.w3.org/2000/svg" !== e.namespaceURI ||
                "innerHTML" in e
              )
                e.innerHTML = t;
              else {
                for (
                  (he = he || document.createElement("div")).innerHTML =
                    "<svg>" + t.valueOf().toString() + "</svg>",
                    t = he.firstChild;
                  e.firstChild;

                )
                  e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
              }
            }),
            "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (e, t, n, r) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return Ee(e, t);
                  });
                }
              : Ee);
        function Se(e, t) {
          if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
              return void (n.nodeValue = t);
          }
          e.textContent = t;
        }
        var Ce = {
            animationIterationCount: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          _e = ["Webkit", "ms", "Moz", "O"];
        function me(e, t, n) {
          return null == t || "boolean" == typeof t || "" === t
            ? ""
            : n ||
              "number" != typeof t ||
              0 === t ||
              (Ce.hasOwnProperty(e) && Ce[e])
            ? ("" + t).trim()
            : t + "px";
        }
        function Te(e, t) {
          for (var n in ((e = e.style), t))
            if (t.hasOwnProperty(n)) {
              var r = 0 === n.indexOf("--"),
                o = me(n, t[n], r);
              "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, o) : (e[n] = o);
            }
        }
        Object.keys(Ce).forEach(function (e) {
          _e.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
              (Ce[t] = Ce[e]);
          });
        });
        var ye = o(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function Ae(e, t) {
          if (t) {
            if (
              ye[e] &&
              (null != t.children || null != t.dangerouslySetInnerHTML)
            )
              throw Error(s(137, e));
            if (null != t.dangerouslySetInnerHTML) {
              if (null != t.children) throw Error(s(60));
              if (
                "object" != typeof t.dangerouslySetInnerHTML ||
                !("__html" in t.dangerouslySetInnerHTML)
              )
                throw Error(s(61));
            }
            if (null != t.style && "object" != typeof t.style)
              throw Error(s(62));
          }
        }
        function Ie(e, t) {
          if (-1 === e.indexOf("-")) return "string" == typeof t.is;
          switch (e) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return !1;
            default:
              return !0;
          }
        }
        function ve(e) {
          return (
            (e = e.target || e.srcElement || window).correspondingUseElement &&
              (e = e.correspondingUseElement),
            3 === e.nodeType ? e.parentNode : e
          );
        }
        var Ne = null,
          Re = null,
          Oe = null;
        function Pe(e) {
          if ((e = Zr(e))) {
            if ("function" != typeof Ne) throw Error(s(280));
            var t = e.stateNode;
            t && ((t = to(t)), Ne(e.stateNode, e.type, t));
          }
        }
        function Me(e) {
          Re ? (Oe ? Oe.push(e) : (Oe = [e])) : (Re = e);
        }
        function Le() {
          if (Re) {
            var e = Re,
              t = Oe;
            if (((Oe = Re = null), Pe(e), t))
              for (e = 0; e < t.length; e++) Pe(t[e]);
          }
        }
        function be(e, t) {
          return e(t);
        }
        function we(e, t, n, r, o) {
          return e(t, n, r, o);
        }
        function De() {}
        var Ue = be,
          xe = !1,
          Ye = !1;
        function Ge() {
          (null === Re && null === Oe) || (De(), Le());
        }
        function ke(e, t) {
          var n = e.stateNode;
          if (null === n) return null;
          var r = to(n);
          if (null === r) return null;
          n = r[t];
          e: switch (t) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (r = !r.disabled) ||
                (r = !(
                  "button" === (e = e.type) ||
                  "input" === e ||
                  "select" === e ||
                  "textarea" === e
                )),
                (e = !r);
              break e;
            default:
              e = !1;
          }
          if (e) return null;
          if (n && "function" != typeof n) throw Error(s(231, t, typeof n));
          return n;
        }
        var Fe = !1;
        if (d)
          try {
            var Be = {};
            Object.defineProperty(Be, "passive", {
              get: function () {
                Fe = !0;
              },
            }),
              window.addEventListener("test", Be, Be),
              window.removeEventListener("test", Be, Be);
          } catch (Ee) {
            Fe = !1;
          }
        function Ke(e, t, n, r, o, i, s, a, c) {
          var u = Array.prototype.slice.call(arguments, 3);
          try {
            t.apply(n, u);
          } catch (e) {
            this.onError(e);
          }
        }
        var He = !1,
          Ve = null,
          je = !1,
          Je = null,
          Xe = {
            onError: function (e) {
              (He = !0), (Ve = e);
            },
          };
        function We(e, t, n, r, o, i, s, a, c) {
          (He = !1), (Ve = null), Ke.apply(Xe, arguments);
        }
        function qe(e) {
          var t = e,
            n = e;
          if (e.alternate) for (; t.return; ) t = t.return;
          else {
            e = t;
            do {
              0 != (1026 & (t = e).flags) && (n = t.return), (e = t.return);
            } while (e);
          }
          return 3 === t.tag ? n : null;
        }
        function ze(e) {
          if (13 === e.tag) {
            var t = e.memoizedState;
            if (
              (null === t &&
                null !== (e = e.alternate) &&
                (t = e.memoizedState),
              null !== t)
            )
              return t.dehydrated;
          }
          return null;
        }
        function Qe(e) {
          if (qe(e) !== e) throw Error(s(188));
        }
        function $e(e) {
          if (
            !(e = (function (e) {
              var t = e.alternate;
              if (!t) {
                if (null === (t = qe(e))) throw Error(s(188));
                return t !== e ? null : e;
              }
              for (var n = e, r = t; ; ) {
                var o = n.return;
                if (null === o) break;
                var i = o.alternate;
                if (null === i) {
                  if (null !== (r = o.return)) {
                    n = r;
                    continue;
                  }
                  break;
                }
                if (o.child === i.child) {
                  for (i = o.child; i; ) {
                    if (i === n) return Qe(o), e;
                    if (i === r) return Qe(o), t;
                    i = i.sibling;
                  }
                  throw Error(s(188));
                }
                if (n.return !== r.return) (n = o), (r = i);
                else {
                  for (var a = !1, c = o.child; c; ) {
                    if (c === n) {
                      (a = !0), (n = o), (r = i);
                      break;
                    }
                    if (c === r) {
                      (a = !0), (r = o), (n = i);
                      break;
                    }
                    c = c.sibling;
                  }
                  if (!a) {
                    for (c = i.child; c; ) {
                      if (c === n) {
                        (a = !0), (n = i), (r = o);
                        break;
                      }
                      if (c === r) {
                        (a = !0), (r = i), (n = o);
                        break;
                      }
                      c = c.sibling;
                    }
                    if (!a) throw Error(s(189));
                  }
                }
                if (n.alternate !== r) throw Error(s(190));
              }
              if (3 !== n.tag) throw Error(s(188));
              return n.stateNode.current === n ? e : t;
            })(e))
          )
            return null;
          for (var t = e; ; ) {
            if (5 === t.tag || 6 === t.tag) return t;
            if (t.child) (t.child.return = t), (t = t.child);
            else {
              if (t === e) break;
              for (; !t.sibling; ) {
                if (!t.return || t.return === e) return null;
                t = t.return;
              }
              (t.sibling.return = t.return), (t = t.sibling);
            }
          }
          return null;
        }
        function Ze(e, t) {
          for (var n = e.alternate; null !== t; ) {
            if (t === e || t === n) return !0;
            t = t.return;
          }
          return !1;
        }
        var et,
          tt,
          nt,
          rt,
          ot = !1,
          it = [],
          st = null,
          at = null,
          ct = null,
          ut = new Map(),
          lt = new Map(),
          dt = [],
          pt =
            "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
              " "
            );
        function ft(e, t, n, r, o) {
          return {
            blockedOn: e,
            domEventName: t,
            eventSystemFlags: 16 | n,
            nativeEvent: o,
            targetContainers: [r],
          };
        }
        function ht(e, t) {
          switch (e) {
            case "focusin":
            case "focusout":
              st = null;
              break;
            case "dragenter":
            case "dragleave":
              at = null;
              break;
            case "mouseover":
            case "mouseout":
              ct = null;
              break;
            case "pointerover":
            case "pointerout":
              ut.delete(t.pointerId);
              break;
            case "gotpointercapture":
            case "lostpointercapture":
              lt.delete(t.pointerId);
          }
        }
        function Et(e, t, n, r, o, i) {
          return null === e || e.nativeEvent !== i
            ? ((e = ft(t, n, r, o, i)),
              null !== t && null !== (t = Zr(t)) && tt(t),
              e)
            : ((e.eventSystemFlags |= r),
              (t = e.targetContainers),
              null !== o && -1 === t.indexOf(o) && t.push(o),
              e);
        }
        function gt(e) {
          var t = $r(e.target);
          if (null !== t) {
            var n = qe(t);
            if (null !== n)
              if (13 === (t = n.tag)) {
                if (null !== (t = ze(n)))
                  return (
                    (e.blockedOn = t),
                    void rt(e.lanePriority, function () {
                      i.unstable_runWithPriority(e.priority, function () {
                        nt(n);
                      });
                    })
                  );
              } else if (3 === t && n.stateNode.hydrate)
                return void (e.blockedOn =
                  3 === n.tag ? n.stateNode.containerInfo : null);
          }
          e.blockedOn = null;
        }
        function St(e) {
          if (null !== e.blockedOn) return !1;
          for (var t = e.targetContainers; 0 < t.length; ) {
            var n = $t(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (null !== n)
              return null !== (t = Zr(n)) && tt(t), (e.blockedOn = n), !1;
            t.shift();
          }
          return !0;
        }
        function Ct(e, t, n) {
          St(e) && n.delete(t);
        }
        function _t() {
          for (ot = !1; 0 < it.length; ) {
            var e = it[0];
            if (null !== e.blockedOn) {
              null !== (e = Zr(e.blockedOn)) && et(e);
              break;
            }
            for (var t = e.targetContainers; 0 < t.length; ) {
              var n = $t(
                e.domEventName,
                e.eventSystemFlags,
                t[0],
                e.nativeEvent
              );
              if (null !== n) {
                e.blockedOn = n;
                break;
              }
              t.shift();
            }
            null === e.blockedOn && it.shift();
          }
          null !== st && St(st) && (st = null),
            null !== at && St(at) && (at = null),
            null !== ct && St(ct) && (ct = null),
            ut.forEach(Ct),
            lt.forEach(Ct);
        }
        function mt(e, t) {
          e.blockedOn === t &&
            ((e.blockedOn = null),
            ot ||
              ((ot = !0),
              i.unstable_scheduleCallback(i.unstable_NormalPriority, _t)));
        }
        function Tt(e) {
          function t(t) {
            return mt(t, e);
          }
          if (0 < it.length) {
            mt(it[0], e);
            for (var n = 1; n < it.length; n++) {
              var r = it[n];
              r.blockedOn === e && (r.blockedOn = null);
            }
          }
          for (
            null !== st && mt(st, e),
              null !== at && mt(at, e),
              null !== ct && mt(ct, e),
              ut.forEach(t),
              lt.forEach(t),
              n = 0;
            n < dt.length;
            n++
          )
            (r = dt[n]).blockedOn === e && (r.blockedOn = null);
          for (; 0 < dt.length && null === (n = dt[0]).blockedOn; )
            gt(n), null === n.blockedOn && dt.shift();
        }
        function yt(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n["Webkit" + e] = "webkit" + t),
            (n["Moz" + e] = "moz" + t),
            n
          );
        }
        var At = {
            animationend: yt("Animation", "AnimationEnd"),
            animationiteration: yt("Animation", "AnimationIteration"),
            animationstart: yt("Animation", "AnimationStart"),
            transitionend: yt("Transition", "TransitionEnd"),
          },
          It = {},
          vt = {};
        function Nt(e) {
          if (It[e]) return It[e];
          if (!At[e]) return e;
          var t,
            n = At[e];
          for (t in n)
            if (n.hasOwnProperty(t) && t in vt) return (It[e] = n[t]);
          return e;
        }
        d &&
          ((vt = document.createElement("div").style),
          "AnimationEvent" in window ||
            (delete At.animationend.animation,
            delete At.animationiteration.animation,
            delete At.animationstart.animation),
          "TransitionEvent" in window || delete At.transitionend.transition);
        var Rt = Nt("animationend"),
          Ot = Nt("animationiteration"),
          Pt = Nt("animationstart"),
          Mt = Nt("transitionend"),
          Lt = new Map(),
          bt = new Map(),
          wt = [
            "abort",
            "abort",
            Rt,
            "animationEnd",
            Ot,
            "animationIteration",
            Pt,
            "animationStart",
            "canplay",
            "canPlay",
            "canplaythrough",
            "canPlayThrough",
            "durationchange",
            "durationChange",
            "emptied",
            "emptied",
            "encrypted",
            "encrypted",
            "ended",
            "ended",
            "error",
            "error",
            "gotpointercapture",
            "gotPointerCapture",
            "load",
            "load",
            "loadeddata",
            "loadedData",
            "loadedmetadata",
            "loadedMetadata",
            "loadstart",
            "loadStart",
            "lostpointercapture",
            "lostPointerCapture",
            "playing",
            "playing",
            "progress",
            "progress",
            "seeking",
            "seeking",
            "stalled",
            "stalled",
            "suspend",
            "suspend",
            "timeupdate",
            "timeUpdate",
            Mt,
            "transitionEnd",
            "waiting",
            "waiting",
          ];
        function Dt(e, t) {
          for (var n = 0; n < e.length; n += 2) {
            var r = e[n],
              o = e[n + 1];
            (o = "on" + (o[0].toUpperCase() + o.slice(1))),
              bt.set(r, t),
              Lt.set(r, o),
              u(o, [r]);
          }
        }
        (0, i.unstable_now)();
        var Ut = 8;
        function xt(e) {
          if (0 != (1 & e)) return (Ut = 15), 1;
          if (0 != (2 & e)) return (Ut = 14), 2;
          if (0 != (4 & e)) return (Ut = 13), 4;
          var t = 24 & e;
          return 0 !== t
            ? ((Ut = 12), t)
            : 0 != (32 & e)
            ? ((Ut = 11), 32)
            : 0 != (t = 192 & e)
            ? ((Ut = 10), t)
            : 0 != (256 & e)
            ? ((Ut = 9), 256)
            : 0 != (t = 3584 & e)
            ? ((Ut = 8), t)
            : 0 != (4096 & e)
            ? ((Ut = 7), 4096)
            : 0 != (t = 4186112 & e)
            ? ((Ut = 6), t)
            : 0 != (t = 62914560 & e)
            ? ((Ut = 5), t)
            : 67108864 & e
            ? ((Ut = 4), 67108864)
            : 0 != (134217728 & e)
            ? ((Ut = 3), 134217728)
            : 0 != (t = 805306368 & e)
            ? ((Ut = 2), t)
            : 0 != (1073741824 & e)
            ? ((Ut = 1), 1073741824)
            : ((Ut = 8), e);
        }
        function Yt(e, t) {
          var n = e.pendingLanes;
          if (0 === n) return (Ut = 0);
          var r = 0,
            o = 0,
            i = e.expiredLanes,
            s = e.suspendedLanes,
            a = e.pingedLanes;
          if (0 !== i) (r = i), (o = Ut = 15);
          else if (0 != (i = 134217727 & n)) {
            var c = i & ~s;
            0 !== c
              ? ((r = xt(c)), (o = Ut))
              : 0 != (a &= i) && ((r = xt(a)), (o = Ut));
          } else
            0 != (i = n & ~s)
              ? ((r = xt(i)), (o = Ut))
              : 0 !== a && ((r = xt(a)), (o = Ut));
          if (0 === r) return 0;
          if (
            ((r = n & (((0 > (r = 31 - Ht(r)) ? 0 : 1 << r) << 1) - 1)),
            0 !== t && t !== r && 0 == (t & s))
          ) {
            if ((xt(t), o <= Ut)) return t;
            Ut = o;
          }
          if (0 !== (t = e.entangledLanes))
            for (e = e.entanglements, t &= r; 0 < t; )
              (o = 1 << (n = 31 - Ht(t))), (r |= e[n]), (t &= ~o);
          return r;
        }
        function Gt(e) {
          return 0 != (e = -1073741825 & e.pendingLanes)
            ? e
            : 1073741824 & e
            ? 1073741824
            : 0;
        }
        function kt(e, t) {
          switch (e) {
            case 15:
              return 1;
            case 14:
              return 2;
            case 12:
              return 0 === (e = Ft(24 & ~t)) ? kt(10, t) : e;
            case 10:
              return 0 === (e = Ft(192 & ~t)) ? kt(8, t) : e;
            case 8:
              return (
                0 === (e = Ft(3584 & ~t)) &&
                  0 === (e = Ft(4186112 & ~t)) &&
                  (e = 512),
                e
              );
            case 2:
              return 0 === (t = Ft(805306368 & ~t)) && (t = 268435456), t;
          }
          throw Error(s(358, e));
        }
        function Ft(e) {
          return e & -e;
        }
        function Bt(e) {
          for (var t = [], n = 0; 31 > n; n++) t.push(e);
          return t;
        }
        function Kt(e, t, n) {
          e.pendingLanes |= t;
          var r = t - 1;
          (e.suspendedLanes &= r),
            (e.pingedLanes &= r),
            ((e = e.eventTimes)[(t = 31 - Ht(t))] = n);
        }
        var Ht = Math.clz32
            ? Math.clz32
            : function (e) {
                return 0 === e ? 32 : (31 - ((Vt(e) / jt) | 0)) | 0;
              },
          Vt = Math.log,
          jt = Math.LN2,
          Jt = i.unstable_UserBlockingPriority,
          Xt = i.unstable_runWithPriority,
          Wt = !0;
        function qt(e, t, n, r) {
          xe || De();
          var o = Qt,
            i = xe;
          xe = !0;
          try {
            we(o, e, t, n, r);
          } finally {
            (xe = i) || Ge();
          }
        }
        function zt(e, t, n, r) {
          Xt(Jt, Qt.bind(null, e, t, n, r));
        }
        function Qt(e, t, n, r) {
          var o;
          if (Wt)
            if ((o = 0 == (4 & t)) && 0 < it.length && -1 < pt.indexOf(e))
              (e = ft(null, e, t, n, r)), it.push(e);
            else {
              var i = $t(e, t, n, r);
              if (null === i) o && ht(e, r);
              else {
                if (o) {
                  if (-1 < pt.indexOf(e))
                    return (e = ft(i, e, t, n, r)), void it.push(e);
                  if (
                    (function (e, t, n, r, o) {
                      switch (t) {
                        case "focusin":
                          return (st = Et(st, e, t, n, r, o)), !0;
                        case "dragenter":
                          return (at = Et(at, e, t, n, r, o)), !0;
                        case "mouseover":
                          return (ct = Et(ct, e, t, n, r, o)), !0;
                        case "pointerover":
                          var i = o.pointerId;
                          return (
                            ut.set(i, Et(ut.get(i) || null, e, t, n, r, o)), !0
                          );
                        case "gotpointercapture":
                          return (
                            (i = o.pointerId),
                            lt.set(i, Et(lt.get(i) || null, e, t, n, r, o)),
                            !0
                          );
                      }
                      return !1;
                    })(i, e, t, n, r)
                  )
                    return;
                  ht(e, r);
                }
                Lr(e, t, r, null, n);
              }
            }
        }
        function $t(e, t, n, r) {
          var o = ve(r);
          if (null !== (o = $r(o))) {
            var i = qe(o);
            if (null === i) o = null;
            else {
              var s = i.tag;
              if (13 === s) {
                if (null !== (o = ze(i))) return o;
                o = null;
              } else if (3 === s) {
                if (i.stateNode.hydrate)
                  return 3 === i.tag ? i.stateNode.containerInfo : null;
                o = null;
              } else i !== o && (o = null);
            }
          }
          return Lr(e, t, r, o, n), null;
        }
        var Zt = null,
          en = null,
          tn = null;
        function nn() {
          if (tn) return tn;
          var e,
            t,
            n = en,
            r = n.length,
            o = "value" in Zt ? Zt.value : Zt.textContent,
            i = o.length;
          for (e = 0; e < r && n[e] === o[e]; e++);
          var s = r - e;
          for (t = 1; t <= s && n[r - t] === o[i - t]; t++);
          return (tn = o.slice(e, 1 < t ? 1 - t : void 0));
        }
        function rn(e) {
          var t = e.keyCode;
          return (
            "charCode" in e
              ? 0 === (e = e.charCode) && 13 === t && (e = 13)
              : (e = t),
            10 === e && (e = 13),
            32 <= e || 13 === e ? e : 0
          );
        }
        function on() {
          return !0;
        }
        function sn() {
          return !1;
        }
        function an(e) {
          function t(t, n, r, o, i) {
            for (var s in ((this._reactName = t),
            (this._targetInst = r),
            (this.type = n),
            (this.nativeEvent = o),
            (this.target = i),
            (this.currentTarget = null),
            e))
              e.hasOwnProperty(s) && ((t = e[s]), (this[s] = t ? t(o) : o[s]));
            return (
              (this.isDefaultPrevented = (
                null != o.defaultPrevented
                  ? o.defaultPrevented
                  : !1 === o.returnValue
              )
                ? on
                : sn),
              (this.isPropagationStopped = sn),
              this
            );
          }
          return (
            o(t.prototype, {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : "unknown" != typeof e.returnValue && (e.returnValue = !1),
                  (this.isDefaultPrevented = on));
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                  (e.stopPropagation
                    ? e.stopPropagation()
                    : "unknown" != typeof e.cancelBubble &&
                      (e.cancelBubble = !0),
                  (this.isPropagationStopped = on));
              },
              persist: function () {},
              isPersistent: on,
            }),
            t
          );
        }
        var cn,
          un,
          ln,
          dn = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
              return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
          },
          pn = an(dn),
          fn = o({}, dn, { view: 0, detail: 0 }),
          hn = an(fn),
          En = o({}, fn, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: Nn,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
              return void 0 === e.relatedTarget
                ? e.fromElement === e.srcElement
                  ? e.toElement
                  : e.fromElement
                : e.relatedTarget;
            },
            movementX: function (e) {
              return "movementX" in e
                ? e.movementX
                : (e !== ln &&
                    (ln && "mousemove" === e.type
                      ? ((cn = e.screenX - ln.screenX),
                        (un = e.screenY - ln.screenY))
                      : (un = cn = 0),
                    (ln = e)),
                  cn);
            },
            movementY: function (e) {
              return "movementY" in e ? e.movementY : un;
            },
          }),
          gn = an(En),
          Sn = an(o({}, En, { dataTransfer: 0 })),
          Cn = an(o({}, fn, { relatedTarget: 0 })),
          _n = an(
            o({}, dn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          mn = an(
            o({}, dn, {
              clipboardData: function (e) {
                return "clipboardData" in e
                  ? e.clipboardData
                  : window.clipboardData;
              },
            })
          ),
          Tn = an(o({}, dn, { data: 0 })),
          yn = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          An = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          In = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
          };
        function vn(e) {
          var t = this.nativeEvent;
          return t.getModifierState
            ? t.getModifierState(e)
            : !!(e = In[e]) && !!t[e];
        }
        function Nn() {
          return vn;
        }
        var Rn = an(
            o({}, fn, {
              key: function (e) {
                if (e.key) {
                  var t = yn[e.key] || e.key;
                  if ("Unidentified" !== t) return t;
                }
                return "keypress" === e.type
                  ? 13 === (e = rn(e))
                    ? "Enter"
                    : String.fromCharCode(e)
                  : "keydown" === e.type || "keyup" === e.type
                  ? An[e.keyCode] || "Unidentified"
                  : "";
              },
              code: 0,
              location: 0,
              ctrlKey: 0,
              shiftKey: 0,
              altKey: 0,
              metaKey: 0,
              repeat: 0,
              locale: 0,
              getModifierState: Nn,
              charCode: function (e) {
                return "keypress" === e.type ? rn(e) : 0;
              },
              keyCode: function (e) {
                return "keydown" === e.type || "keyup" === e.type
                  ? e.keyCode
                  : 0;
              },
              which: function (e) {
                return "keypress" === e.type
                  ? rn(e)
                  : "keydown" === e.type || "keyup" === e.type
                  ? e.keyCode
                  : 0;
              },
            })
          ),
          On = an(
            o({}, En, {
              pointerId: 0,
              width: 0,
              height: 0,
              pressure: 0,
              tangentialPressure: 0,
              tiltX: 0,
              tiltY: 0,
              twist: 0,
              pointerType: 0,
              isPrimary: 0,
            })
          ),
          Pn = an(
            o({}, fn, {
              touches: 0,
              targetTouches: 0,
              changedTouches: 0,
              altKey: 0,
              metaKey: 0,
              ctrlKey: 0,
              shiftKey: 0,
              getModifierState: Nn,
            })
          ),
          Mn = an(
            o({}, dn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          Ln = an(
            o({}, En, {
              deltaX: function (e) {
                return "deltaX" in e
                  ? e.deltaX
                  : "wheelDeltaX" in e
                  ? -e.wheelDeltaX
                  : 0;
              },
              deltaY: function (e) {
                return "deltaY" in e
                  ? e.deltaY
                  : "wheelDeltaY" in e
                  ? -e.wheelDeltaY
                  : "wheelDelta" in e
                  ? -e.wheelDelta
                  : 0;
              },
              deltaZ: 0,
              deltaMode: 0,
            })
          ),
          bn = [9, 13, 27, 32],
          wn = d && "CompositionEvent" in window,
          Dn = null;
        d && "documentMode" in document && (Dn = document.documentMode);
        var Un = d && "TextEvent" in window && !Dn,
          xn = d && (!wn || (Dn && 8 < Dn && 11 >= Dn)),
          Yn = String.fromCharCode(32),
          Gn = !1;
        function kn(e, t) {
          switch (e) {
            case "keyup":
              return -1 !== bn.indexOf(t.keyCode);
            case "keydown":
              return 229 !== t.keyCode;
            case "keypress":
            case "mousedown":
            case "focusout":
              return !0;
            default:
              return !1;
          }
        }
        function Fn(e) {
          return "object" == typeof (e = e.detail) && "data" in e
            ? e.data
            : null;
        }
        var Bn = !1,
          Kn = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
          };
        function Hn(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return "input" === t ? !!Kn[e.type] : "textarea" === t;
        }
        function Vn(e, t, n, r) {
          Me(r),
            0 < (t = wr(t, "onChange")).length &&
              ((n = new pn("onChange", "change", null, n, r)),
              e.push({ event: n, listeners: t }));
        }
        var jn = null,
          Jn = null;
        function Xn(e) {
          vr(e, 0);
        }
        function Wn(e) {
          if (Q(eo(e))) return e;
        }
        function qn(e, t) {
          if ("change" === e) return t;
        }
        var zn = !1;
        if (d) {
          var Qn;
          if (d) {
            var $n = "oninput" in document;
            if (!$n) {
              var Zn = document.createElement("div");
              Zn.setAttribute("oninput", "return;"),
                ($n = "function" == typeof Zn.oninput);
            }
            Qn = $n;
          } else Qn = !1;
          zn = Qn && (!document.documentMode || 9 < document.documentMode);
        }
        function er() {
          jn && (jn.detachEvent("onpropertychange", tr), (Jn = jn = null));
        }
        function tr(e) {
          if ("value" === e.propertyName && Wn(Jn)) {
            var t = [];
            if ((Vn(t, Jn, e, ve(e)), (e = Xn), xe)) e(t);
            else {
              xe = !0;
              try {
                be(e, t);
              } finally {
                (xe = !1), Ge();
              }
            }
          }
        }
        function nr(e, t, n) {
          "focusin" === e
            ? (er(), (Jn = n), (jn = t).attachEvent("onpropertychange", tr))
            : "focusout" === e && er();
        }
        function rr(e) {
          if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return Wn(Jn);
        }
        function or(e, t) {
          if ("click" === e) return Wn(t);
        }
        function ir(e, t) {
          if ("input" === e || "change" === e) return Wn(t);
        }
        var sr =
            "function" == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                },
          ar = Object.prototype.hasOwnProperty;
        function cr(e, t) {
          if (sr(e, t)) return !0;
          if (
            "object" != typeof e ||
            null === e ||
            "object" != typeof t ||
            null === t
          )
            return !1;
          var n = Object.keys(e),
            r = Object.keys(t);
          if (n.length !== r.length) return !1;
          for (r = 0; r < n.length; r++)
            if (!ar.call(t, n[r]) || !sr(e[n[r]], t[n[r]])) return !1;
          return !0;
        }
        function ur(e) {
          for (; e && e.firstChild; ) e = e.firstChild;
          return e;
        }
        function lr(e, t) {
          var n,
            r = ur(e);
          for (e = 0; r; ) {
            if (3 === r.nodeType) {
              if (((n = e + r.textContent.length), e <= t && n >= t))
                return { node: r, offset: t - e };
              e = n;
            }
            e: {
              for (; r; ) {
                if (r.nextSibling) {
                  r = r.nextSibling;
                  break e;
                }
                r = r.parentNode;
              }
              r = void 0;
            }
            r = ur(r);
          }
        }
        function dr(e, t) {
          return (
            !(!e || !t) &&
            (e === t ||
              ((!e || 3 !== e.nodeType) &&
                (t && 3 === t.nodeType
                  ? dr(e, t.parentNode)
                  : "contains" in e
                  ? e.contains(t)
                  : !!e.compareDocumentPosition &&
                    !!(16 & e.compareDocumentPosition(t)))))
          );
        }
        function pr() {
          for (var e = window, t = $(); t instanceof e.HTMLIFrameElement; ) {
            try {
              var n = "string" == typeof t.contentWindow.location.href;
            } catch (e) {
              n = !1;
            }
            if (!n) break;
            t = $((e = t.contentWindow).document);
          }
          return t;
        }
        function fr(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (("input" === t &&
              ("text" === e.type ||
                "search" === e.type ||
                "tel" === e.type ||
                "url" === e.type ||
                "password" === e.type)) ||
              "textarea" === t ||
              "true" === e.contentEditable)
          );
        }
        var hr = d && "documentMode" in document && 11 >= document.documentMode,
          Er = null,
          gr = null,
          Sr = null,
          Cr = !1;
        function _r(e, t, n) {
          var r =
            n.window === n
              ? n.document
              : 9 === n.nodeType
              ? n
              : n.ownerDocument;
          Cr ||
            null == Er ||
            Er !== $(r) ||
            ((r =
              "selectionStart" in (r = Er) && fr(r)
                ? { start: r.selectionStart, end: r.selectionEnd }
                : {
                    anchorNode: (r = (
                      (r.ownerDocument && r.ownerDocument.defaultView) ||
                      window
                    ).getSelection()).anchorNode,
                    anchorOffset: r.anchorOffset,
                    focusNode: r.focusNode,
                    focusOffset: r.focusOffset,
                  }),
            (Sr && cr(Sr, r)) ||
              ((Sr = r),
              0 < (r = wr(gr, "onSelect")).length &&
                ((t = new pn("onSelect", "select", null, t, n)),
                e.push({ event: t, listeners: r }),
                (t.target = Er))));
        }
        Dt(
          "cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(
            " "
          ),
          0
        ),
          Dt(
            "drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(
              " "
            ),
            1
          ),
          Dt(wt, 2);
        for (
          var mr =
              "change selectionchange textInput compositionstart compositionend compositionupdate".split(
                " "
              ),
            Tr = 0;
          Tr < mr.length;
          Tr++
        )
          bt.set(mr[Tr], 0);
        l("onMouseEnter", ["mouseout", "mouseover"]),
          l("onMouseLeave", ["mouseout", "mouseover"]),
          l("onPointerEnter", ["pointerout", "pointerover"]),
          l("onPointerLeave", ["pointerout", "pointerover"]),
          u(
            "onChange",
            "change click focusin focusout input keydown keyup selectionchange".split(
              " "
            )
          ),
          u(
            "onSelect",
            "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
              " "
            )
          ),
          u("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste",
          ]),
          u(
            "onCompositionEnd",
            "compositionend focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          u(
            "onCompositionStart",
            "compositionstart focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          u(
            "onCompositionUpdate",
            "compositionupdate focusout keydown keypress keyup mousedown".split(
              " "
            )
          );
        var yr =
            "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(
              " "
            ),
          Ar = new Set(
            "cancel close invalid load scroll toggle".split(" ").concat(yr)
          );
        function Ir(e, t, n) {
          var r = e.type || "unknown-event";
          (e.currentTarget = n),
            (function (e, t, n, r, o, i, a, c, u) {
              if ((We.apply(this, arguments), He)) {
                if (!He) throw Error(s(198));
                var l = Ve;
                (He = !1), (Ve = null), je || ((je = !0), (Je = l));
              }
            })(r, t, void 0, e),
            (e.currentTarget = null);
        }
        function vr(e, t) {
          t = 0 != (4 & t);
          for (var n = 0; n < e.length; n++) {
            var r = e[n],
              o = r.event;
            r = r.listeners;
            e: {
              var i = void 0;
              if (t)
                for (var s = r.length - 1; 0 <= s; s--) {
                  var a = r[s],
                    c = a.instance,
                    u = a.currentTarget;
                  if (((a = a.listener), c !== i && o.isPropagationStopped()))
                    break e;
                  Ir(o, a, u), (i = c);
                }
              else
                for (s = 0; s < r.length; s++) {
                  if (
                    ((c = (a = r[s]).instance),
                    (u = a.currentTarget),
                    (a = a.listener),
                    c !== i && o.isPropagationStopped())
                  )
                    break e;
                  Ir(o, a, u), (i = c);
                }
            }
          }
          if (je) throw ((e = Je), (je = !1), (Je = null), e);
        }
        function Nr(e, t) {
          var n = no(t),
            r = e + "__bubble";
          n.has(r) || (Mr(t, e, 2, !1), n.add(r));
        }
        var Rr = "_reactListening" + Math.random().toString(36).slice(2);
        function Or(e) {
          e[Rr] ||
            ((e[Rr] = !0),
            a.forEach(function (t) {
              Ar.has(t) || Pr(t, !1, e, null), Pr(t, !0, e, null);
            }));
        }
        function Pr(e, t, n, r) {
          var o =
              4 < arguments.length && void 0 !== arguments[4]
                ? arguments[4]
                : 0,
            i = n;
          if (
            ("selectionchange" === e &&
              9 !== n.nodeType &&
              (i = n.ownerDocument),
            null !== r && !t && Ar.has(e))
          ) {
            if ("scroll" !== e) return;
            (o |= 2), (i = r);
          }
          var s = no(i),
            a = e + "__" + (t ? "capture" : "bubble");
          s.has(a) || (t && (o |= 4), Mr(i, e, o, t), s.add(a));
        }
        function Mr(e, t, n, r) {
          var o = bt.get(t);
          switch (void 0 === o ? 2 : o) {
            case 0:
              o = qt;
              break;
            case 1:
              o = zt;
              break;
            default:
              o = Qt;
          }
          (n = o.bind(null, t, n, e)),
            (o = void 0),
            !Fe ||
              ("touchstart" !== t && "touchmove" !== t && "wheel" !== t) ||
              (o = !0),
            r
              ? void 0 !== o
                ? e.addEventListener(t, n, { capture: !0, passive: o })
                : e.addEventListener(t, n, !0)
              : void 0 !== o
              ? e.addEventListener(t, n, { passive: o })
              : e.addEventListener(t, n, !1);
        }
        function Lr(e, t, n, r, o) {
          var i = r;
          if (0 == (1 & t) && 0 == (2 & t) && null !== r)
            e: for (;;) {
              if (null === r) return;
              var s = r.tag;
              if (3 === s || 4 === s) {
                var a = r.stateNode.containerInfo;
                if (a === o || (8 === a.nodeType && a.parentNode === o)) break;
                if (4 === s)
                  for (s = r.return; null !== s; ) {
                    var c = s.tag;
                    if (
                      (3 === c || 4 === c) &&
                      ((c = s.stateNode.containerInfo) === o ||
                        (8 === c.nodeType && c.parentNode === o))
                    )
                      return;
                    s = s.return;
                  }
                for (; null !== a; ) {
                  if (null === (s = $r(a))) return;
                  if (5 === (c = s.tag) || 6 === c) {
                    r = i = s;
                    continue e;
                  }
                  a = a.parentNode;
                }
              }
              r = r.return;
            }
          !(function (e, t, n) {
            if (Ye) return e();
            Ye = !0;
            try {
              Ue(e, t, n);
            } finally {
              (Ye = !1), Ge();
            }
          })(function () {
            var r = i,
              o = ve(n),
              s = [];
            e: {
              var a = Lt.get(e);
              if (void 0 !== a) {
                var c = pn,
                  u = e;
                switch (e) {
                  case "keypress":
                    if (0 === rn(n)) break e;
                  case "keydown":
                  case "keyup":
                    c = Rn;
                    break;
                  case "focusin":
                    (u = "focus"), (c = Cn);
                    break;
                  case "focusout":
                    (u = "blur"), (c = Cn);
                    break;
                  case "beforeblur":
                  case "afterblur":
                    c = Cn;
                    break;
                  case "click":
                    if (2 === n.button) break e;
                  case "auxclick":
                  case "dblclick":
                  case "mousedown":
                  case "mousemove":
                  case "mouseup":
                  case "mouseout":
                  case "mouseover":
                  case "contextmenu":
                    c = gn;
                    break;
                  case "drag":
                  case "dragend":
                  case "dragenter":
                  case "dragexit":
                  case "dragleave":
                  case "dragover":
                  case "dragstart":
                  case "drop":
                    c = Sn;
                    break;
                  case "touchcancel":
                  case "touchend":
                  case "touchmove":
                  case "touchstart":
                    c = Pn;
                    break;
                  case Rt:
                  case Ot:
                  case Pt:
                    c = _n;
                    break;
                  case Mt:
                    c = Mn;
                    break;
                  case "scroll":
                    c = hn;
                    break;
                  case "wheel":
                    c = Ln;
                    break;
                  case "copy":
                  case "cut":
                  case "paste":
                    c = mn;
                    break;
                  case "gotpointercapture":
                  case "lostpointercapture":
                  case "pointercancel":
                  case "pointerdown":
                  case "pointermove":
                  case "pointerout":
                  case "pointerover":
                  case "pointerup":
                    c = On;
                }
                var l = 0 != (4 & t),
                  d = !l && "scroll" === e,
                  p = l ? (null !== a ? a + "Capture" : null) : a;
                l = [];
                for (var f, h = r; null !== h; ) {
                  var E = (f = h).stateNode;
                  if (
                    (5 === f.tag &&
                      null !== E &&
                      ((f = E),
                      null !== p &&
                        null != (E = ke(h, p)) &&
                        l.push(br(h, E, f))),
                    d)
                  )
                    break;
                  h = h.return;
                }
                0 < l.length &&
                  ((a = new c(a, u, null, n, o)),
                  s.push({ event: a, listeners: l }));
              }
            }
            if (0 == (7 & t)) {
              if (
                ((c = "mouseout" === e || "pointerout" === e),
                (!(a = "mouseover" === e || "pointerover" === e) ||
                  0 != (16 & t) ||
                  !(u = n.relatedTarget || n.fromElement) ||
                  (!$r(u) && !u[zr])) &&
                  (c || a) &&
                  ((a =
                    o.window === o
                      ? o
                      : (a = o.ownerDocument)
                      ? a.defaultView || a.parentWindow
                      : window),
                  c
                    ? ((c = r),
                      null !==
                        (u = (u = n.relatedTarget || n.toElement)
                          ? $r(u)
                          : null) &&
                        (u !== (d = qe(u)) || (5 !== u.tag && 6 !== u.tag)) &&
                        (u = null))
                    : ((c = null), (u = r)),
                  c !== u))
              ) {
                if (
                  ((l = gn),
                  (E = "onMouseLeave"),
                  (p = "onMouseEnter"),
                  (h = "mouse"),
                  ("pointerout" !== e && "pointerover" !== e) ||
                    ((l = On),
                    (E = "onPointerLeave"),
                    (p = "onPointerEnter"),
                    (h = "pointer")),
                  (d = null == c ? a : eo(c)),
                  (f = null == u ? a : eo(u)),
                  ((a = new l(E, h + "leave", c, n, o)).target = d),
                  (a.relatedTarget = f),
                  (E = null),
                  $r(o) === r &&
                    (((l = new l(p, h + "enter", u, n, o)).target = f),
                    (l.relatedTarget = d),
                    (E = l)),
                  (d = E),
                  c && u)
                )
                  e: {
                    for (p = u, h = 0, f = l = c; f; f = Dr(f)) h++;
                    for (f = 0, E = p; E; E = Dr(E)) f++;
                    for (; 0 < h - f; ) (l = Dr(l)), h--;
                    for (; 0 < f - h; ) (p = Dr(p)), f--;
                    for (; h--; ) {
                      if (l === p || (null !== p && l === p.alternate)) break e;
                      (l = Dr(l)), (p = Dr(p));
                    }
                    l = null;
                  }
                else l = null;
                null !== c && Ur(s, a, c, l, !1),
                  null !== u && null !== d && Ur(s, d, u, l, !0);
              }
              if (
                "select" ===
                  (c =
                    (a = r ? eo(r) : window).nodeName &&
                    a.nodeName.toLowerCase()) ||
                ("input" === c && "file" === a.type)
              )
                var g = qn;
              else if (Hn(a))
                if (zn) g = ir;
                else {
                  g = rr;
                  var S = nr;
                }
              else
                (c = a.nodeName) &&
                  "input" === c.toLowerCase() &&
                  ("checkbox" === a.type || "radio" === a.type) &&
                  (g = or);
              switch (
                (g && (g = g(e, r))
                  ? Vn(s, g, n, o)
                  : (S && S(e, a, r),
                    "focusout" === e &&
                      (S = a._wrapperState) &&
                      S.controlled &&
                      "number" === a.type &&
                      oe(a, "number", a.value)),
                (S = r ? eo(r) : window),
                e)
              ) {
                case "focusin":
                  (Hn(S) || "true" === S.contentEditable) &&
                    ((Er = S), (gr = r), (Sr = null));
                  break;
                case "focusout":
                  Sr = gr = Er = null;
                  break;
                case "mousedown":
                  Cr = !0;
                  break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                  (Cr = !1), _r(s, n, o);
                  break;
                case "selectionchange":
                  if (hr) break;
                case "keydown":
                case "keyup":
                  _r(s, n, o);
              }
              var C;
              if (wn)
                e: {
                  switch (e) {
                    case "compositionstart":
                      var _ = "onCompositionStart";
                      break e;
                    case "compositionend":
                      _ = "onCompositionEnd";
                      break e;
                    case "compositionupdate":
                      _ = "onCompositionUpdate";
                      break e;
                  }
                  _ = void 0;
                }
              else
                Bn
                  ? kn(e, n) && (_ = "onCompositionEnd")
                  : "keydown" === e &&
                    229 === n.keyCode &&
                    (_ = "onCompositionStart");
              _ &&
                (xn &&
                  "ko" !== n.locale &&
                  (Bn || "onCompositionStart" !== _
                    ? "onCompositionEnd" === _ && Bn && (C = nn())
                    : ((en = "value" in (Zt = o) ? Zt.value : Zt.textContent),
                      (Bn = !0))),
                0 < (S = wr(r, _)).length &&
                  ((_ = new Tn(_, e, null, n, o)),
                  s.push({ event: _, listeners: S }),
                  (C || null !== (C = Fn(n))) && (_.data = C))),
                (C = Un
                  ? (function (e, t) {
                      switch (e) {
                        case "compositionend":
                          return Fn(t);
                        case "keypress":
                          return 32 !== t.which ? null : ((Gn = !0), Yn);
                        case "textInput":
                          return (e = t.data) === Yn && Gn ? null : e;
                        default:
                          return null;
                      }
                    })(e, n)
                  : (function (e, t) {
                      if (Bn)
                        return "compositionend" === e || (!wn && kn(e, t))
                          ? ((e = nn()), (tn = en = Zt = null), (Bn = !1), e)
                          : null;
                      switch (e) {
                        case "paste":
                          return null;
                        case "keypress":
                          if (
                            !(t.ctrlKey || t.altKey || t.metaKey) ||
                            (t.ctrlKey && t.altKey)
                          ) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which);
                          }
                          return null;
                        case "compositionend":
                          return xn && "ko" !== t.locale ? null : t.data;
                        default:
                          return null;
                      }
                    })(e, n)) &&
                  0 < (r = wr(r, "onBeforeInput")).length &&
                  ((o = new Tn("onBeforeInput", "beforeinput", null, n, o)),
                  s.push({ event: o, listeners: r }),
                  (o.data = C));
            }
            vr(s, t);
          });
        }
        function br(e, t, n) {
          return { instance: e, listener: t, currentTarget: n };
        }
        function wr(e, t) {
          for (var n = t + "Capture", r = []; null !== e; ) {
            var o = e,
              i = o.stateNode;
            5 === o.tag &&
              null !== i &&
              ((o = i),
              null != (i = ke(e, n)) && r.unshift(br(e, i, o)),
              null != (i = ke(e, t)) && r.push(br(e, i, o))),
              (e = e.return);
          }
          return r;
        }
        function Dr(e) {
          if (null === e) return null;
          do {
            e = e.return;
          } while (e && 5 !== e.tag);
          return e || null;
        }
        function Ur(e, t, n, r, o) {
          for (var i = t._reactName, s = []; null !== n && n !== r; ) {
            var a = n,
              c = a.alternate,
              u = a.stateNode;
            if (null !== c && c === r) break;
            5 === a.tag &&
              null !== u &&
              ((a = u),
              o
                ? null != (c = ke(n, i)) && s.unshift(br(n, c, a))
                : o || (null != (c = ke(n, i)) && s.push(br(n, c, a)))),
              (n = n.return);
          }
          0 !== s.length && e.push({ event: t, listeners: s });
        }
        function xr() {}
        var Yr = null,
          Gr = null;
        function kr(e, t) {
          switch (e) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!t.autoFocus;
          }
          return !1;
        }
        function Fr(e, t) {
          return (
            "textarea" === e ||
            "option" === e ||
            "noscript" === e ||
            "string" == typeof t.children ||
            "number" == typeof t.children ||
            ("object" == typeof t.dangerouslySetInnerHTML &&
              null !== t.dangerouslySetInnerHTML &&
              null != t.dangerouslySetInnerHTML.__html)
          );
        }
        var Br = "function" == typeof setTimeout ? setTimeout : void 0,
          Kr = "function" == typeof clearTimeout ? clearTimeout : void 0;
        function Hr(e) {
          (1 === e.nodeType || (9 === e.nodeType && null != (e = e.body))) &&
            (e.textContent = "");
        }
        function Vr(e) {
          for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t) break;
          }
          return e;
        }
        function jr(e) {
          e = e.previousSibling;
          for (var t = 0; e; ) {
            if (8 === e.nodeType) {
              var n = e.data;
              if ("$" === n || "$!" === n || "$?" === n) {
                if (0 === t) return e;
                t--;
              } else "/$" === n && t++;
            }
            e = e.previousSibling;
          }
          return null;
        }
        var Jr = 0,
          Xr = Math.random().toString(36).slice(2),
          Wr = "__reactFiber$" + Xr,
          qr = "__reactProps$" + Xr,
          zr = "__reactContainer$" + Xr,
          Qr = "__reactEvents$" + Xr;
        function $r(e) {
          var t = e[Wr];
          if (t) return t;
          for (var n = e.parentNode; n; ) {
            if ((t = n[zr] || n[Wr])) {
              if (
                ((n = t.alternate),
                null !== t.child || (null !== n && null !== n.child))
              )
                for (e = jr(e); null !== e; ) {
                  if ((n = e[Wr])) return n;
                  e = jr(e);
                }
              return t;
            }
            n = (e = n).parentNode;
          }
          return null;
        }
        function Zr(e) {
          return !(e = e[Wr] || e[zr]) ||
            (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag)
            ? null
            : e;
        }
        function eo(e) {
          if (5 === e.tag || 6 === e.tag) return e.stateNode;
          throw Error(s(33));
        }
        function to(e) {
          return e[qr] || null;
        }
        function no(e) {
          var t = e[Qr];
          return void 0 === t && (t = e[Qr] = new Set()), t;
        }
        var ro = [],
          oo = -1;
        function io(e) {
          return { current: e };
        }
        function so(e) {
          0 > oo || ((e.current = ro[oo]), (ro[oo] = null), oo--);
        }
        function ao(e, t) {
          oo++, (ro[oo] = e.current), (e.current = t);
        }
        var co = {},
          uo = io(co),
          lo = io(!1),
          po = co;
        function fo(e, t) {
          var n = e.type.contextTypes;
          if (!n) return co;
          var r = e.stateNode;
          if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
          var o,
            i = {};
          for (o in n) i[o] = t[o];
          return (
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                t),
              (e.__reactInternalMemoizedMaskedChildContext = i)),
            i
          );
        }
        function ho(e) {
          return null != e.childContextTypes;
        }
        function Eo() {
          so(lo), so(uo);
        }
        function go(e, t, n) {
          if (uo.current !== co) throw Error(s(168));
          ao(uo, t), ao(lo, n);
        }
        function So(e, t, n) {
          var r = e.stateNode;
          if (
            ((e = t.childContextTypes), "function" != typeof r.getChildContext)
          )
            return n;
          for (var i in (r = r.getChildContext()))
            if (!(i in e)) throw Error(s(108, X(t) || "Unknown", i));
          return o({}, n, r);
        }
        function Co(e) {
          return (
            (e =
              ((e = e.stateNode) &&
                e.__reactInternalMemoizedMergedChildContext) ||
              co),
            (po = uo.current),
            ao(uo, e),
            ao(lo, lo.current),
            !0
          );
        }
        function _o(e, t, n) {
          var r = e.stateNode;
          if (!r) throw Error(s(169));
          n
            ? ((e = So(e, t, po)),
              (r.__reactInternalMemoizedMergedChildContext = e),
              so(lo),
              so(uo),
              ao(uo, e))
            : so(lo),
            ao(lo, n);
        }
        var mo = null,
          To = null,
          yo = i.unstable_runWithPriority,
          Ao = i.unstable_scheduleCallback,
          Io = i.unstable_cancelCallback,
          vo = i.unstable_shouldYield,
          No = i.unstable_requestPaint,
          Ro = i.unstable_now,
          Oo = i.unstable_getCurrentPriorityLevel,
          Po = i.unstable_ImmediatePriority,
          Mo = i.unstable_UserBlockingPriority,
          Lo = i.unstable_NormalPriority,
          bo = i.unstable_LowPriority,
          wo = i.unstable_IdlePriority,
          Do = {},
          Uo = void 0 !== No ? No : function () {},
          xo = null,
          Yo = null,
          Go = !1,
          ko = Ro(),
          Fo =
            1e4 > ko
              ? Ro
              : function () {
                  return Ro() - ko;
                };
        function Bo() {
          switch (Oo()) {
            case Po:
              return 99;
            case Mo:
              return 98;
            case Lo:
              return 97;
            case bo:
              return 96;
            case wo:
              return 95;
            default:
              throw Error(s(332));
          }
        }
        function Ko(e) {
          switch (e) {
            case 99:
              return Po;
            case 98:
              return Mo;
            case 97:
              return Lo;
            case 96:
              return bo;
            case 95:
              return wo;
            default:
              throw Error(s(332));
          }
        }
        function Ho(e, t) {
          return (e = Ko(e)), yo(e, t);
        }
        function Vo(e, t, n) {
          return (e = Ko(e)), Ao(e, t, n);
        }
        function jo() {
          if (null !== Yo) {
            var e = Yo;
            (Yo = null), Io(e);
          }
          Jo();
        }
        function Jo() {
          if (!Go && null !== xo) {
            Go = !0;
            var e = 0;
            try {
              var t = xo;
              Ho(99, function () {
                for (; e < t.length; e++) {
                  var n = t[e];
                  do {
                    n = n(!0);
                  } while (null !== n);
                }
              }),
                (xo = null);
            } catch (t) {
              throw (null !== xo && (xo = xo.slice(e + 1)), Ao(Po, jo), t);
            } finally {
              Go = !1;
            }
          }
        }
        var Xo = T.ReactCurrentBatchConfig;
        function Wo(e, t) {
          if (e && e.defaultProps) {
            for (var n in ((t = o({}, t)), (e = e.defaultProps)))
              void 0 === t[n] && (t[n] = e[n]);
            return t;
          }
          return t;
        }
        var qo = io(null),
          zo = null,
          Qo = null,
          $o = null;
        function Zo() {
          $o = Qo = zo = null;
        }
        function ei(e) {
          var t = qo.current;
          so(qo), (e.type._context._currentValue = t);
        }
        function ti(e, t) {
          for (; null !== e; ) {
            var n = e.alternate;
            if ((e.childLanes & t) === t) {
              if (null === n || (n.childLanes & t) === t) break;
              n.childLanes |= t;
            } else (e.childLanes |= t), null !== n && (n.childLanes |= t);
            e = e.return;
          }
        }
        function ni(e, t) {
          (zo = e),
            ($o = Qo = null),
            null !== (e = e.dependencies) &&
              null !== e.firstContext &&
              (0 != (e.lanes & t) && (ws = !0), (e.firstContext = null));
        }
        function ri(e, t) {
          if ($o !== e && !1 !== t && 0 !== t)
            if (
              (("number" == typeof t && 1073741823 !== t) ||
                (($o = e), (t = 1073741823)),
              (t = { context: e, observedBits: t, next: null }),
              null === Qo)
            ) {
              if (null === zo) throw Error(s(308));
              (Qo = t),
                (zo.dependencies = {
                  lanes: 0,
                  firstContext: t,
                  responders: null,
                });
            } else Qo = Qo.next = t;
          return e._currentValue;
        }
        var oi = !1;
        function ii(e) {
          e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null },
            effects: null,
          };
        }
        function si(e, t) {
          (e = e.updateQueue),
            t.updateQueue === e &&
              (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
              });
        }
        function ai(e, t) {
          return {
            eventTime: e,
            lane: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
          };
        }
        function ci(e, t) {
          if (null !== (e = e.updateQueue)) {
            var n = (e = e.shared).pending;
            null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
              (e.pending = t);
          }
        }
        function ui(e, t) {
          var n = e.updateQueue,
            r = e.alternate;
          if (null !== r && n === (r = r.updateQueue)) {
            var o = null,
              i = null;
            if (null !== (n = n.firstBaseUpdate)) {
              do {
                var s = {
                  eventTime: n.eventTime,
                  lane: n.lane,
                  tag: n.tag,
                  payload: n.payload,
                  callback: n.callback,
                  next: null,
                };
                null === i ? (o = i = s) : (i = i.next = s), (n = n.next);
              } while (null !== n);
              null === i ? (o = i = t) : (i = i.next = t);
            } else o = i = t;
            return (
              (n = {
                baseState: r.baseState,
                firstBaseUpdate: o,
                lastBaseUpdate: i,
                shared: r.shared,
                effects: r.effects,
              }),
              void (e.updateQueue = n)
            );
          }
          null === (e = n.lastBaseUpdate)
            ? (n.firstBaseUpdate = t)
            : (e.next = t),
            (n.lastBaseUpdate = t);
        }
        function li(e, t, n, r) {
          var i = e.updateQueue;
          oi = !1;
          var s = i.firstBaseUpdate,
            a = i.lastBaseUpdate,
            c = i.shared.pending;
          if (null !== c) {
            i.shared.pending = null;
            var u = c,
              l = u.next;
            (u.next = null), null === a ? (s = l) : (a.next = l), (a = u);
            var d = e.alternate;
            if (null !== d) {
              var p = (d = d.updateQueue).lastBaseUpdate;
              p !== a &&
                (null === p ? (d.firstBaseUpdate = l) : (p.next = l),
                (d.lastBaseUpdate = u));
            }
          }
          if (null !== s) {
            for (p = i.baseState, a = 0, d = l = u = null; ; ) {
              c = s.lane;
              var f = s.eventTime;
              if ((r & c) === c) {
                null !== d &&
                  (d = d.next =
                    {
                      eventTime: f,
                      lane: 0,
                      tag: s.tag,
                      payload: s.payload,
                      callback: s.callback,
                      next: null,
                    });
                e: {
                  var h = e,
                    E = s;
                  switch (((c = t), (f = n), E.tag)) {
                    case 1:
                      if ("function" == typeof (h = E.payload)) {
                        p = h.call(f, p, c);
                        break e;
                      }
                      p = h;
                      break e;
                    case 3:
                      h.flags = (-4097 & h.flags) | 64;
                    case 0:
                      if (
                        null ==
                        (c =
                          "function" == typeof (h = E.payload)
                            ? h.call(f, p, c)
                            : h)
                      )
                        break e;
                      p = o({}, p, c);
                      break e;
                    case 2:
                      oi = !0;
                  }
                }
                null !== s.callback &&
                  ((e.flags |= 32),
                  null === (c = i.effects) ? (i.effects = [s]) : c.push(s));
              } else
                (f = {
                  eventTime: f,
                  lane: c,
                  tag: s.tag,
                  payload: s.payload,
                  callback: s.callback,
                  next: null,
                }),
                  null === d ? ((l = d = f), (u = p)) : (d = d.next = f),
                  (a |= c);
              if (null === (s = s.next)) {
                if (null === (c = i.shared.pending)) break;
                (s = c.next),
                  (c.next = null),
                  (i.lastBaseUpdate = c),
                  (i.shared.pending = null);
              }
            }
            null === d && (u = p),
              (i.baseState = u),
              (i.firstBaseUpdate = l),
              (i.lastBaseUpdate = d),
              (Ua |= a),
              (e.lanes = a),
              (e.memoizedState = p);
          }
        }
        function di(e, t, n) {
          if (((e = t.effects), (t.effects = null), null !== e))
            for (t = 0; t < e.length; t++) {
              var r = e[t],
                o = r.callback;
              if (null !== o) {
                if (((r.callback = null), (r = n), "function" != typeof o))
                  throw Error(s(191, o));
                o.call(r);
              }
            }
        }
        var pi = new r.Component().refs;
        function fi(e, t, n, r) {
          (n = null == (n = n(r, (t = e.memoizedState))) ? t : o({}, t, n)),
            (e.memoizedState = n),
            0 === e.lanes && (e.updateQueue.baseState = n);
        }
        var hi = {
          isMounted: function (e) {
            return !!(e = e._reactInternals) && qe(e) === e;
          },
          enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var r = sc(),
              o = ac(e),
              i = ai(r, o);
            (i.payload = t),
              null != n && (i.callback = n),
              ci(e, i),
              cc(e, o, r);
          },
          enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var r = sc(),
              o = ac(e),
              i = ai(r, o);
            (i.tag = 1),
              (i.payload = t),
              null != n && (i.callback = n),
              ci(e, i),
              cc(e, o, r);
          },
          enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = sc(),
              r = ac(e),
              o = ai(n, r);
            (o.tag = 2), null != t && (o.callback = t), ci(e, o), cc(e, r, n);
          },
        };
        function Ei(e, t, n, r, o, i, s) {
          return "function" == typeof (e = e.stateNode).shouldComponentUpdate
            ? e.shouldComponentUpdate(r, i, s)
            : !(
                t.prototype &&
                t.prototype.isPureReactComponent &&
                cr(n, r) &&
                cr(o, i)
              );
        }
        function gi(e, t, n) {
          var r = !1,
            o = co,
            i = t.contextType;
          return (
            "object" == typeof i && null !== i
              ? (i = ri(i))
              : ((o = ho(t) ? po : uo.current),
                (i = (r = null != (r = t.contextTypes)) ? fo(e, o) : co)),
            (t = new t(n, i)),
            (e.memoizedState =
              null !== t.state && void 0 !== t.state ? t.state : null),
            (t.updater = hi),
            (e.stateNode = t),
            (t._reactInternals = e),
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                o),
              (e.__reactInternalMemoizedMaskedChildContext = i)),
            t
          );
        }
        function Si(e, t, n, r) {
          (e = t.state),
            "function" == typeof t.componentWillReceiveProps &&
              t.componentWillReceiveProps(n, r),
            "function" == typeof t.UNSAFE_componentWillReceiveProps &&
              t.UNSAFE_componentWillReceiveProps(n, r),
            t.state !== e && hi.enqueueReplaceState(t, t.state, null);
        }
        function Ci(e, t, n, r) {
          var o = e.stateNode;
          (o.props = n), (o.state = e.memoizedState), (o.refs = pi), ii(e);
          var i = t.contextType;
          "object" == typeof i && null !== i
            ? (o.context = ri(i))
            : ((i = ho(t) ? po : uo.current), (o.context = fo(e, i))),
            li(e, n, o, r),
            (o.state = e.memoizedState),
            "function" == typeof (i = t.getDerivedStateFromProps) &&
              (fi(e, t, i, n), (o.state = e.memoizedState)),
            "function" == typeof t.getDerivedStateFromProps ||
              "function" == typeof o.getSnapshotBeforeUpdate ||
              ("function" != typeof o.UNSAFE_componentWillMount &&
                "function" != typeof o.componentWillMount) ||
              ((t = o.state),
              "function" == typeof o.componentWillMount &&
                o.componentWillMount(),
              "function" == typeof o.UNSAFE_componentWillMount &&
                o.UNSAFE_componentWillMount(),
              t !== o.state && hi.enqueueReplaceState(o, o.state, null),
              li(e, n, o, r),
              (o.state = e.memoizedState)),
            "function" == typeof o.componentDidMount && (e.flags |= 4);
        }
        var _i = Array.isArray;
        function mi(e, t, n) {
          if (
            null !== (e = n.ref) &&
            "function" != typeof e &&
            "object" != typeof e
          ) {
            if (n._owner) {
              if ((n = n._owner)) {
                if (1 !== n.tag) throw Error(s(309));
                var r = n.stateNode;
              }
              if (!r) throw Error(s(147, e));
              var o = "" + e;
              return null !== t &&
                null !== t.ref &&
                "function" == typeof t.ref &&
                t.ref._stringRef === o
                ? t.ref
                : (((t = function (e) {
                    var t = r.refs;
                    t === pi && (t = r.refs = {}),
                      null === e ? delete t[o] : (t[o] = e);
                  })._stringRef = o),
                  t);
            }
            if ("string" != typeof e) throw Error(s(284));
            if (!n._owner) throw Error(s(290, e));
          }
          return e;
        }
        function Ti(e, t) {
          if ("textarea" !== e.type)
            throw Error(
              s(
                31,
                "[object Object]" === Object.prototype.toString.call(t)
                  ? "object with keys {" + Object.keys(t).join(", ") + "}"
                  : t
              )
            );
        }
        function yi(e) {
          function t(t, n) {
            if (e) {
              var r = t.lastEffect;
              null !== r
                ? ((r.nextEffect = n), (t.lastEffect = n))
                : (t.firstEffect = t.lastEffect = n),
                (n.nextEffect = null),
                (n.flags = 8);
            }
          }
          function n(n, r) {
            if (!e) return null;
            for (; null !== r; ) t(n, r), (r = r.sibling);
            return null;
          }
          function r(e, t) {
            for (e = new Map(); null !== t; )
              null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                (t = t.sibling);
            return e;
          }
          function o(e, t) {
            return ((e = Fc(e, t)).index = 0), (e.sibling = null), e;
          }
          function i(t, n, r) {
            return (
              (t.index = r),
              e
                ? null !== (r = t.alternate)
                  ? (r = r.index) < n
                    ? ((t.flags = 2), n)
                    : r
                  : ((t.flags = 2), n)
                : n
            );
          }
          function a(t) {
            return e && null === t.alternate && (t.flags = 2), t;
          }
          function c(e, t, n, r) {
            return null === t || 6 !== t.tag
              ? (((t = Vc(n, e.mode, r)).return = e), t)
              : (((t = o(t, n)).return = e), t);
          }
          function u(e, t, n, r) {
            return null !== t && t.elementType === n.type
              ? (((r = o(t, n.props)).ref = mi(e, t, n)), (r.return = e), r)
              : (((r = Bc(n.type, n.key, n.props, null, e.mode, r)).ref = mi(
                  e,
                  t,
                  n
                )),
                (r.return = e),
                r);
          }
          function l(e, t, n, r) {
            return null === t ||
              4 !== t.tag ||
              t.stateNode.containerInfo !== n.containerInfo ||
              t.stateNode.implementation !== n.implementation
              ? (((t = jc(n, e.mode, r)).return = e), t)
              : (((t = o(t, n.children || [])).return = e), t);
          }
          function d(e, t, n, r, i) {
            return null === t || 7 !== t.tag
              ? (((t = Kc(n, e.mode, r, i)).return = e), t)
              : (((t = o(t, n)).return = e), t);
          }
          function p(e, t, n) {
            if ("string" == typeof t || "number" == typeof t)
              return ((t = Vc("" + t, e.mode, n)).return = e), t;
            if ("object" == typeof t && null !== t) {
              switch (t.$$typeof) {
                case y:
                  return (
                    ((n = Bc(t.type, t.key, t.props, null, e.mode, n)).ref = mi(
                      e,
                      null,
                      t
                    )),
                    (n.return = e),
                    n
                  );
                case A:
                  return ((t = jc(t, e.mode, n)).return = e), t;
              }
              if (_i(t) || K(t))
                return ((t = Kc(t, e.mode, n, null)).return = e), t;
              Ti(e, t);
            }
            return null;
          }
          function f(e, t, n, r) {
            var o = null !== t ? t.key : null;
            if ("string" == typeof n || "number" == typeof n)
              return null !== o ? null : c(e, t, "" + n, r);
            if ("object" == typeof n && null !== n) {
              switch (n.$$typeof) {
                case y:
                  return n.key === o
                    ? n.type === I
                      ? d(e, t, n.props.children, r, o)
                      : u(e, t, n, r)
                    : null;
                case A:
                  return n.key === o ? l(e, t, n, r) : null;
              }
              if (_i(n) || K(n)) return null !== o ? null : d(e, t, n, r, null);
              Ti(e, n);
            }
            return null;
          }
          function h(e, t, n, r, o) {
            if ("string" == typeof r || "number" == typeof r)
              return c(t, (e = e.get(n) || null), "" + r, o);
            if ("object" == typeof r && null !== r) {
              switch (r.$$typeof) {
                case y:
                  return (
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r.type === I
                      ? d(t, e, r.props.children, o, r.key)
                      : u(t, e, r, o)
                  );
                case A:
                  return l(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    o
                  );
              }
              if (_i(r) || K(r))
                return d(t, (e = e.get(n) || null), r, o, null);
              Ti(t, r);
            }
            return null;
          }
          function E(o, s, a, c) {
            for (
              var u = null, l = null, d = s, E = (s = 0), g = null;
              null !== d && E < a.length;
              E++
            ) {
              d.index > E ? ((g = d), (d = null)) : (g = d.sibling);
              var S = f(o, d, a[E], c);
              if (null === S) {
                null === d && (d = g);
                break;
              }
              e && d && null === S.alternate && t(o, d),
                (s = i(S, s, E)),
                null === l ? (u = S) : (l.sibling = S),
                (l = S),
                (d = g);
            }
            if (E === a.length) return n(o, d), u;
            if (null === d) {
              for (; E < a.length; E++)
                null !== (d = p(o, a[E], c)) &&
                  ((s = i(d, s, E)),
                  null === l ? (u = d) : (l.sibling = d),
                  (l = d));
              return u;
            }
            for (d = r(o, d); E < a.length; E++)
              null !== (g = h(d, o, E, a[E], c)) &&
                (e &&
                  null !== g.alternate &&
                  d.delete(null === g.key ? E : g.key),
                (s = i(g, s, E)),
                null === l ? (u = g) : (l.sibling = g),
                (l = g));
            return (
              e &&
                d.forEach(function (e) {
                  return t(o, e);
                }),
              u
            );
          }
          function g(o, a, c, u) {
            var l = K(c);
            if ("function" != typeof l) throw Error(s(150));
            if (null == (c = l.call(c))) throw Error(s(151));
            for (
              var d = (l = null), E = a, g = (a = 0), S = null, C = c.next();
              null !== E && !C.done;
              g++, C = c.next()
            ) {
              E.index > g ? ((S = E), (E = null)) : (S = E.sibling);
              var _ = f(o, E, C.value, u);
              if (null === _) {
                null === E && (E = S);
                break;
              }
              e && E && null === _.alternate && t(o, E),
                (a = i(_, a, g)),
                null === d ? (l = _) : (d.sibling = _),
                (d = _),
                (E = S);
            }
            if (C.done) return n(o, E), l;
            if (null === E) {
              for (; !C.done; g++, C = c.next())
                null !== (C = p(o, C.value, u)) &&
                  ((a = i(C, a, g)),
                  null === d ? (l = C) : (d.sibling = C),
                  (d = C));
              return l;
            }
            for (E = r(o, E); !C.done; g++, C = c.next())
              null !== (C = h(E, o, g, C.value, u)) &&
                (e &&
                  null !== C.alternate &&
                  E.delete(null === C.key ? g : C.key),
                (a = i(C, a, g)),
                null === d ? (l = C) : (d.sibling = C),
                (d = C));
            return (
              e &&
                E.forEach(function (e) {
                  return t(o, e);
                }),
              l
            );
          }
          return function (e, r, i, c) {
            var u =
              "object" == typeof i &&
              null !== i &&
              i.type === I &&
              null === i.key;
            u && (i = i.props.children);
            var l = "object" == typeof i && null !== i;
            if (l)
              switch (i.$$typeof) {
                case y:
                  e: {
                    for (l = i.key, u = r; null !== u; ) {
                      if (u.key === l) {
                        switch (u.tag) {
                          case 7:
                            if (i.type === I) {
                              n(e, u.sibling),
                                ((r = o(u, i.props.children)).return = e),
                                (e = r);
                              break e;
                            }
                            break;
                          default:
                            if (u.elementType === i.type) {
                              n(e, u.sibling),
                                ((r = o(u, i.props)).ref = mi(e, u, i)),
                                (r.return = e),
                                (e = r);
                              break e;
                            }
                        }
                        n(e, u);
                        break;
                      }
                      t(e, u), (u = u.sibling);
                    }
                    i.type === I
                      ? (((r = Kc(i.props.children, e.mode, c, i.key)).return =
                          e),
                        (e = r))
                      : (((c = Bc(
                          i.type,
                          i.key,
                          i.props,
                          null,
                          e.mode,
                          c
                        )).ref = mi(e, r, i)),
                        (c.return = e),
                        (e = c));
                  }
                  return a(e);
                case A:
                  e: {
                    for (u = i.key; null !== r; ) {
                      if (r.key === u) {
                        if (
                          4 === r.tag &&
                          r.stateNode.containerInfo === i.containerInfo &&
                          r.stateNode.implementation === i.implementation
                        ) {
                          n(e, r.sibling),
                            ((r = o(r, i.children || [])).return = e),
                            (e = r);
                          break e;
                        }
                        n(e, r);
                        break;
                      }
                      t(e, r), (r = r.sibling);
                    }
                    ((r = jc(i, e.mode, c)).return = e), (e = r);
                  }
                  return a(e);
              }
            if ("string" == typeof i || "number" == typeof i)
              return (
                (i = "" + i),
                null !== r && 6 === r.tag
                  ? (n(e, r.sibling), ((r = o(r, i)).return = e), (e = r))
                  : (n(e, r), ((r = Vc(i, e.mode, c)).return = e), (e = r)),
                a(e)
              );
            if (_i(i)) return E(e, r, i, c);
            if (K(i)) return g(e, r, i, c);
            if ((l && Ti(e, i), void 0 === i && !u))
              switch (e.tag) {
                case 1:
                case 22:
                case 0:
                case 11:
                case 15:
                  throw Error(s(152, X(e.type) || "Component"));
              }
            return n(e, r);
          };
        }
        var Ai = yi(!0),
          Ii = yi(!1),
          vi = {},
          Ni = io(vi),
          Ri = io(vi),
          Oi = io(vi);
        function Pi(e) {
          if (e === vi) throw Error(s(174));
          return e;
        }
        function Mi(e, t) {
          switch ((ao(Oi, t), ao(Ri, e), ao(Ni, vi), (e = t.nodeType))) {
            case 9:
            case 11:
              t = (t = t.documentElement) ? t.namespaceURI : fe(null, "");
              break;
            default:
              t = fe(
                (t = (e = 8 === e ? t.parentNode : t).namespaceURI || null),
                (e = e.tagName)
              );
          }
          so(Ni), ao(Ni, t);
        }
        function Li() {
          so(Ni), so(Ri), so(Oi);
        }
        function bi(e) {
          Pi(Oi.current);
          var t = Pi(Ni.current),
            n = fe(t, e.type);
          t !== n && (ao(Ri, e), ao(Ni, n));
        }
        function wi(e) {
          Ri.current === e && (so(Ni), so(Ri));
        }
        var Di = io(0);
        function Ui(e) {
          for (var t = e; null !== t; ) {
            if (13 === t.tag) {
              var n = t.memoizedState;
              if (
                null !== n &&
                (null === (n = n.dehydrated) ||
                  "$?" === n.data ||
                  "$!" === n.data)
              )
                return t;
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
              if (0 != (64 & t.flags)) return t;
            } else if (null !== t.child) {
              (t.child.return = t), (t = t.child);
              continue;
            }
            if (t === e) break;
            for (; null === t.sibling; ) {
              if (null === t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
          return null;
        }
        var xi = null,
          Yi = null,
          Gi = !1;
        function ki(e, t) {
          var n = Gc(5, null, null, 0);
          (n.elementType = "DELETED"),
            (n.type = "DELETED"),
            (n.stateNode = t),
            (n.return = e),
            (n.flags = 8),
            null !== e.lastEffect
              ? ((e.lastEffect.nextEffect = n), (e.lastEffect = n))
              : (e.firstEffect = e.lastEffect = n);
        }
        function Fi(e, t) {
          switch (e.tag) {
            case 5:
              var n = e.type;
              return (
                null !==
                  (t =
                    1 !== t.nodeType ||
                    n.toLowerCase() !== t.nodeName.toLowerCase()
                      ? null
                      : t) && ((e.stateNode = t), !0)
              );
            case 6:
              return (
                null !==
                  (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                ((e.stateNode = t), !0)
              );
            case 13:
            default:
              return !1;
          }
        }
        function Bi(e) {
          if (Gi) {
            var t = Yi;
            if (t) {
              var n = t;
              if (!Fi(e, t)) {
                if (!(t = Vr(n.nextSibling)) || !Fi(e, t))
                  return (
                    (e.flags = (-1025 & e.flags) | 2), (Gi = !1), void (xi = e)
                  );
                ki(xi, n);
              }
              (xi = e), (Yi = Vr(t.firstChild));
            } else (e.flags = (-1025 & e.flags) | 2), (Gi = !1), (xi = e);
          }
        }
        function Ki(e) {
          for (
            e = e.return;
            null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

          )
            e = e.return;
          xi = e;
        }
        function Hi(e) {
          if (e !== xi) return !1;
          if (!Gi) return Ki(e), (Gi = !0), !1;
          var t = e.type;
          if (
            5 !== e.tag ||
            ("head" !== t && "body" !== t && !Fr(t, e.memoizedProps))
          )
            for (t = Yi; t; ) ki(e, t), (t = Vr(t.nextSibling));
          if ((Ki(e), 13 === e.tag)) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
              throw Error(s(317));
            e: {
              for (e = e.nextSibling, t = 0; e; ) {
                if (8 === e.nodeType) {
                  var n = e.data;
                  if ("/$" === n) {
                    if (0 === t) {
                      Yi = Vr(e.nextSibling);
                      break e;
                    }
                    t--;
                  } else ("$" !== n && "$!" !== n && "$?" !== n) || t++;
                }
                e = e.nextSibling;
              }
              Yi = null;
            }
          } else Yi = xi ? Vr(e.stateNode.nextSibling) : null;
          return !0;
        }
        function Vi() {
          (Yi = xi = null), (Gi = !1);
        }
        var ji = [];
        function Ji() {
          for (var e = 0; e < ji.length; e++)
            ji[e]._workInProgressVersionPrimary = null;
          ji.length = 0;
        }
        var Xi = T.ReactCurrentDispatcher,
          Wi = T.ReactCurrentBatchConfig,
          qi = 0,
          zi = null,
          Qi = null,
          $i = null,
          Zi = !1,
          es = !1;
        function ts() {
          throw Error(s(321));
        }
        function ns(e, t) {
          if (null === t) return !1;
          for (var n = 0; n < t.length && n < e.length; n++)
            if (!sr(e[n], t[n])) return !1;
          return !0;
        }
        function rs(e, t, n, r, o, i) {
          if (
            ((qi = i),
            (zi = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (Xi.current = null === e || null === e.memoizedState ? Ps : Ms),
            (e = n(r, o)),
            es)
          ) {
            i = 0;
            do {
              if (((es = !1), !(25 > i))) throw Error(s(301));
              (i += 1),
                ($i = Qi = null),
                (t.updateQueue = null),
                (Xi.current = Ls),
                (e = n(r, o));
            } while (es);
          }
          if (
            ((Xi.current = Os),
            (t = null !== Qi && null !== Qi.next),
            (qi = 0),
            ($i = Qi = zi = null),
            (Zi = !1),
            t)
          )
            throw Error(s(300));
          return e;
        }
        function os() {
          var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
          };
          return (
            null === $i ? (zi.memoizedState = $i = e) : ($i = $i.next = e), $i
          );
        }
        function is() {
          if (null === Qi) {
            var e = zi.alternate;
            e = null !== e ? e.memoizedState : null;
          } else e = Qi.next;
          var t = null === $i ? zi.memoizedState : $i.next;
          if (null !== t) ($i = t), (Qi = e);
          else {
            if (null === e) throw Error(s(310));
            (e = {
              memoizedState: (Qi = e).memoizedState,
              baseState: Qi.baseState,
              baseQueue: Qi.baseQueue,
              queue: Qi.queue,
              next: null,
            }),
              null === $i ? (zi.memoizedState = $i = e) : ($i = $i.next = e);
          }
          return $i;
        }
        function ss(e, t) {
          return "function" == typeof t ? t(e) : t;
        }
        function as(e) {
          var t = is(),
            n = t.queue;
          if (null === n) throw Error(s(311));
          n.lastRenderedReducer = e;
          var r = Qi,
            o = r.baseQueue,
            i = n.pending;
          if (null !== i) {
            if (null !== o) {
              var a = o.next;
              (o.next = i.next), (i.next = a);
            }
            (r.baseQueue = o = i), (n.pending = null);
          }
          if (null !== o) {
            (o = o.next), (r = r.baseState);
            var c = (a = i = null),
              u = o;
            do {
              var l = u.lane;
              if ((qi & l) === l)
                null !== c &&
                  (c = c.next =
                    {
                      lane: 0,
                      action: u.action,
                      eagerReducer: u.eagerReducer,
                      eagerState: u.eagerState,
                      next: null,
                    }),
                  (r = u.eagerReducer === e ? u.eagerState : e(r, u.action));
              else {
                var d = {
                  lane: l,
                  action: u.action,
                  eagerReducer: u.eagerReducer,
                  eagerState: u.eagerState,
                  next: null,
                };
                null === c ? ((a = c = d), (i = r)) : (c = c.next = d),
                  (zi.lanes |= l),
                  (Ua |= l);
              }
              u = u.next;
            } while (null !== u && u !== o);
            null === c ? (i = r) : (c.next = a),
              sr(r, t.memoizedState) || (ws = !0),
              (t.memoizedState = r),
              (t.baseState = i),
              (t.baseQueue = c),
              (n.lastRenderedState = r);
          }
          return [t.memoizedState, n.dispatch];
        }
        function cs(e) {
          var t = is(),
            n = t.queue;
          if (null === n) throw Error(s(311));
          n.lastRenderedReducer = e;
          var r = n.dispatch,
            o = n.pending,
            i = t.memoizedState;
          if (null !== o) {
            n.pending = null;
            var a = (o = o.next);
            do {
              (i = e(i, a.action)), (a = a.next);
            } while (a !== o);
            sr(i, t.memoizedState) || (ws = !0),
              (t.memoizedState = i),
              null === t.baseQueue && (t.baseState = i),
              (n.lastRenderedState = i);
          }
          return [i, r];
        }
        function us(e, t, n) {
          var r = t._getVersion;
          r = r(t._source);
          var o = t._workInProgressVersionPrimary;
          if (
            (null !== o
              ? (e = o === r)
              : ((e = e.mutableReadLanes),
                (e = (qi & e) === e) &&
                  ((t._workInProgressVersionPrimary = r), ji.push(t))),
            e)
          )
            return n(t._source);
          throw (ji.push(t), Error(s(350)));
        }
        function ls(e, t, n, r) {
          var o = Ra;
          if (null === o) throw Error(s(349));
          var i = t._getVersion,
            a = i(t._source),
            c = Xi.current,
            u = c.useState(function () {
              return us(o, t, n);
            }),
            l = u[1],
            d = u[0];
          u = $i;
          var p = e.memoizedState,
            f = p.refs,
            h = f.getSnapshot,
            E = p.source;
          p = p.subscribe;
          var g = zi;
          return (
            (e.memoizedState = { refs: f, source: t, subscribe: r }),
            c.useEffect(
              function () {
                (f.getSnapshot = n), (f.setSnapshot = l);
                var e = i(t._source);
                if (!sr(a, e)) {
                  (e = n(t._source)),
                    sr(d, e) ||
                      (l(e),
                      (e = ac(g)),
                      (o.mutableReadLanes |= e & o.pendingLanes)),
                    (e = o.mutableReadLanes),
                    (o.entangledLanes |= e);
                  for (var r = o.entanglements, s = e; 0 < s; ) {
                    var c = 31 - Ht(s),
                      u = 1 << c;
                    (r[c] |= e), (s &= ~u);
                  }
                }
              },
              [n, t, r]
            ),
            c.useEffect(
              function () {
                return r(t._source, function () {
                  var e = f.getSnapshot,
                    n = f.setSnapshot;
                  try {
                    n(e(t._source));
                    var r = ac(g);
                    o.mutableReadLanes |= r & o.pendingLanes;
                  } catch (e) {
                    n(function () {
                      throw e;
                    });
                  }
                });
              },
              [t, r]
            ),
            (sr(h, n) && sr(E, t) && sr(p, r)) ||
              (((e = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: ss,
                lastRenderedState: d,
              }).dispatch = l =
                Rs.bind(null, zi, e)),
              (u.queue = e),
              (u.baseQueue = null),
              (d = us(o, t, n)),
              (u.memoizedState = u.baseState = d)),
            d
          );
        }
        function ds(e, t, n) {
          return ls(is(), e, t, n);
        }
        function ps(e) {
          var t = os();
          return (
            "function" == typeof e && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = (e = t.queue =
              {
                pending: null,
                dispatch: null,
                lastRenderedReducer: ss,
                lastRenderedState: e,
              }).dispatch =
              Rs.bind(null, zi, e)),
            [t.memoizedState, e]
          );
        }
        function fs(e, t, n, r) {
          return (
            (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
            null === (t = zi.updateQueue)
              ? ((t = { lastEffect: null }),
                (zi.updateQueue = t),
                (t.lastEffect = e.next = e))
              : null === (n = t.lastEffect)
              ? (t.lastEffect = e.next = e)
              : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e)),
            e
          );
        }
        function hs(e) {
          return (e = { current: e }), (os().memoizedState = e);
        }
        function Es() {
          return is().memoizedState;
        }
        function gs(e, t, n, r) {
          var o = os();
          (zi.flags |= e),
            (o.memoizedState = fs(1 | t, n, void 0, void 0 === r ? null : r));
        }
        function Ss(e, t, n, r) {
          var o = is();
          r = void 0 === r ? null : r;
          var i = void 0;
          if (null !== Qi) {
            var s = Qi.memoizedState;
            if (((i = s.destroy), null !== r && ns(r, s.deps)))
              return void fs(t, n, i, r);
          }
          (zi.flags |= e), (o.memoizedState = fs(1 | t, n, i, r));
        }
        function Cs(e, t) {
          return gs(516, 4, e, t);
        }
        function _s(e, t) {
          return Ss(516, 4, e, t);
        }
        function ms(e, t) {
          return Ss(4, 2, e, t);
        }
        function Ts(e, t) {
          return "function" == typeof t
            ? ((e = e()),
              t(e),
              function () {
                t(null);
              })
            : null != t
            ? ((e = e()),
              (t.current = e),
              function () {
                t.current = null;
              })
            : void 0;
        }
        function ys(e, t, n) {
          return (
            (n = null != n ? n.concat([e]) : null),
            Ss(4, 2, Ts.bind(null, t, e), n)
          );
        }
        function As() {}
        function Is(e, t) {
          var n = is();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && ns(t, r[1])
            ? r[0]
            : ((n.memoizedState = [e, t]), e);
        }
        function vs(e, t) {
          var n = is();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && ns(t, r[1])
            ? r[0]
            : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function Ns(e, t) {
          var n = Bo();
          Ho(98 > n ? 98 : n, function () {
            e(!0);
          }),
            Ho(97 < n ? 97 : n, function () {
              var n = Wi.transition;
              Wi.transition = 1;
              try {
                e(!1), t();
              } finally {
                Wi.transition = n;
              }
            });
        }
        function Rs(e, t, n) {
          var r = sc(),
            o = ac(e),
            i = {
              lane: o,
              action: n,
              eagerReducer: null,
              eagerState: null,
              next: null,
            },
            s = t.pending;
          if (
            (null === s ? (i.next = i) : ((i.next = s.next), (s.next = i)),
            (t.pending = i),
            (s = e.alternate),
            e === zi || (null !== s && s === zi))
          )
            es = Zi = !0;
          else {
            if (
              0 === e.lanes &&
              (null === s || 0 === s.lanes) &&
              null !== (s = t.lastRenderedReducer)
            )
              try {
                var a = t.lastRenderedState,
                  c = s(a, n);
                if (((i.eagerReducer = s), (i.eagerState = c), sr(c, a)))
                  return;
              } catch (e) {}
            cc(e, o, r);
          }
        }
        var Os = {
            readContext: ri,
            useCallback: ts,
            useContext: ts,
            useEffect: ts,
            useImperativeHandle: ts,
            useLayoutEffect: ts,
            useMemo: ts,
            useReducer: ts,
            useRef: ts,
            useState: ts,
            useDebugValue: ts,
            useDeferredValue: ts,
            useTransition: ts,
            useMutableSource: ts,
            useOpaqueIdentifier: ts,
            unstable_isNewReconciler: !1,
          },
          Ps = {
            readContext: ri,
            useCallback: function (e, t) {
              return (os().memoizedState = [e, void 0 === t ? null : t]), e;
            },
            useContext: ri,
            useEffect: Cs,
            useImperativeHandle: function (e, t, n) {
              return (
                (n = null != n ? n.concat([e]) : null),
                gs(4, 2, Ts.bind(null, t, e), n)
              );
            },
            useLayoutEffect: function (e, t) {
              return gs(4, 2, e, t);
            },
            useMemo: function (e, t) {
              var n = os();
              return (
                (t = void 0 === t ? null : t),
                (e = e()),
                (n.memoizedState = [e, t]),
                e
              );
            },
            useReducer: function (e, t, n) {
              var r = os();
              return (
                (t = void 0 !== n ? n(t) : t),
                (r.memoizedState = r.baseState = t),
                (e = (e = r.queue =
                  {
                    pending: null,
                    dispatch: null,
                    lastRenderedReducer: e,
                    lastRenderedState: t,
                  }).dispatch =
                  Rs.bind(null, zi, e)),
                [r.memoizedState, e]
              );
            },
            useRef: hs,
            useState: ps,
            useDebugValue: As,
            useDeferredValue: function (e) {
              var t = ps(e),
                n = t[0],
                r = t[1];
              return (
                Cs(
                  function () {
                    var t = Wi.transition;
                    Wi.transition = 1;
                    try {
                      r(e);
                    } finally {
                      Wi.transition = t;
                    }
                  },
                  [e]
                ),
                n
              );
            },
            useTransition: function () {
              var e = ps(!1),
                t = e[0];
              return hs((e = Ns.bind(null, e[1]))), [e, t];
            },
            useMutableSource: function (e, t, n) {
              var r = os();
              return (
                (r.memoizedState = {
                  refs: { getSnapshot: t, setSnapshot: null },
                  source: e,
                  subscribe: n,
                }),
                ls(r, e, t, n)
              );
            },
            useOpaqueIdentifier: function () {
              if (Gi) {
                var e = !1,
                  t = (function (e) {
                    return { $$typeof: U, toString: e, valueOf: e };
                  })(function () {
                    throw (
                      (e || ((e = !0), n("r:" + (Jr++).toString(36))),
                      Error(s(355)))
                    );
                  }),
                  n = ps(t)[1];
                return (
                  0 == (2 & zi.mode) &&
                    ((zi.flags |= 516),
                    fs(
                      5,
                      function () {
                        n("r:" + (Jr++).toString(36));
                      },
                      void 0,
                      null
                    )),
                  t
                );
              }
              return ps((t = "r:" + (Jr++).toString(36))), t;
            },
            unstable_isNewReconciler: !1,
          },
          Ms = {
            readContext: ri,
            useCallback: Is,
            useContext: ri,
            useEffect: _s,
            useImperativeHandle: ys,
            useLayoutEffect: ms,
            useMemo: vs,
            useReducer: as,
            useRef: Es,
            useState: function () {
              return as(ss);
            },
            useDebugValue: As,
            useDeferredValue: function (e) {
              var t = as(ss),
                n = t[0],
                r = t[1];
              return (
                _s(
                  function () {
                    var t = Wi.transition;
                    Wi.transition = 1;
                    try {
                      r(e);
                    } finally {
                      Wi.transition = t;
                    }
                  },
                  [e]
                ),
                n
              );
            },
            useTransition: function () {
              var e = as(ss)[0];
              return [Es().current, e];
            },
            useMutableSource: ds,
            useOpaqueIdentifier: function () {
              return as(ss)[0];
            },
            unstable_isNewReconciler: !1,
          },
          Ls = {
            readContext: ri,
            useCallback: Is,
            useContext: ri,
            useEffect: _s,
            useImperativeHandle: ys,
            useLayoutEffect: ms,
            useMemo: vs,
            useReducer: cs,
            useRef: Es,
            useState: function () {
              return cs(ss);
            },
            useDebugValue: As,
            useDeferredValue: function (e) {
              var t = cs(ss),
                n = t[0],
                r = t[1];
              return (
                _s(
                  function () {
                    var t = Wi.transition;
                    Wi.transition = 1;
                    try {
                      r(e);
                    } finally {
                      Wi.transition = t;
                    }
                  },
                  [e]
                ),
                n
              );
            },
            useTransition: function () {
              var e = cs(ss)[0];
              return [Es().current, e];
            },
            useMutableSource: ds,
            useOpaqueIdentifier: function () {
              return cs(ss)[0];
            },
            unstable_isNewReconciler: !1,
          },
          bs = T.ReactCurrentOwner,
          ws = !1;
        function Ds(e, t, n, r) {
          t.child = null === e ? Ii(t, null, n, r) : Ai(t, e.child, n, r);
        }
        function Us(e, t, n, r, o) {
          n = n.render;
          var i = t.ref;
          return (
            ni(t, o),
            (r = rs(e, t, n, r, i, o)),
            null === e || ws
              ? ((t.flags |= 1), Ds(e, t, r, o), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -517),
                (e.lanes &= ~o),
                Zs(e, t, o))
          );
        }
        function xs(e, t, n, r, o, i) {
          if (null === e) {
            var s = n.type;
            return "function" != typeof s ||
              kc(s) ||
              void 0 !== s.defaultProps ||
              null !== n.compare ||
              void 0 !== n.defaultProps
              ? (((e = Bc(n.type, null, r, t, t.mode, i)).ref = t.ref),
                (e.return = t),
                (t.child = e))
              : ((t.tag = 15), (t.type = s), Ys(e, t, s, r, o, i));
          }
          return (
            (s = e.child),
            0 == (o & i) &&
            ((o = s.memoizedProps),
            (n = null !== (n = n.compare) ? n : cr)(o, r) && e.ref === t.ref)
              ? Zs(e, t, i)
              : ((t.flags |= 1),
                ((e = Fc(s, r)).ref = t.ref),
                (e.return = t),
                (t.child = e))
          );
        }
        function Ys(e, t, n, r, o, i) {
          if (null !== e && cr(e.memoizedProps, r) && e.ref === t.ref) {
            if (((ws = !1), 0 == (i & o)))
              return (t.lanes = e.lanes), Zs(e, t, i);
            0 != (16384 & e.flags) && (ws = !0);
          }
          return Fs(e, t, n, r, i);
        }
        function Gs(e, t, n) {
          var r = t.pendingProps,
            o = r.children,
            i = null !== e ? e.memoizedState : null;
          if ("hidden" === r.mode || "unstable-defer-without-hiding" === r.mode)
            if (0 == (4 & t.mode))
              (t.memoizedState = { baseLanes: 0 }), gc(0, n);
            else {
              if (0 == (1073741824 & n))
                return (
                  (e = null !== i ? i.baseLanes | n : n),
                  (t.lanes = t.childLanes = 1073741824),
                  (t.memoizedState = { baseLanes: e }),
                  gc(0, e),
                  null
                );
              (t.memoizedState = { baseLanes: 0 }),
                gc(0, null !== i ? i.baseLanes : n);
            }
          else
            null !== i
              ? ((r = i.baseLanes | n), (t.memoizedState = null))
              : (r = n),
              gc(0, r);
          return Ds(e, t, o, n), t.child;
        }
        function ks(e, t) {
          var n = t.ref;
          ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
            (t.flags |= 128);
        }
        function Fs(e, t, n, r, o) {
          var i = ho(n) ? po : uo.current;
          return (
            (i = fo(t, i)),
            ni(t, o),
            (n = rs(e, t, n, r, i, o)),
            null === e || ws
              ? ((t.flags |= 1), Ds(e, t, n, o), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -517),
                (e.lanes &= ~o),
                Zs(e, t, o))
          );
        }
        function Bs(e, t, n, r, o) {
          if (ho(n)) {
            var i = !0;
            Co(t);
          } else i = !1;
          if ((ni(t, o), null === t.stateNode))
            null !== e &&
              ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
              gi(t, n, r),
              Ci(t, n, r, o),
              (r = !0);
          else if (null === e) {
            var s = t.stateNode,
              a = t.memoizedProps;
            s.props = a;
            var c = s.context,
              u = n.contextType;
            u =
              "object" == typeof u && null !== u
                ? ri(u)
                : fo(t, (u = ho(n) ? po : uo.current));
            var l = n.getDerivedStateFromProps,
              d =
                "function" == typeof l ||
                "function" == typeof s.getSnapshotBeforeUpdate;
            d ||
              ("function" != typeof s.UNSAFE_componentWillReceiveProps &&
                "function" != typeof s.componentWillReceiveProps) ||
              ((a !== r || c !== u) && Si(t, s, r, u)),
              (oi = !1);
            var p = t.memoizedState;
            (s.state = p),
              li(t, r, s, o),
              (c = t.memoizedState),
              a !== r || p !== c || lo.current || oi
                ? ("function" == typeof l &&
                    (fi(t, n, l, r), (c = t.memoizedState)),
                  (a = oi || Ei(t, n, a, r, p, c, u))
                    ? (d ||
                        ("function" != typeof s.UNSAFE_componentWillMount &&
                          "function" != typeof s.componentWillMount) ||
                        ("function" == typeof s.componentWillMount &&
                          s.componentWillMount(),
                        "function" == typeof s.UNSAFE_componentWillMount &&
                          s.UNSAFE_componentWillMount()),
                      "function" == typeof s.componentDidMount &&
                        (t.flags |= 4))
                    : ("function" == typeof s.componentDidMount &&
                        (t.flags |= 4),
                      (t.memoizedProps = r),
                      (t.memoizedState = c)),
                  (s.props = r),
                  (s.state = c),
                  (s.context = u),
                  (r = a))
                : ("function" == typeof s.componentDidMount && (t.flags |= 4),
                  (r = !1));
          } else {
            (s = t.stateNode),
              si(e, t),
              (a = t.memoizedProps),
              (u = t.type === t.elementType ? a : Wo(t.type, a)),
              (s.props = u),
              (d = t.pendingProps),
              (p = s.context),
              (c =
                "object" == typeof (c = n.contextType) && null !== c
                  ? ri(c)
                  : fo(t, (c = ho(n) ? po : uo.current)));
            var f = n.getDerivedStateFromProps;
            (l =
              "function" == typeof f ||
              "function" == typeof s.getSnapshotBeforeUpdate) ||
              ("function" != typeof s.UNSAFE_componentWillReceiveProps &&
                "function" != typeof s.componentWillReceiveProps) ||
              ((a !== d || p !== c) && Si(t, s, r, c)),
              (oi = !1),
              (p = t.memoizedState),
              (s.state = p),
              li(t, r, s, o);
            var h = t.memoizedState;
            a !== d || p !== h || lo.current || oi
              ? ("function" == typeof f &&
                  (fi(t, n, f, r), (h = t.memoizedState)),
                (u = oi || Ei(t, n, u, r, p, h, c))
                  ? (l ||
                      ("function" != typeof s.UNSAFE_componentWillUpdate &&
                        "function" != typeof s.componentWillUpdate) ||
                      ("function" == typeof s.componentWillUpdate &&
                        s.componentWillUpdate(r, h, c),
                      "function" == typeof s.UNSAFE_componentWillUpdate &&
                        s.UNSAFE_componentWillUpdate(r, h, c)),
                    "function" == typeof s.componentDidUpdate && (t.flags |= 4),
                    "function" == typeof s.getSnapshotBeforeUpdate &&
                      (t.flags |= 256))
                  : ("function" != typeof s.componentDidUpdate ||
                      (a === e.memoizedProps && p === e.memoizedState) ||
                      (t.flags |= 4),
                    "function" != typeof s.getSnapshotBeforeUpdate ||
                      (a === e.memoizedProps && p === e.memoizedState) ||
                      (t.flags |= 256),
                    (t.memoizedProps = r),
                    (t.memoizedState = h)),
                (s.props = r),
                (s.state = h),
                (s.context = c),
                (r = u))
              : ("function" != typeof s.componentDidUpdate ||
                  (a === e.memoizedProps && p === e.memoizedState) ||
                  (t.flags |= 4),
                "function" != typeof s.getSnapshotBeforeUpdate ||
                  (a === e.memoizedProps && p === e.memoizedState) ||
                  (t.flags |= 256),
                (r = !1));
          }
          return Ks(e, t, n, r, i, o);
        }
        function Ks(e, t, n, r, o, i) {
          ks(e, t);
          var s = 0 != (64 & t.flags);
          if (!r && !s) return o && _o(t, n, !1), Zs(e, t, i);
          (r = t.stateNode), (bs.current = t);
          var a =
            s && "function" != typeof n.getDerivedStateFromError
              ? null
              : r.render();
          return (
            (t.flags |= 1),
            null !== e && s
              ? ((t.child = Ai(t, e.child, null, i)),
                (t.child = Ai(t, null, a, i)))
              : Ds(e, t, a, i),
            (t.memoizedState = r.state),
            o && _o(t, n, !0),
            t.child
          );
        }
        function Hs(e) {
          var t = e.stateNode;
          t.pendingContext
            ? go(0, t.pendingContext, t.pendingContext !== t.context)
            : t.context && go(0, t.context, !1),
            Mi(e, t.containerInfo);
        }
        var Vs,
          js,
          Js,
          Xs = { dehydrated: null, retryLane: 0 };
        function Ws(e, t, n) {
          var r,
            o = t.pendingProps,
            i = Di.current,
            s = !1;
          return (
            (r = 0 != (64 & t.flags)) ||
              (r = (null === e || null !== e.memoizedState) && 0 != (2 & i)),
            r
              ? ((s = !0), (t.flags &= -65))
              : (null !== e && null === e.memoizedState) ||
                void 0 === o.fallback ||
                !0 === o.unstable_avoidThisFallback ||
                (i |= 1),
            ao(Di, 1 & i),
            null === e
              ? (void 0 !== o.fallback && Bi(t),
                (e = o.children),
                (i = o.fallback),
                s
                  ? ((e = qs(t, e, i, n)),
                    (t.child.memoizedState = { baseLanes: n }),
                    (t.memoizedState = Xs),
                    e)
                  : "number" == typeof o.unstable_expectedLoadTime
                  ? ((e = qs(t, e, i, n)),
                    (t.child.memoizedState = { baseLanes: n }),
                    (t.memoizedState = Xs),
                    (t.lanes = 33554432),
                    e)
                  : (((n = Hc(
                      { mode: "visible", children: e },
                      t.mode,
                      n,
                      null
                    )).return = t),
                    (t.child = n)))
              : (e.memoizedState,
                s
                  ? ((o = (function (e, t, n, r, o) {
                      var i = t.mode,
                        s = e.child;
                      e = s.sibling;
                      var a = { mode: "hidden", children: n };
                      return (
                        0 == (2 & i) && t.child !== s
                          ? (((n = t.child).childLanes = 0),
                            (n.pendingProps = a),
                            null !== (s = n.lastEffect)
                              ? ((t.firstEffect = n.firstEffect),
                                (t.lastEffect = s),
                                (s.nextEffect = null))
                              : (t.firstEffect = t.lastEffect = null))
                          : (n = Fc(s, a)),
                        null !== e
                          ? (r = Fc(e, r))
                          : ((r = Kc(r, i, o, null)).flags |= 2),
                        (r.return = t),
                        (n.return = t),
                        (n.sibling = r),
                        (t.child = n),
                        r
                      );
                    })(e, t, o.children, o.fallback, n)),
                    (s = t.child),
                    (i = e.child.memoizedState),
                    (s.memoizedState =
                      null === i
                        ? { baseLanes: n }
                        : { baseLanes: i.baseLanes | n }),
                    (s.childLanes = e.childLanes & ~n),
                    (t.memoizedState = Xs),
                    o)
                  : ((n = (function (e, t, n, r) {
                      var o = e.child;
                      return (
                        (e = o.sibling),
                        (n = Fc(o, { mode: "visible", children: n })),
                        0 == (2 & t.mode) && (n.lanes = r),
                        (n.return = t),
                        (n.sibling = null),
                        null !== e &&
                          ((e.nextEffect = null),
                          (e.flags = 8),
                          (t.firstEffect = t.lastEffect = e)),
                        (t.child = n)
                      );
                    })(e, t, o.children, n)),
                    (t.memoizedState = null),
                    n))
          );
        }
        function qs(e, t, n, r) {
          var o = e.mode,
            i = e.child;
          return (
            (t = { mode: "hidden", children: t }),
            0 == (2 & o) && null !== i
              ? ((i.childLanes = 0), (i.pendingProps = t))
              : (i = Hc(t, o, 0, null)),
            (n = Kc(n, o, r, null)),
            (i.return = e),
            (n.return = e),
            (i.sibling = n),
            (e.child = i),
            n
          );
        }
        function zs(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          null !== n && (n.lanes |= t), ti(e.return, t);
        }
        function Qs(e, t, n, r, o, i) {
          var s = e.memoizedState;
          null === s
            ? (e.memoizedState = {
                isBackwards: t,
                rendering: null,
                renderingStartTime: 0,
                last: r,
                tail: n,
                tailMode: o,
                lastEffect: i,
              })
            : ((s.isBackwards = t),
              (s.rendering = null),
              (s.renderingStartTime = 0),
              (s.last = r),
              (s.tail = n),
              (s.tailMode = o),
              (s.lastEffect = i));
        }
        function $s(e, t, n) {
          var r = t.pendingProps,
            o = r.revealOrder,
            i = r.tail;
          if ((Ds(e, t, r.children, n), 0 != (2 & (r = Di.current))))
            (r = (1 & r) | 2), (t.flags |= 64);
          else {
            if (null !== e && 0 != (64 & e.flags))
              e: for (e = t.child; null !== e; ) {
                if (13 === e.tag) null !== e.memoizedState && zs(e, n);
                else if (19 === e.tag) zs(e, n);
                else if (null !== e.child) {
                  (e.child.return = e), (e = e.child);
                  continue;
                }
                if (e === t) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === t) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            r &= 1;
          }
          if ((ao(Di, r), 0 == (2 & t.mode))) t.memoizedState = null;
          else
            switch (o) {
              case "forwards":
                for (n = t.child, o = null; null !== n; )
                  null !== (e = n.alternate) && null === Ui(e) && (o = n),
                    (n = n.sibling);
                null === (n = o)
                  ? ((o = t.child), (t.child = null))
                  : ((o = n.sibling), (n.sibling = null)),
                  Qs(t, !1, o, n, i, t.lastEffect);
                break;
              case "backwards":
                for (n = null, o = t.child, t.child = null; null !== o; ) {
                  if (null !== (e = o.alternate) && null === Ui(e)) {
                    t.child = o;
                    break;
                  }
                  (e = o.sibling), (o.sibling = n), (n = o), (o = e);
                }
                Qs(t, !0, n, null, i, t.lastEffect);
                break;
              case "together":
                Qs(t, !1, null, null, void 0, t.lastEffect);
                break;
              default:
                t.memoizedState = null;
            }
          return t.child;
        }
        function Zs(e, t, n) {
          if (
            (null !== e && (t.dependencies = e.dependencies),
            (Ua |= t.lanes),
            0 != (n & t.childLanes))
          ) {
            if (null !== e && t.child !== e.child) throw Error(s(153));
            if (null !== t.child) {
              for (
                n = Fc((e = t.child), e.pendingProps),
                  t.child = n,
                  n.return = t;
                null !== e.sibling;

              )
                (e = e.sibling),
                  ((n = n.sibling = Fc(e, e.pendingProps)).return = t);
              n.sibling = null;
            }
            return t.child;
          }
          return null;
        }
        function ea(e, t) {
          if (!Gi)
            switch (e.tailMode) {
              case "hidden":
                t = e.tail;
                for (var n = null; null !== t; )
                  null !== t.alternate && (n = t), (t = t.sibling);
                null === n ? (e.tail = null) : (n.sibling = null);
                break;
              case "collapsed":
                n = e.tail;
                for (var r = null; null !== n; )
                  null !== n.alternate && (r = n), (n = n.sibling);
                null === r
                  ? t || null === e.tail
                    ? (e.tail = null)
                    : (e.tail.sibling = null)
                  : (r.sibling = null);
            }
        }
        function ta(e, t, n) {
          var r = t.pendingProps;
          switch (t.tag) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return null;
            case 1:
              return ho(t.type) && Eo(), null;
            case 3:
              return (
                Li(),
                so(lo),
                so(uo),
                Ji(),
                (r = t.stateNode).pendingContext &&
                  ((r.context = r.pendingContext), (r.pendingContext = null)),
                (null !== e && null !== e.child) ||
                  (Hi(t) ? (t.flags |= 4) : r.hydrate || (t.flags |= 256)),
                null
              );
            case 5:
              wi(t);
              var i = Pi(Oi.current);
              if (((n = t.type), null !== e && null != t.stateNode))
                js(e, t, n, r), e.ref !== t.ref && (t.flags |= 128);
              else {
                if (!r) {
                  if (null === t.stateNode) throw Error(s(166));
                  return null;
                }
                if (((e = Pi(Ni.current)), Hi(t))) {
                  (r = t.stateNode), (n = t.type);
                  var a = t.memoizedProps;
                  switch (((r[Wr] = t), (r[qr] = a), n)) {
                    case "dialog":
                      Nr("cancel", r), Nr("close", r);
                      break;
                    case "iframe":
                    case "object":
                    case "embed":
                      Nr("load", r);
                      break;
                    case "video":
                    case "audio":
                      for (e = 0; e < yr.length; e++) Nr(yr[e], r);
                      break;
                    case "source":
                      Nr("error", r);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      Nr("error", r), Nr("load", r);
                      break;
                    case "details":
                      Nr("toggle", r);
                      break;
                    case "input":
                      ee(r, a), Nr("invalid", r);
                      break;
                    case "select":
                      (r._wrapperState = { wasMultiple: !!a.multiple }),
                        Nr("invalid", r);
                      break;
                    case "textarea":
                      ce(r, a), Nr("invalid", r);
                  }
                  for (var u in (Ae(n, a), (e = null), a))
                    a.hasOwnProperty(u) &&
                      ((i = a[u]),
                      "children" === u
                        ? "string" == typeof i
                          ? r.textContent !== i && (e = ["children", i])
                          : "number" == typeof i &&
                            r.textContent !== "" + i &&
                            (e = ["children", "" + i])
                        : c.hasOwnProperty(u) &&
                          null != i &&
                          "onScroll" === u &&
                          Nr("scroll", r));
                  switch (n) {
                    case "input":
                      z(r), re(r, a, !0);
                      break;
                    case "textarea":
                      z(r), le(r);
                      break;
                    case "select":
                    case "option":
                      break;
                    default:
                      "function" == typeof a.onClick && (r.onclick = xr);
                  }
                  (r = e), (t.updateQueue = r), null !== r && (t.flags |= 4);
                } else {
                  switch (
                    ((u = 9 === i.nodeType ? i : i.ownerDocument),
                    e === de && (e = pe(n)),
                    e === de
                      ? "script" === n
                        ? (((e = u.createElement("div")).innerHTML =
                            "<script></script>"),
                          (e = e.removeChild(e.firstChild)))
                        : "string" == typeof r.is
                        ? (e = u.createElement(n, { is: r.is }))
                        : ((e = u.createElement(n)),
                          "select" === n &&
                            ((u = e),
                            r.multiple
                              ? (u.multiple = !0)
                              : r.size && (u.size = r.size)))
                      : (e = u.createElementNS(e, n)),
                    (e[Wr] = t),
                    (e[qr] = r),
                    Vs(e, t),
                    (t.stateNode = e),
                    (u = Ie(n, r)),
                    n)
                  ) {
                    case "dialog":
                      Nr("cancel", e), Nr("close", e), (i = r);
                      break;
                    case "iframe":
                    case "object":
                    case "embed":
                      Nr("load", e), (i = r);
                      break;
                    case "video":
                    case "audio":
                      for (i = 0; i < yr.length; i++) Nr(yr[i], e);
                      i = r;
                      break;
                    case "source":
                      Nr("error", e), (i = r);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      Nr("error", e), Nr("load", e), (i = r);
                      break;
                    case "details":
                      Nr("toggle", e), (i = r);
                      break;
                    case "input":
                      ee(e, r), (i = Z(e, r)), Nr("invalid", e);
                      break;
                    case "option":
                      i = ie(e, r);
                      break;
                    case "select":
                      (e._wrapperState = { wasMultiple: !!r.multiple }),
                        (i = o({}, r, { value: void 0 })),
                        Nr("invalid", e);
                      break;
                    case "textarea":
                      ce(e, r), (i = ae(e, r)), Nr("invalid", e);
                      break;
                    default:
                      i = r;
                  }
                  Ae(n, i);
                  var l = i;
                  for (a in l)
                    if (l.hasOwnProperty(a)) {
                      var d = l[a];
                      "style" === a
                        ? Te(e, d)
                        : "dangerouslySetInnerHTML" === a
                        ? null != (d = d ? d.__html : void 0) && ge(e, d)
                        : "children" === a
                        ? "string" == typeof d
                          ? ("textarea" !== n || "" !== d) && Se(e, d)
                          : "number" == typeof d && Se(e, "" + d)
                        : "suppressContentEditableWarning" !== a &&
                          "suppressHydrationWarning" !== a &&
                          "autoFocus" !== a &&
                          (c.hasOwnProperty(a)
                            ? null != d && "onScroll" === a && Nr("scroll", e)
                            : null != d && m(e, a, d, u));
                    }
                  switch (n) {
                    case "input":
                      z(e), re(e, r, !1);
                      break;
                    case "textarea":
                      z(e), le(e);
                      break;
                    case "option":
                      null != r.value &&
                        e.setAttribute("value", "" + W(r.value));
                      break;
                    case "select":
                      (e.multiple = !!r.multiple),
                        null != (a = r.value)
                          ? se(e, !!r.multiple, a, !1)
                          : null != r.defaultValue &&
                            se(e, !!r.multiple, r.defaultValue, !0);
                      break;
                    default:
                      "function" == typeof i.onClick && (e.onclick = xr);
                  }
                  kr(n, r) && (t.flags |= 4);
                }
                null !== t.ref && (t.flags |= 128);
              }
              return null;
            case 6:
              if (e && null != t.stateNode) Js(0, t, e.memoizedProps, r);
              else {
                if ("string" != typeof r && null === t.stateNode)
                  throw Error(s(166));
                (n = Pi(Oi.current)),
                  Pi(Ni.current),
                  Hi(t)
                    ? ((r = t.stateNode),
                      (n = t.memoizedProps),
                      (r[Wr] = t),
                      r.nodeValue !== n && (t.flags |= 4))
                    : (((r = (
                        9 === n.nodeType ? n : n.ownerDocument
                      ).createTextNode(r))[Wr] = t),
                      (t.stateNode = r));
              }
              return null;
            case 13:
              return (
                so(Di),
                (r = t.memoizedState),
                0 != (64 & t.flags)
                  ? ((t.lanes = n), t)
                  : ((r = null !== r),
                    (n = !1),
                    null === e
                      ? void 0 !== t.memoizedProps.fallback && Hi(t)
                      : (n = null !== e.memoizedState),
                    r &&
                      !n &&
                      0 != (2 & t.mode) &&
                      ((null === e &&
                        !0 !== t.memoizedProps.unstable_avoidThisFallback) ||
                      0 != (1 & Di.current)
                        ? 0 === ba && (ba = 3)
                        : ((0 !== ba && 3 !== ba) || (ba = 4),
                          null === Ra ||
                            (0 == (134217727 & Ua) && 0 == (134217727 & xa)) ||
                            pc(Ra, Pa))),
                    (r || n) && (t.flags |= 4),
                    null)
              );
            case 4:
              return Li(), null === e && Or(t.stateNode.containerInfo), null;
            case 10:
              return ei(t), null;
            case 17:
              return ho(t.type) && Eo(), null;
            case 19:
              if ((so(Di), null === (r = t.memoizedState))) return null;
              if (((a = 0 != (64 & t.flags)), null === (u = r.rendering)))
                if (a) ea(r, !1);
                else {
                  if (0 !== ba || (null !== e && 0 != (64 & e.flags)))
                    for (e = t.child; null !== e; ) {
                      if (null !== (u = Ui(e))) {
                        for (
                          t.flags |= 64,
                            ea(r, !1),
                            null !== (a = u.updateQueue) &&
                              ((t.updateQueue = a), (t.flags |= 4)),
                            null === r.lastEffect && (t.firstEffect = null),
                            t.lastEffect = r.lastEffect,
                            r = n,
                            n = t.child;
                          null !== n;

                        )
                          (e = r),
                            ((a = n).flags &= 2),
                            (a.nextEffect = null),
                            (a.firstEffect = null),
                            (a.lastEffect = null),
                            null === (u = a.alternate)
                              ? ((a.childLanes = 0),
                                (a.lanes = e),
                                (a.child = null),
                                (a.memoizedProps = null),
                                (a.memoizedState = null),
                                (a.updateQueue = null),
                                (a.dependencies = null),
                                (a.stateNode = null))
                              : ((a.childLanes = u.childLanes),
                                (a.lanes = u.lanes),
                                (a.child = u.child),
                                (a.memoizedProps = u.memoizedProps),
                                (a.memoizedState = u.memoizedState),
                                (a.updateQueue = u.updateQueue),
                                (a.type = u.type),
                                (e = u.dependencies),
                                (a.dependencies =
                                  null === e
                                    ? null
                                    : {
                                        lanes: e.lanes,
                                        firstContext: e.firstContext,
                                      })),
                            (n = n.sibling);
                        return ao(Di, (1 & Di.current) | 2), t.child;
                      }
                      e = e.sibling;
                    }
                  null !== r.tail &&
                    Fo() > Fa &&
                    ((t.flags |= 64),
                    (a = !0),
                    ea(r, !1),
                    (t.lanes = 33554432));
                }
              else {
                if (!a)
                  if (null !== (e = Ui(u))) {
                    if (
                      ((t.flags |= 64),
                      (a = !0),
                      null !== (n = e.updateQueue) &&
                        ((t.updateQueue = n), (t.flags |= 4)),
                      ea(r, !0),
                      null === r.tail &&
                        "hidden" === r.tailMode &&
                        !u.alternate &&
                        !Gi)
                    )
                      return (
                        null !== (t = t.lastEffect = r.lastEffect) &&
                          (t.nextEffect = null),
                        null
                      );
                  } else
                    2 * Fo() - r.renderingStartTime > Fa &&
                      1073741824 !== n &&
                      ((t.flags |= 64),
                      (a = !0),
                      ea(r, !1),
                      (t.lanes = 33554432));
                r.isBackwards
                  ? ((u.sibling = t.child), (t.child = u))
                  : (null !== (n = r.last) ? (n.sibling = u) : (t.child = u),
                    (r.last = u));
              }
              return null !== r.tail
                ? ((n = r.tail),
                  (r.rendering = n),
                  (r.tail = n.sibling),
                  (r.lastEffect = t.lastEffect),
                  (r.renderingStartTime = Fo()),
                  (n.sibling = null),
                  (t = Di.current),
                  ao(Di, a ? (1 & t) | 2 : 1 & t),
                  n)
                : null;
            case 23:
            case 24:
              return (
                Sc(),
                null !== e &&
                  (null !== e.memoizedState) != (null !== t.memoizedState) &&
                  "unstable-defer-without-hiding" !== r.mode &&
                  (t.flags |= 4),
                null
              );
          }
          throw Error(s(156, t.tag));
        }
        function na(e) {
          switch (e.tag) {
            case 1:
              ho(e.type) && Eo();
              var t = e.flags;
              return 4096 & t ? ((e.flags = (-4097 & t) | 64), e) : null;
            case 3:
              if ((Li(), so(lo), so(uo), Ji(), 0 != (64 & (t = e.flags))))
                throw Error(s(285));
              return (e.flags = (-4097 & t) | 64), e;
            case 5:
              return wi(e), null;
            case 13:
              return (
                so(Di),
                4096 & (t = e.flags) ? ((e.flags = (-4097 & t) | 64), e) : null
              );
            case 19:
              return so(Di), null;
            case 4:
              return Li(), null;
            case 10:
              return ei(e), null;
            case 23:
            case 24:
              return Sc(), null;
            default:
              return null;
          }
        }
        function ra(e, t) {
          try {
            var n = "",
              r = t;
            do {
              (n += J(r)), (r = r.return);
            } while (r);
            var o = n;
          } catch (e) {
            o = "\nError generating stack: " + e.message + "\n" + e.stack;
          }
          return { value: e, source: t, stack: o };
        }
        function oa(e, t) {
          try {
            console.error(t.value);
          } catch (e) {
            setTimeout(function () {
              throw e;
            });
          }
        }
        (Vs = function (e, t) {
          for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === t) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === t) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }),
          (js = function (e, t, n, r) {
            var i = e.memoizedProps;
            if (i !== r) {
              (e = t.stateNode), Pi(Ni.current);
              var s,
                a = null;
              switch (n) {
                case "input":
                  (i = Z(e, i)), (r = Z(e, r)), (a = []);
                  break;
                case "option":
                  (i = ie(e, i)), (r = ie(e, r)), (a = []);
                  break;
                case "select":
                  (i = o({}, i, { value: void 0 })),
                    (r = o({}, r, { value: void 0 })),
                    (a = []);
                  break;
                case "textarea":
                  (i = ae(e, i)), (r = ae(e, r)), (a = []);
                  break;
                default:
                  "function" != typeof i.onClick &&
                    "function" == typeof r.onClick &&
                    (e.onclick = xr);
              }
              for (d in (Ae(n, r), (n = null), i))
                if (!r.hasOwnProperty(d) && i.hasOwnProperty(d) && null != i[d])
                  if ("style" === d) {
                    var u = i[d];
                    for (s in u)
                      u.hasOwnProperty(s) && (n || (n = {}), (n[s] = ""));
                  } else
                    "dangerouslySetInnerHTML" !== d &&
                      "children" !== d &&
                      "suppressContentEditableWarning" !== d &&
                      "suppressHydrationWarning" !== d &&
                      "autoFocus" !== d &&
                      (c.hasOwnProperty(d)
                        ? a || (a = [])
                        : (a = a || []).push(d, null));
              for (d in r) {
                var l = r[d];
                if (
                  ((u = null != i ? i[d] : void 0),
                  r.hasOwnProperty(d) && l !== u && (null != l || null != u))
                )
                  if ("style" === d)
                    if (u) {
                      for (s in u)
                        !u.hasOwnProperty(s) ||
                          (l && l.hasOwnProperty(s)) ||
                          (n || (n = {}), (n[s] = ""));
                      for (s in l)
                        l.hasOwnProperty(s) &&
                          u[s] !== l[s] &&
                          (n || (n = {}), (n[s] = l[s]));
                    } else n || (a || (a = []), a.push(d, n)), (n = l);
                  else
                    "dangerouslySetInnerHTML" === d
                      ? ((l = l ? l.__html : void 0),
                        (u = u ? u.__html : void 0),
                        null != l && u !== l && (a = a || []).push(d, l))
                      : "children" === d
                      ? ("string" != typeof l && "number" != typeof l) ||
                        (a = a || []).push(d, "" + l)
                      : "suppressContentEditableWarning" !== d &&
                        "suppressHydrationWarning" !== d &&
                        (c.hasOwnProperty(d)
                          ? (null != l && "onScroll" === d && Nr("scroll", e),
                            a || u === l || (a = []))
                          : "object" == typeof l &&
                            null !== l &&
                            l.$$typeof === U
                          ? l.toString()
                          : (a = a || []).push(d, l));
              }
              n && (a = a || []).push("style", n);
              var d = a;
              (t.updateQueue = d) && (t.flags |= 4);
            }
          }),
          (Js = function (e, t, n, r) {
            n !== r && (t.flags |= 4);
          });
        var ia = "function" == typeof WeakMap ? WeakMap : Map;
        function sa(e, t, n) {
          ((n = ai(-1, n)).tag = 3), (n.payload = { element: null });
          var r = t.value;
          return (
            (n.callback = function () {
              Va || ((Va = !0), (ja = r)), oa(0, t);
            }),
            n
          );
        }
        function aa(e, t, n) {
          (n = ai(-1, n)).tag = 3;
          var r = e.type.getDerivedStateFromError;
          if ("function" == typeof r) {
            var o = t.value;
            n.payload = function () {
              return oa(0, t), r(o);
            };
          }
          var i = e.stateNode;
          return (
            null !== i &&
              "function" == typeof i.componentDidCatch &&
              (n.callback = function () {
                "function" != typeof r &&
                  (null === Ja ? (Ja = new Set([this])) : Ja.add(this),
                  oa(0, t));
                var e = t.stack;
                this.componentDidCatch(t.value, {
                  componentStack: null !== e ? e : "",
                });
              }),
            n
          );
        }
        var ca = "function" == typeof WeakSet ? WeakSet : Set;
        function ua(e) {
          var t = e.ref;
          if (null !== t)
            if ("function" == typeof t)
              try {
                t(null);
              } catch (t) {
                Dc(e, t);
              }
            else t.current = null;
        }
        function la(e, t) {
          switch (t.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
              return;
            case 1:
              if (256 & t.flags && null !== e) {
                var n = e.memoizedProps,
                  r = e.memoizedState;
                (t = (e = t.stateNode).getSnapshotBeforeUpdate(
                  t.elementType === t.type ? n : Wo(t.type, n),
                  r
                )),
                  (e.__reactInternalSnapshotBeforeUpdate = t);
              }
              return;
            case 3:
              return void (256 & t.flags && Hr(t.stateNode.containerInfo));
            case 5:
            case 6:
            case 4:
            case 17:
              return;
          }
          throw Error(s(163));
        }
        function da(e, t, n) {
          switch (n.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
              if (
                null !==
                (t = null !== (t = n.updateQueue) ? t.lastEffect : null)
              ) {
                e = t = t.next;
                do {
                  if (3 == (3 & e.tag)) {
                    var r = e.create;
                    e.destroy = r();
                  }
                  e = e.next;
                } while (e !== t);
              }
              if (
                null !==
                (t = null !== (t = n.updateQueue) ? t.lastEffect : null)
              ) {
                e = t = t.next;
                do {
                  var o = e;
                  (r = o.next),
                    0 != (4 & (o = o.tag)) &&
                      0 != (1 & o) &&
                      (Lc(n, e), Mc(n, e)),
                    (e = r);
                } while (e !== t);
              }
              return;
            case 1:
              return (
                (e = n.stateNode),
                4 & n.flags &&
                  (null === t
                    ? e.componentDidMount()
                    : ((r =
                        n.elementType === n.type
                          ? t.memoizedProps
                          : Wo(n.type, t.memoizedProps)),
                      e.componentDidUpdate(
                        r,
                        t.memoizedState,
                        e.__reactInternalSnapshotBeforeUpdate
                      ))),
                void (null !== (t = n.updateQueue) && di(n, t, e))
              );
            case 3:
              if (null !== (t = n.updateQueue)) {
                if (((e = null), null !== n.child))
                  switch (n.child.tag) {
                    case 5:
                      e = n.child.stateNode;
                      break;
                    case 1:
                      e = n.child.stateNode;
                  }
                di(n, t, e);
              }
              return;
            case 5:
              return (
                (e = n.stateNode),
                void (
                  null === t &&
                  4 & n.flags &&
                  kr(n.type, n.memoizedProps) &&
                  e.focus()
                )
              );
            case 6:
            case 4:
            case 12:
              return;
            case 13:
              return void (
                null === n.memoizedState &&
                ((n = n.alternate),
                null !== n &&
                  ((n = n.memoizedState),
                  null !== n && ((n = n.dehydrated), null !== n && Tt(n))))
              );
            case 19:
            case 17:
            case 20:
            case 21:
            case 23:
            case 24:
              return;
          }
          throw Error(s(163));
        }
        function pa(e, t) {
          for (var n = e; ; ) {
            if (5 === n.tag) {
              var r = n.stateNode;
              if (t)
                "function" == typeof (r = r.style).setProperty
                  ? r.setProperty("display", "none", "important")
                  : (r.display = "none");
              else {
                r = n.stateNode;
                var o = n.memoizedProps.style;
                (o =
                  null != o && o.hasOwnProperty("display") ? o.display : null),
                  (r.style.display = me("display", o));
              }
            } else if (6 === n.tag)
              n.stateNode.nodeValue = t ? "" : n.memoizedProps;
            else if (
              ((23 !== n.tag && 24 !== n.tag) ||
                null === n.memoizedState ||
                n === e) &&
              null !== n.child
            ) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === e) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === e) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }
        function fa(e, t) {
          if (To && "function" == typeof To.onCommitFiberUnmount)
            try {
              To.onCommitFiberUnmount(mo, t);
            } catch (e) {}
          switch (t.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
            case 22:
              if (null !== (e = t.updateQueue) && null !== (e = e.lastEffect)) {
                var n = (e = e.next);
                do {
                  var r = n,
                    o = r.destroy;
                  if (((r = r.tag), void 0 !== o))
                    if (0 != (4 & r)) Lc(t, n);
                    else {
                      r = t;
                      try {
                        o();
                      } catch (e) {
                        Dc(r, e);
                      }
                    }
                  n = n.next;
                } while (n !== e);
              }
              break;
            case 1:
              if (
                (ua(t),
                "function" == typeof (e = t.stateNode).componentWillUnmount)
              )
                try {
                  (e.props = t.memoizedProps),
                    (e.state = t.memoizedState),
                    e.componentWillUnmount();
                } catch (e) {
                  Dc(t, e);
                }
              break;
            case 5:
              ua(t);
              break;
            case 4:
              _a(e, t);
          }
        }
        function ha(e) {
          (e.alternate = null),
            (e.child = null),
            (e.dependencies = null),
            (e.firstEffect = null),
            (e.lastEffect = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.return = null),
            (e.updateQueue = null);
        }
        function Ea(e) {
          return 5 === e.tag || 3 === e.tag || 4 === e.tag;
        }
        function ga(e) {
          e: {
            for (var t = e.return; null !== t; ) {
              if (Ea(t)) break e;
              t = t.return;
            }
            throw Error(s(160));
          }
          var n = t;
          switch (((t = n.stateNode), n.tag)) {
            case 5:
              var r = !1;
              break;
            case 3:
            case 4:
              (t = t.containerInfo), (r = !0);
              break;
            default:
              throw Error(s(161));
          }
          16 & n.flags && (Se(t, ""), (n.flags &= -17));
          e: t: for (n = e; ; ) {
            for (; null === n.sibling; ) {
              if (null === n.return || Ea(n.return)) {
                n = null;
                break e;
              }
              n = n.return;
            }
            for (
              n.sibling.return = n.return, n = n.sibling;
              5 !== n.tag && 6 !== n.tag && 18 !== n.tag;

            ) {
              if (2 & n.flags) continue t;
              if (null === n.child || 4 === n.tag) continue t;
              (n.child.return = n), (n = n.child);
            }
            if (!(2 & n.flags)) {
              n = n.stateNode;
              break e;
            }
          }
          r ? Sa(e, n, t) : Ca(e, n, t);
        }
        function Sa(e, t, n) {
          var r = e.tag,
            o = 5 === r || 6 === r;
          if (o)
            (e = o ? e.stateNode : e.stateNode.instance),
              t
                ? 8 === n.nodeType
                  ? n.parentNode.insertBefore(e, t)
                  : n.insertBefore(e, t)
                : (8 === n.nodeType
                    ? (t = n.parentNode).insertBefore(e, n)
                    : (t = n).appendChild(e),
                  null != (n = n._reactRootContainer) ||
                    null !== t.onclick ||
                    (t.onclick = xr));
          else if (4 !== r && null !== (e = e.child))
            for (Sa(e, t, n), e = e.sibling; null !== e; )
              Sa(e, t, n), (e = e.sibling);
        }
        function Ca(e, t, n) {
          var r = e.tag,
            o = 5 === r || 6 === r;
          if (o)
            (e = o ? e.stateNode : e.stateNode.instance),
              t ? n.insertBefore(e, t) : n.appendChild(e);
          else if (4 !== r && null !== (e = e.child))
            for (Ca(e, t, n), e = e.sibling; null !== e; )
              Ca(e, t, n), (e = e.sibling);
        }
        function _a(e, t) {
          for (var n, r, o = t, i = !1; ; ) {
            if (!i) {
              i = o.return;
              e: for (;;) {
                if (null === i) throw Error(s(160));
                switch (((n = i.stateNode), i.tag)) {
                  case 5:
                    r = !1;
                    break e;
                  case 3:
                  case 4:
                    (n = n.containerInfo), (r = !0);
                    break e;
                }
                i = i.return;
              }
              i = !0;
            }
            if (5 === o.tag || 6 === o.tag) {
              e: for (var a = e, c = o, u = c; ; )
                if ((fa(a, u), null !== u.child && 4 !== u.tag))
                  (u.child.return = u), (u = u.child);
                else {
                  if (u === c) break e;
                  for (; null === u.sibling; ) {
                    if (null === u.return || u.return === c) break e;
                    u = u.return;
                  }
                  (u.sibling.return = u.return), (u = u.sibling);
                }
              r
                ? ((a = n),
                  (c = o.stateNode),
                  8 === a.nodeType
                    ? a.parentNode.removeChild(c)
                    : a.removeChild(c))
                : n.removeChild(o.stateNode);
            } else if (4 === o.tag) {
              if (null !== o.child) {
                (n = o.stateNode.containerInfo),
                  (r = !0),
                  (o.child.return = o),
                  (o = o.child);
                continue;
              }
            } else if ((fa(e, o), null !== o.child)) {
              (o.child.return = o), (o = o.child);
              continue;
            }
            if (o === t) break;
            for (; null === o.sibling; ) {
              if (null === o.return || o.return === t) return;
              4 === (o = o.return).tag && (i = !1);
            }
            (o.sibling.return = o.return), (o = o.sibling);
          }
        }
        function ma(e, t) {
          switch (t.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
            case 22:
              var n = t.updateQueue;
              if (null !== (n = null !== n ? n.lastEffect : null)) {
                var r = (n = n.next);
                do {
                  3 == (3 & r.tag) &&
                    ((e = r.destroy),
                    (r.destroy = void 0),
                    void 0 !== e && e()),
                    (r = r.next);
                } while (r !== n);
              }
              return;
            case 1:
              return;
            case 5:
              if (null != (n = t.stateNode)) {
                r = t.memoizedProps;
                var o = null !== e ? e.memoizedProps : r;
                e = t.type;
                var i = t.updateQueue;
                if (((t.updateQueue = null), null !== i)) {
                  for (
                    n[qr] = r,
                      "input" === e &&
                        "radio" === r.type &&
                        null != r.name &&
                        te(n, r),
                      Ie(e, o),
                      t = Ie(e, r),
                      o = 0;
                    o < i.length;
                    o += 2
                  ) {
                    var a = i[o],
                      c = i[o + 1];
                    "style" === a
                      ? Te(n, c)
                      : "dangerouslySetInnerHTML" === a
                      ? ge(n, c)
                      : "children" === a
                      ? Se(n, c)
                      : m(n, a, c, t);
                  }
                  switch (e) {
                    case "input":
                      ne(n, r);
                      break;
                    case "textarea":
                      ue(n, r);
                      break;
                    case "select":
                      (e = n._wrapperState.wasMultiple),
                        (n._wrapperState.wasMultiple = !!r.multiple),
                        null != (i = r.value)
                          ? se(n, !!r.multiple, i, !1)
                          : e !== !!r.multiple &&
                            (null != r.defaultValue
                              ? se(n, !!r.multiple, r.defaultValue, !0)
                              : se(n, !!r.multiple, r.multiple ? [] : "", !1));
                  }
                }
              }
              return;
            case 6:
              if (null === t.stateNode) throw Error(s(162));
              return void (t.stateNode.nodeValue = t.memoizedProps);
            case 3:
              return void (
                (n = t.stateNode).hydrate &&
                ((n.hydrate = !1), Tt(n.containerInfo))
              );
            case 12:
              return;
            case 13:
              return (
                null !== t.memoizedState && ((ka = Fo()), pa(t.child, !0)),
                void Ta(t)
              );
            case 19:
              return void Ta(t);
            case 17:
              return;
            case 23:
            case 24:
              return void pa(t, null !== t.memoizedState);
          }
          throw Error(s(163));
        }
        function Ta(e) {
          var t = e.updateQueue;
          if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new ca()),
              t.forEach(function (t) {
                var r = xc.bind(null, e, t);
                n.has(t) || (n.add(t), t.then(r, r));
              });
          }
        }
        function ya(e, t) {
          return (
            null !== e &&
            (null === (e = e.memoizedState) || null !== e.dehydrated) &&
            null !== (t = t.memoizedState) &&
            null === t.dehydrated
          );
        }
        var Aa = Math.ceil,
          Ia = T.ReactCurrentDispatcher,
          va = T.ReactCurrentOwner,
          Na = 0,
          Ra = null,
          Oa = null,
          Pa = 0,
          Ma = 0,
          La = io(0),
          ba = 0,
          wa = null,
          Da = 0,
          Ua = 0,
          xa = 0,
          Ya = 0,
          Ga = null,
          ka = 0,
          Fa = 1 / 0;
        function Ba() {
          Fa = Fo() + 500;
        }
        var Ka,
          Ha = null,
          Va = !1,
          ja = null,
          Ja = null,
          Xa = !1,
          Wa = null,
          qa = 90,
          za = [],
          Qa = [],
          $a = null,
          Za = 0,
          ec = null,
          tc = -1,
          nc = 0,
          rc = 0,
          oc = null,
          ic = !1;
        function sc() {
          return 0 != (48 & Na) ? Fo() : -1 !== tc ? tc : (tc = Fo());
        }
        function ac(e) {
          if (0 == (2 & (e = e.mode))) return 1;
          if (0 == (4 & e)) return 99 === Bo() ? 1 : 2;
          if ((0 === nc && (nc = Da), 0 !== Xo.transition)) {
            0 !== rc && (rc = null !== Ga ? Ga.pendingLanes : 0), (e = nc);
            var t = 4186112 & ~rc;
            return (
              0 == (t &= -t) &&
                0 == (t = (e = 4186112 & ~e) & -e) &&
                (t = 8192),
              t
            );
          }
          return (
            (e = Bo()),
            (e = kt(
              0 != (4 & Na) && 98 === e
                ? 12
                : (e = (function (e) {
                    switch (e) {
                      case 99:
                        return 15;
                      case 98:
                        return 10;
                      case 97:
                      case 96:
                        return 8;
                      case 95:
                        return 2;
                      default:
                        return 0;
                    }
                  })(e)),
              nc
            ))
          );
        }
        function cc(e, t, n) {
          if (50 < Za) throw ((Za = 0), (ec = null), Error(s(185)));
          if (null === (e = uc(e, t))) return null;
          Kt(e, t, n), e === Ra && ((xa |= t), 4 === ba && pc(e, Pa));
          var r = Bo();
          1 === t
            ? 0 != (8 & Na) && 0 == (48 & Na)
              ? fc(e)
              : (lc(e, n), 0 === Na && (Ba(), jo()))
            : (0 == (4 & Na) ||
                (98 !== r && 99 !== r) ||
                (null === $a ? ($a = new Set([e])) : $a.add(e)),
              lc(e, n)),
            (Ga = e);
        }
        function uc(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; )
            (e.childLanes |= t),
              null !== (n = e.alternate) && (n.childLanes |= t),
              (n = e),
              (e = e.return);
          return 3 === n.tag ? n.stateNode : null;
        }
        function lc(e, t) {
          for (
            var n = e.callbackNode,
              r = e.suspendedLanes,
              o = e.pingedLanes,
              i = e.expirationTimes,
              a = e.pendingLanes;
            0 < a;

          ) {
            var c = 31 - Ht(a),
              u = 1 << c,
              l = i[c];
            if (-1 === l) {
              if (0 == (u & r) || 0 != (u & o)) {
                (l = t), xt(u);
                var d = Ut;
                i[c] = 10 <= d ? l + 250 : 6 <= d ? l + 5e3 : -1;
              }
            } else l <= t && (e.expiredLanes |= u);
            a &= ~u;
          }
          if (((r = Yt(e, e === Ra ? Pa : 0)), (t = Ut), 0 === r))
            null !== n &&
              (n !== Do && Io(n),
              (e.callbackNode = null),
              (e.callbackPriority = 0));
          else {
            if (null !== n) {
              if (e.callbackPriority === t) return;
              n !== Do && Io(n);
            }
            15 === t
              ? ((n = fc.bind(null, e)),
                null === xo ? ((xo = [n]), (Yo = Ao(Po, Jo))) : xo.push(n),
                (n = Do))
              : (n =
                  14 === t
                    ? Vo(99, fc.bind(null, e))
                    : Vo(
                        (n = (function (e) {
                          switch (e) {
                            case 15:
                            case 14:
                              return 99;
                            case 13:
                            case 12:
                            case 11:
                            case 10:
                              return 98;
                            case 9:
                            case 8:
                            case 7:
                            case 6:
                            case 4:
                            case 5:
                              return 97;
                            case 3:
                            case 2:
                            case 1:
                              return 95;
                            case 0:
                              return 90;
                            default:
                              throw Error(s(358, e));
                          }
                        })(t)),
                        dc.bind(null, e)
                      )),
              (e.callbackPriority = t),
              (e.callbackNode = n);
          }
        }
        function dc(e) {
          if (((tc = -1), (rc = nc = 0), 0 != (48 & Na))) throw Error(s(327));
          var t = e.callbackNode;
          if (Pc() && e.callbackNode !== t) return null;
          var n = Yt(e, e === Ra ? Pa : 0);
          if (0 === n) return null;
          var r = n,
            o = Na;
          Na |= 16;
          var i = mc();
          for ((Ra === e && Pa === r) || (Ba(), Cc(e, r)); ; )
            try {
              Ac();
              break;
            } catch (t) {
              _c(e, t);
            }
          if (
            (Zo(),
            (Ia.current = i),
            (Na = o),
            null !== Oa ? (r = 0) : ((Ra = null), (Pa = 0), (r = ba)),
            0 != (Da & xa))
          )
            Cc(e, 0);
          else if (0 !== r) {
            if (
              (2 === r &&
                ((Na |= 64),
                e.hydrate && ((e.hydrate = !1), Hr(e.containerInfo)),
                0 !== (n = Gt(e)) && (r = Tc(e, n))),
              1 === r)
            )
              throw ((t = wa), Cc(e, 0), pc(e, n), lc(e, Fo()), t);
            switch (
              ((e.finishedWork = e.current.alternate), (e.finishedLanes = n), r)
            ) {
              case 0:
              case 1:
                throw Error(s(345));
              case 2:
                Nc(e);
                break;
              case 3:
                if (
                  (pc(e, n), (62914560 & n) === n && 10 < (r = ka + 500 - Fo()))
                ) {
                  if (0 !== Yt(e, 0)) break;
                  if (((o = e.suspendedLanes) & n) !== n) {
                    sc(), (e.pingedLanes |= e.suspendedLanes & o);
                    break;
                  }
                  e.timeoutHandle = Br(Nc.bind(null, e), r);
                  break;
                }
                Nc(e);
                break;
              case 4:
                if ((pc(e, n), (4186112 & n) === n)) break;
                for (r = e.eventTimes, o = -1; 0 < n; ) {
                  var a = 31 - Ht(n);
                  (i = 1 << a), (a = r[a]) > o && (o = a), (n &= ~i);
                }
                if (
                  ((n = o),
                  10 <
                    (n =
                      (120 > (n = Fo() - n)
                        ? 120
                        : 480 > n
                        ? 480
                        : 1080 > n
                        ? 1080
                        : 1920 > n
                        ? 1920
                        : 3e3 > n
                        ? 3e3
                        : 4320 > n
                        ? 4320
                        : 1960 * Aa(n / 1960)) - n))
                ) {
                  e.timeoutHandle = Br(Nc.bind(null, e), n);
                  break;
                }
                Nc(e);
                break;
              case 5:
                Nc(e);
                break;
              default:
                throw Error(s(329));
            }
          }
          return lc(e, Fo()), e.callbackNode === t ? dc.bind(null, e) : null;
        }
        function pc(e, t) {
          for (
            t &= ~Ya,
              t &= ~xa,
              e.suspendedLanes |= t,
              e.pingedLanes &= ~t,
              e = e.expirationTimes;
            0 < t;

          ) {
            var n = 31 - Ht(t),
              r = 1 << n;
            (e[n] = -1), (t &= ~r);
          }
        }
        function fc(e) {
          if (0 != (48 & Na)) throw Error(s(327));
          if ((Pc(), e === Ra && 0 != (e.expiredLanes & Pa))) {
            var t = Pa,
              n = Tc(e, t);
            0 != (Da & xa) && (n = Tc(e, (t = Yt(e, t))));
          } else n = Tc(e, (t = Yt(e, 0)));
          if (
            (0 !== e.tag &&
              2 === n &&
              ((Na |= 64),
              e.hydrate && ((e.hydrate = !1), Hr(e.containerInfo)),
              0 !== (t = Gt(e)) && (n = Tc(e, t))),
            1 === n)
          )
            throw ((n = wa), Cc(e, 0), pc(e, t), lc(e, Fo()), n);
          return (
            (e.finishedWork = e.current.alternate),
            (e.finishedLanes = t),
            Nc(e),
            lc(e, Fo()),
            null
          );
        }
        function hc(e, t) {
          var n = Na;
          Na |= 1;
          try {
            return e(t);
          } finally {
            0 === (Na = n) && (Ba(), jo());
          }
        }
        function Ec(e, t) {
          var n = Na;
          (Na &= -2), (Na |= 8);
          try {
            return e(t);
          } finally {
            0 === (Na = n) && (Ba(), jo());
          }
        }
        function gc(e, t) {
          ao(La, Ma), (Ma |= t), (Da |= t);
        }
        function Sc() {
          (Ma = La.current), so(La);
        }
        function Cc(e, t) {
          (e.finishedWork = null), (e.finishedLanes = 0);
          var n = e.timeoutHandle;
          if ((-1 !== n && ((e.timeoutHandle = -1), Kr(n)), null !== Oa))
            for (n = Oa.return; null !== n; ) {
              var r = n;
              switch (r.tag) {
                case 1:
                  null != (r = r.type.childContextTypes) && Eo();
                  break;
                case 3:
                  Li(), so(lo), so(uo), Ji();
                  break;
                case 5:
                  wi(r);
                  break;
                case 4:
                  Li();
                  break;
                case 13:
                case 19:
                  so(Di);
                  break;
                case 10:
                  ei(r);
                  break;
                case 23:
                case 24:
                  Sc();
              }
              n = n.return;
            }
          (Ra = e),
            (Oa = Fc(e.current, null)),
            (Pa = Ma = Da = t),
            (ba = 0),
            (wa = null),
            (Ya = xa = Ua = 0);
        }
        function _c(e, t) {
          for (;;) {
            var n = Oa;
            try {
              if ((Zo(), (Xi.current = Os), Zi)) {
                for (var r = zi.memoizedState; null !== r; ) {
                  var o = r.queue;
                  null !== o && (o.pending = null), (r = r.next);
                }
                Zi = !1;
              }
              if (
                ((qi = 0),
                ($i = Qi = zi = null),
                (es = !1),
                (va.current = null),
                null === n || null === n.return)
              ) {
                (ba = 1), (wa = t), (Oa = null);
                break;
              }
              e: {
                var i = e,
                  s = n.return,
                  a = n,
                  c = t;
                if (
                  ((t = Pa),
                  (a.flags |= 2048),
                  (a.firstEffect = a.lastEffect = null),
                  null !== c &&
                    "object" == typeof c &&
                    "function" == typeof c.then)
                ) {
                  var u = c;
                  if (0 == (2 & a.mode)) {
                    var l = a.alternate;
                    l
                      ? ((a.updateQueue = l.updateQueue),
                        (a.memoizedState = l.memoizedState),
                        (a.lanes = l.lanes))
                      : ((a.updateQueue = null), (a.memoizedState = null));
                  }
                  var d = 0 != (1 & Di.current),
                    p = s;
                  do {
                    var f;
                    if ((f = 13 === p.tag)) {
                      var h = p.memoizedState;
                      if (null !== h) f = null !== h.dehydrated;
                      else {
                        var E = p.memoizedProps;
                        f =
                          void 0 !== E.fallback &&
                          (!0 !== E.unstable_avoidThisFallback || !d);
                      }
                    }
                    if (f) {
                      var g = p.updateQueue;
                      if (null === g) {
                        var S = new Set();
                        S.add(u), (p.updateQueue = S);
                      } else g.add(u);
                      if (0 == (2 & p.mode)) {
                        if (
                          ((p.flags |= 64),
                          (a.flags |= 16384),
                          (a.flags &= -2981),
                          1 === a.tag)
                        )
                          if (null === a.alternate) a.tag = 17;
                          else {
                            var C = ai(-1, 1);
                            (C.tag = 2), ci(a, C);
                          }
                        a.lanes |= 1;
                        break e;
                      }
                      (c = void 0), (a = t);
                      var _ = i.pingCache;
                      if (
                        (null === _
                          ? ((_ = i.pingCache = new ia()),
                            (c = new Set()),
                            _.set(u, c))
                          : void 0 === (c = _.get(u)) &&
                            ((c = new Set()), _.set(u, c)),
                        !c.has(a))
                      ) {
                        c.add(a);
                        var m = Uc.bind(null, i, u, a);
                        u.then(m, m);
                      }
                      (p.flags |= 4096), (p.lanes = t);
                      break e;
                    }
                    p = p.return;
                  } while (null !== p);
                  c = Error(
                    (X(a.type) || "A React component") +
                      " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."
                  );
                }
                5 !== ba && (ba = 2), (c = ra(c, a)), (p = s);
                do {
                  switch (p.tag) {
                    case 3:
                      (i = c),
                        (p.flags |= 4096),
                        (t &= -t),
                        (p.lanes |= t),
                        ui(p, sa(0, i, t));
                      break e;
                    case 1:
                      i = c;
                      var T = p.type,
                        y = p.stateNode;
                      if (
                        0 == (64 & p.flags) &&
                        ("function" == typeof T.getDerivedStateFromError ||
                          (null !== y &&
                            "function" == typeof y.componentDidCatch &&
                            (null === Ja || !Ja.has(y))))
                      ) {
                        (p.flags |= 4096),
                          (t &= -t),
                          (p.lanes |= t),
                          ui(p, aa(p, i, t));
                        break e;
                      }
                  }
                  p = p.return;
                } while (null !== p);
              }
              vc(n);
            } catch (e) {
              (t = e), Oa === n && null !== n && (Oa = n = n.return);
              continue;
            }
            break;
          }
        }
        function mc() {
          var e = Ia.current;
          return (Ia.current = Os), null === e ? Os : e;
        }
        function Tc(e, t) {
          var n = Na;
          Na |= 16;
          var r = mc();
          for ((Ra === e && Pa === t) || Cc(e, t); ; )
            try {
              yc();
              break;
            } catch (t) {
              _c(e, t);
            }
          if ((Zo(), (Na = n), (Ia.current = r), null !== Oa))
            throw Error(s(261));
          return (Ra = null), (Pa = 0), ba;
        }
        function yc() {
          for (; null !== Oa; ) Ic(Oa);
        }
        function Ac() {
          for (; null !== Oa && !vo(); ) Ic(Oa);
        }
        function Ic(e) {
          var t = Ka(e.alternate, e, Ma);
          (e.memoizedProps = e.pendingProps),
            null === t ? vc(e) : (Oa = t),
            (va.current = null);
        }
        function vc(e) {
          var t = e;
          do {
            var n = t.alternate;
            if (((e = t.return), 0 == (2048 & t.flags))) {
              if (null !== (n = ta(n, t, Ma))) return void (Oa = n);
              if (
                (24 !== (n = t).tag && 23 !== n.tag) ||
                null === n.memoizedState ||
                0 != (1073741824 & Ma) ||
                0 == (4 & n.mode)
              ) {
                for (var r = 0, o = n.child; null !== o; )
                  (r |= o.lanes | o.childLanes), (o = o.sibling);
                n.childLanes = r;
              }
              null !== e &&
                0 == (2048 & e.flags) &&
                (null === e.firstEffect && (e.firstEffect = t.firstEffect),
                null !== t.lastEffect &&
                  (null !== e.lastEffect &&
                    (e.lastEffect.nextEffect = t.firstEffect),
                  (e.lastEffect = t.lastEffect)),
                1 < t.flags &&
                  (null !== e.lastEffect
                    ? (e.lastEffect.nextEffect = t)
                    : (e.firstEffect = t),
                  (e.lastEffect = t)));
            } else {
              if (null !== (n = na(t))) return (n.flags &= 2047), void (Oa = n);
              null !== e &&
                ((e.firstEffect = e.lastEffect = null), (e.flags |= 2048));
            }
            if (null !== (t = t.sibling)) return void (Oa = t);
            Oa = t = e;
          } while (null !== t);
          0 === ba && (ba = 5);
        }
        function Nc(e) {
          var t = Bo();
          return Ho(99, Rc.bind(null, e, t)), null;
        }
        function Rc(e, t) {
          do {
            Pc();
          } while (null !== Wa);
          if (0 != (48 & Na)) throw Error(s(327));
          var n = e.finishedWork;
          if (null === n) return null;
          if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current))
            throw Error(s(177));
          e.callbackNode = null;
          var r = n.lanes | n.childLanes,
            o = r,
            i = e.pendingLanes & ~o;
          (e.pendingLanes = o),
            (e.suspendedLanes = 0),
            (e.pingedLanes = 0),
            (e.expiredLanes &= o),
            (e.mutableReadLanes &= o),
            (e.entangledLanes &= o),
            (o = e.entanglements);
          for (var a = e.eventTimes, c = e.expirationTimes; 0 < i; ) {
            var u = 31 - Ht(i),
              l = 1 << u;
            (o[u] = 0), (a[u] = -1), (c[u] = -1), (i &= ~l);
          }
          if (
            (null !== $a && 0 == (24 & r) && $a.has(e) && $a.delete(e),
            e === Ra && ((Oa = Ra = null), (Pa = 0)),
            1 < n.flags
              ? null !== n.lastEffect
                ? ((n.lastEffect.nextEffect = n), (r = n.firstEffect))
                : (r = n)
              : (r = n.firstEffect),
            null !== r)
          ) {
            if (
              ((o = Na),
              (Na |= 32),
              (va.current = null),
              (Yr = Wt),
              fr((a = pr())))
            ) {
              if ("selectionStart" in a)
                c = { start: a.selectionStart, end: a.selectionEnd };
              else
                e: if (
                  ((c = ((c = a.ownerDocument) && c.defaultView) || window),
                  (l = c.getSelection && c.getSelection()) &&
                    0 !== l.rangeCount)
                ) {
                  (c = l.anchorNode),
                    (i = l.anchorOffset),
                    (u = l.focusNode),
                    (l = l.focusOffset);
                  try {
                    c.nodeType, u.nodeType;
                  } catch (e) {
                    c = null;
                    break e;
                  }
                  var d = 0,
                    p = -1,
                    f = -1,
                    h = 0,
                    E = 0,
                    g = a,
                    S = null;
                  t: for (;;) {
                    for (
                      var C;
                      g !== c || (0 !== i && 3 !== g.nodeType) || (p = d + i),
                        g !== u || (0 !== l && 3 !== g.nodeType) || (f = d + l),
                        3 === g.nodeType && (d += g.nodeValue.length),
                        null !== (C = g.firstChild);

                    )
                      (S = g), (g = C);
                    for (;;) {
                      if (g === a) break t;
                      if (
                        (S === c && ++h === i && (p = d),
                        S === u && ++E === l && (f = d),
                        null !== (C = g.nextSibling))
                      )
                        break;
                      S = (g = S).parentNode;
                    }
                    g = C;
                  }
                  c = -1 === p || -1 === f ? null : { start: p, end: f };
                } else c = null;
              c = c || { start: 0, end: 0 };
            } else c = null;
            (Gr = { focusedElem: a, selectionRange: c }),
              (Wt = !1),
              (oc = null),
              (ic = !1),
              (Ha = r);
            do {
              try {
                Oc();
              } catch (e) {
                if (null === Ha) throw Error(s(330));
                Dc(Ha, e), (Ha = Ha.nextEffect);
              }
            } while (null !== Ha);
            (oc = null), (Ha = r);
            do {
              try {
                for (a = e; null !== Ha; ) {
                  var _ = Ha.flags;
                  if ((16 & _ && Se(Ha.stateNode, ""), 128 & _)) {
                    var m = Ha.alternate;
                    if (null !== m) {
                      var T = m.ref;
                      null !== T &&
                        ("function" == typeof T ? T(null) : (T.current = null));
                    }
                  }
                  switch (1038 & _) {
                    case 2:
                      ga(Ha), (Ha.flags &= -3);
                      break;
                    case 6:
                      ga(Ha), (Ha.flags &= -3), ma(Ha.alternate, Ha);
                      break;
                    case 1024:
                      Ha.flags &= -1025;
                      break;
                    case 1028:
                      (Ha.flags &= -1025), ma(Ha.alternate, Ha);
                      break;
                    case 4:
                      ma(Ha.alternate, Ha);
                      break;
                    case 8:
                      _a(a, (c = Ha));
                      var y = c.alternate;
                      ha(c), null !== y && ha(y);
                  }
                  Ha = Ha.nextEffect;
                }
              } catch (e) {
                if (null === Ha) throw Error(s(330));
                Dc(Ha, e), (Ha = Ha.nextEffect);
              }
            } while (null !== Ha);
            if (
              ((T = Gr),
              (m = pr()),
              (_ = T.focusedElem),
              (a = T.selectionRange),
              m !== _ &&
                _ &&
                _.ownerDocument &&
                dr(_.ownerDocument.documentElement, _))
            ) {
              null !== a &&
                fr(_) &&
                ((m = a.start),
                void 0 === (T = a.end) && (T = m),
                "selectionStart" in _
                  ? ((_.selectionStart = m),
                    (_.selectionEnd = Math.min(T, _.value.length)))
                  : (T =
                      ((m = _.ownerDocument || document) && m.defaultView) ||
                      window).getSelection &&
                    ((T = T.getSelection()),
                    (c = _.textContent.length),
                    (y = Math.min(a.start, c)),
                    (a = void 0 === a.end ? y : Math.min(a.end, c)),
                    !T.extend && y > a && ((c = a), (a = y), (y = c)),
                    (c = lr(_, y)),
                    (i = lr(_, a)),
                    c &&
                      i &&
                      (1 !== T.rangeCount ||
                        T.anchorNode !== c.node ||
                        T.anchorOffset !== c.offset ||
                        T.focusNode !== i.node ||
                        T.focusOffset !== i.offset) &&
                      ((m = m.createRange()).setStart(c.node, c.offset),
                      T.removeAllRanges(),
                      y > a
                        ? (T.addRange(m), T.extend(i.node, i.offset))
                        : (m.setEnd(i.node, i.offset), T.addRange(m))))),
                (m = []);
              for (T = _; (T = T.parentNode); )
                1 === T.nodeType &&
                  m.push({ element: T, left: T.scrollLeft, top: T.scrollTop });
              for (
                "function" == typeof _.focus && _.focus(), _ = 0;
                _ < m.length;
                _++
              )
                ((T = m[_]).element.scrollLeft = T.left),
                  (T.element.scrollTop = T.top);
            }
            (Wt = !!Yr), (Gr = Yr = null), (e.current = n), (Ha = r);
            do {
              try {
                for (_ = e; null !== Ha; ) {
                  var A = Ha.flags;
                  if ((36 & A && da(_, Ha.alternate, Ha), 128 & A)) {
                    m = void 0;
                    var I = Ha.ref;
                    if (null !== I) {
                      var v = Ha.stateNode;
                      switch (Ha.tag) {
                        case 5:
                          m = v;
                          break;
                        default:
                          m = v;
                      }
                      "function" == typeof I ? I(m) : (I.current = m);
                    }
                  }
                  Ha = Ha.nextEffect;
                }
              } catch (e) {
                if (null === Ha) throw Error(s(330));
                Dc(Ha, e), (Ha = Ha.nextEffect);
              }
            } while (null !== Ha);
            (Ha = null), Uo(), (Na = o);
          } else e.current = n;
          if (Xa) (Xa = !1), (Wa = e), (qa = t);
          else
            for (Ha = r; null !== Ha; )
              (t = Ha.nextEffect),
                (Ha.nextEffect = null),
                8 & Ha.flags &&
                  (((A = Ha).sibling = null), (A.stateNode = null)),
                (Ha = t);
          if (
            (0 === (r = e.pendingLanes) && (Ja = null),
            1 === r ? (e === ec ? Za++ : ((Za = 0), (ec = e))) : (Za = 0),
            (n = n.stateNode),
            To && "function" == typeof To.onCommitFiberRoot)
          )
            try {
              To.onCommitFiberRoot(mo, n, void 0, 64 == (64 & n.current.flags));
            } catch (e) {}
          if ((lc(e, Fo()), Va)) throw ((Va = !1), (e = ja), (ja = null), e);
          return 0 != (8 & Na) || jo(), null;
        }
        function Oc() {
          for (; null !== Ha; ) {
            var e = Ha.alternate;
            ic ||
              null === oc ||
              (0 != (8 & Ha.flags)
                ? Ze(Ha, oc) && (ic = !0)
                : 13 === Ha.tag && ya(e, Ha) && Ze(Ha, oc) && (ic = !0));
            var t = Ha.flags;
            0 != (256 & t) && la(e, Ha),
              0 == (512 & t) ||
                Xa ||
                ((Xa = !0),
                Vo(97, function () {
                  return Pc(), null;
                })),
              (Ha = Ha.nextEffect);
          }
        }
        function Pc() {
          if (90 !== qa) {
            var e = 97 < qa ? 97 : qa;
            return (qa = 90), Ho(e, bc);
          }
          return !1;
        }
        function Mc(e, t) {
          za.push(t, e),
            Xa ||
              ((Xa = !0),
              Vo(97, function () {
                return Pc(), null;
              }));
        }
        function Lc(e, t) {
          Qa.push(t, e),
            Xa ||
              ((Xa = !0),
              Vo(97, function () {
                return Pc(), null;
              }));
        }
        function bc() {
          if (null === Wa) return !1;
          var e = Wa;
          if (((Wa = null), 0 != (48 & Na))) throw Error(s(331));
          var t = Na;
          Na |= 32;
          var n = Qa;
          Qa = [];
          for (var r = 0; r < n.length; r += 2) {
            var o = n[r],
              i = n[r + 1],
              a = o.destroy;
            if (((o.destroy = void 0), "function" == typeof a))
              try {
                a();
              } catch (e) {
                if (null === i) throw Error(s(330));
                Dc(i, e);
              }
          }
          for (n = za, za = [], r = 0; r < n.length; r += 2) {
            (o = n[r]), (i = n[r + 1]);
            try {
              var c = o.create;
              o.destroy = c();
            } catch (e) {
              if (null === i) throw Error(s(330));
              Dc(i, e);
            }
          }
          for (c = e.current.firstEffect; null !== c; )
            (e = c.nextEffect),
              (c.nextEffect = null),
              8 & c.flags && ((c.sibling = null), (c.stateNode = null)),
              (c = e);
          return (Na = t), jo(), !0;
        }
        function wc(e, t, n) {
          ci(e, (t = sa(0, (t = ra(n, t)), 1))),
            (t = sc()),
            null !== (e = uc(e, 1)) && (Kt(e, 1, t), lc(e, t));
        }
        function Dc(e, t) {
          if (3 === e.tag) wc(e, e, t);
          else
            for (var n = e.return; null !== n; ) {
              if (3 === n.tag) {
                wc(n, e, t);
                break;
              }
              if (1 === n.tag) {
                var r = n.stateNode;
                if (
                  "function" == typeof n.type.getDerivedStateFromError ||
                  ("function" == typeof r.componentDidCatch &&
                    (null === Ja || !Ja.has(r)))
                ) {
                  var o = aa(n, (e = ra(t, e)), 1);
                  if ((ci(n, o), (o = sc()), null !== (n = uc(n, 1))))
                    Kt(n, 1, o), lc(n, o);
                  else if (
                    "function" == typeof r.componentDidCatch &&
                    (null === Ja || !Ja.has(r))
                  )
                    try {
                      r.componentDidCatch(t, e);
                    } catch (e) {}
                  break;
                }
              }
              n = n.return;
            }
        }
        function Uc(e, t, n) {
          var r = e.pingCache;
          null !== r && r.delete(t),
            (t = sc()),
            (e.pingedLanes |= e.suspendedLanes & n),
            Ra === e &&
              (Pa & n) === n &&
              (4 === ba ||
              (3 === ba && (62914560 & Pa) === Pa && 500 > Fo() - ka)
                ? Cc(e, 0)
                : (Ya |= n)),
            lc(e, t);
        }
        function xc(e, t) {
          var n = e.stateNode;
          null !== n && n.delete(t),
            0 == (t = 0) &&
              (0 == (2 & (t = e.mode))
                ? (t = 1)
                : 0 == (4 & t)
                ? (t = 99 === Bo() ? 1 : 2)
                : (0 === nc && (nc = Da),
                  0 === (t = Ft(62914560 & ~nc)) && (t = 4194304))),
            (n = sc()),
            null !== (e = uc(e, t)) && (Kt(e, t, n), lc(e, n));
        }
        function Yc(e, t, n, r) {
          (this.tag = e),
            (this.key = n),
            (this.sibling =
              this.child =
              this.return =
              this.stateNode =
              this.type =
              this.elementType =
                null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies =
              this.memoizedState =
              this.updateQueue =
              this.memoizedProps =
                null),
            (this.mode = r),
            (this.flags = 0),
            (this.lastEffect = this.firstEffect = this.nextEffect = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
        }
        function Gc(e, t, n, r) {
          return new Yc(e, t, n, r);
        }
        function kc(e) {
          return !(!(e = e.prototype) || !e.isReactComponent);
        }
        function Fc(e, t) {
          var n = e.alternate;
          return (
            null === n
              ? (((n = Gc(e.tag, t, e.key, e.mode)).elementType =
                  e.elementType),
                (n.type = e.type),
                (n.stateNode = e.stateNode),
                (n.alternate = e),
                (e.alternate = n))
              : ((n.pendingProps = t),
                (n.type = e.type),
                (n.flags = 0),
                (n.nextEffect = null),
                (n.firstEffect = null),
                (n.lastEffect = null)),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies =
              null === t
                ? null
                : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
          );
        }
        function Bc(e, t, n, r, o, i) {
          var a = 2;
          if (((r = e), "function" == typeof e)) kc(e) && (a = 1);
          else if ("string" == typeof e) a = 5;
          else
            e: switch (e) {
              case I:
                return Kc(n.children, o, i, t);
              case x:
                (a = 8), (o |= 16);
                break;
              case v:
                (a = 8), (o |= 1);
                break;
              case N:
                return (
                  ((e = Gc(12, n, t, 8 | o)).elementType = N),
                  (e.type = N),
                  (e.lanes = i),
                  e
                );
              case M:
                return (
                  ((e = Gc(13, n, t, o)).type = M),
                  (e.elementType = M),
                  (e.lanes = i),
                  e
                );
              case L:
                return (
                  ((e = Gc(19, n, t, o)).elementType = L), (e.lanes = i), e
                );
              case Y:
                return Hc(n, o, i, t);
              case G:
                return (
                  ((e = Gc(24, n, t, o)).elementType = G), (e.lanes = i), e
                );
              default:
                if ("object" == typeof e && null !== e)
                  switch (e.$$typeof) {
                    case R:
                      a = 10;
                      break e;
                    case O:
                      a = 9;
                      break e;
                    case P:
                      a = 11;
                      break e;
                    case b:
                      a = 14;
                      break e;
                    case w:
                      (a = 16), (r = null);
                      break e;
                    case D:
                      a = 22;
                      break e;
                  }
                throw Error(s(130, null == e ? e : typeof e, ""));
            }
          return (
            ((t = Gc(a, n, t, o)).elementType = e),
            (t.type = r),
            (t.lanes = i),
            t
          );
        }
        function Kc(e, t, n, r) {
          return ((e = Gc(7, e, r, t)).lanes = n), e;
        }
        function Hc(e, t, n, r) {
          return ((e = Gc(23, e, r, t)).elementType = Y), (e.lanes = n), e;
        }
        function Vc(e, t, n) {
          return ((e = Gc(6, e, null, t)).lanes = n), e;
        }
        function jc(e, t, n) {
          return (
            ((t = Gc(
              4,
              null !== e.children ? e.children : [],
              e.key,
              t
            )).lanes = n),
            (t.stateNode = {
              containerInfo: e.containerInfo,
              pendingChildren: null,
              implementation: e.implementation,
            }),
            t
          );
        }
        function Jc(e, t, n) {
          (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork =
              this.pingCache =
              this.current =
              this.pendingChildren =
                null),
            (this.timeoutHandle = -1),
            (this.pendingContext = this.context = null),
            (this.hydrate = n),
            (this.callbackNode = null),
            (this.callbackPriority = 0),
            (this.eventTimes = Bt(0)),
            (this.expirationTimes = Bt(-1)),
            (this.entangledLanes =
              this.finishedLanes =
              this.mutableReadLanes =
              this.expiredLanes =
              this.pingedLanes =
              this.suspendedLanes =
              this.pendingLanes =
                0),
            (this.entanglements = Bt(0)),
            (this.mutableSourceEagerHydrationData = null);
        }
        function Xc(e, t, n) {
          var r =
            3 < arguments.length && void 0 !== arguments[3]
              ? arguments[3]
              : null;
          return {
            $$typeof: A,
            key: null == r ? null : "" + r,
            children: e,
            containerInfo: t,
            implementation: n,
          };
        }
        function Wc(e, t, n, r) {
          var o = t.current,
            i = sc(),
            a = ac(o);
          e: if (n) {
            t: {
              if (qe((n = n._reactInternals)) !== n || 1 !== n.tag)
                throw Error(s(170));
              var c = n;
              do {
                switch (c.tag) {
                  case 3:
                    c = c.stateNode.context;
                    break t;
                  case 1:
                    if (ho(c.type)) {
                      c = c.stateNode.__reactInternalMemoizedMergedChildContext;
                      break t;
                    }
                }
                c = c.return;
              } while (null !== c);
              throw Error(s(171));
            }
            if (1 === n.tag) {
              var u = n.type;
              if (ho(u)) {
                n = So(n, u, c);
                break e;
              }
            }
            n = c;
          } else n = co;
          return (
            null === t.context ? (t.context = n) : (t.pendingContext = n),
            ((t = ai(i, a)).payload = { element: e }),
            null !== (r = void 0 === r ? null : r) && (t.callback = r),
            ci(o, t),
            cc(o, a, i),
            a
          );
        }
        function qc(e) {
          if (!(e = e.current).child) return null;
          switch (e.child.tag) {
            case 5:
            default:
              return e.child.stateNode;
          }
        }
        function zc(e, t) {
          if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
            var n = e.retryLane;
            e.retryLane = 0 !== n && n < t ? n : t;
          }
        }
        function Qc(e, t) {
          zc(e, t), (e = e.alternate) && zc(e, t);
        }
        function $c(e, t, n) {
          var r =
            (null != n &&
              null != n.hydrationOptions &&
              n.hydrationOptions.mutableSources) ||
            null;
          if (
            ((n = new Jc(e, t, null != n && !0 === n.hydrate)),
            (t = Gc(3, null, null, 2 === t ? 7 : 1 === t ? 3 : 0)),
            (n.current = t),
            (t.stateNode = n),
            ii(t),
            (e[zr] = n.current),
            Or(8 === e.nodeType ? e.parentNode : e),
            r)
          )
            for (e = 0; e < r.length; e++) {
              var o = (t = r[e])._getVersion;
              (o = o(t._source)),
                null == n.mutableSourceEagerHydrationData
                  ? (n.mutableSourceEagerHydrationData = [t, o])
                  : n.mutableSourceEagerHydrationData.push(t, o);
            }
          this._internalRoot = n;
        }
        function Zc(e) {
          return !(
            !e ||
            (1 !== e.nodeType &&
              9 !== e.nodeType &&
              11 !== e.nodeType &&
              (8 !== e.nodeType ||
                " react-mount-point-unstable " !== e.nodeValue))
          );
        }
        function eu(e, t, n, r, o) {
          var i = n._reactRootContainer;
          if (i) {
            var s = i._internalRoot;
            if ("function" == typeof o) {
              var a = o;
              o = function () {
                var e = qc(s);
                a.call(e);
              };
            }
            Wc(t, s, e, o);
          } else {
            if (
              ((i = n._reactRootContainer =
                (function (e, t) {
                  if (
                    (t ||
                      (t = !(
                        !(t = e
                          ? 9 === e.nodeType
                            ? e.documentElement
                            : e.firstChild
                          : null) ||
                        1 !== t.nodeType ||
                        !t.hasAttribute("data-reactroot")
                      )),
                    !t)
                  )
                    for (var n; (n = e.lastChild); ) e.removeChild(n);
                  return new $c(e, 0, t ? { hydrate: !0 } : void 0);
                })(n, r)),
              (s = i._internalRoot),
              "function" == typeof o)
            ) {
              var c = o;
              o = function () {
                var e = qc(s);
                c.call(e);
              };
            }
            Ec(function () {
              Wc(t, s, e, o);
            });
          }
          return qc(s);
        }
        function tu(e, t) {
          var n =
            2 < arguments.length && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          if (!Zc(t)) throw Error(s(200));
          return Xc(e, t, null, n);
        }
        (Ka = function (e, t, n) {
          var r = t.lanes;
          if (null !== e)
            if (e.memoizedProps !== t.pendingProps || lo.current) ws = !0;
            else {
              if (0 == (n & r)) {
                switch (((ws = !1), t.tag)) {
                  case 3:
                    Hs(t), Vi();
                    break;
                  case 5:
                    bi(t);
                    break;
                  case 1:
                    ho(t.type) && Co(t);
                    break;
                  case 4:
                    Mi(t, t.stateNode.containerInfo);
                    break;
                  case 10:
                    r = t.memoizedProps.value;
                    var o = t.type._context;
                    ao(qo, o._currentValue), (o._currentValue = r);
                    break;
                  case 13:
                    if (null !== t.memoizedState)
                      return 0 != (n & t.child.childLanes)
                        ? Ws(e, t, n)
                        : (ao(Di, 1 & Di.current),
                          null !== (t = Zs(e, t, n)) ? t.sibling : null);
                    ao(Di, 1 & Di.current);
                    break;
                  case 19:
                    if (((r = 0 != (n & t.childLanes)), 0 != (64 & e.flags))) {
                      if (r) return $s(e, t, n);
                      t.flags |= 64;
                    }
                    if (
                      (null !== (o = t.memoizedState) &&
                        ((o.rendering = null),
                        (o.tail = null),
                        (o.lastEffect = null)),
                      ao(Di, Di.current),
                      r)
                    )
                      break;
                    return null;
                  case 23:
                  case 24:
                    return (t.lanes = 0), Gs(e, t, n);
                }
                return Zs(e, t, n);
              }
              ws = 0 != (16384 & e.flags);
            }
          else ws = !1;
          switch (((t.lanes = 0), t.tag)) {
            case 2:
              if (
                ((r = t.type),
                null !== e &&
                  ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                (e = t.pendingProps),
                (o = fo(t, uo.current)),
                ni(t, n),
                (o = rs(null, t, r, e, o, n)),
                (t.flags |= 1),
                "object" == typeof o &&
                  null !== o &&
                  "function" == typeof o.render &&
                  void 0 === o.$$typeof)
              ) {
                if (
                  ((t.tag = 1),
                  (t.memoizedState = null),
                  (t.updateQueue = null),
                  ho(r))
                ) {
                  var i = !0;
                  Co(t);
                } else i = !1;
                (t.memoizedState =
                  null !== o.state && void 0 !== o.state ? o.state : null),
                  ii(t);
                var a = r.getDerivedStateFromProps;
                "function" == typeof a && fi(t, r, a, e),
                  (o.updater = hi),
                  (t.stateNode = o),
                  (o._reactInternals = t),
                  Ci(t, r, e, n),
                  (t = Ks(null, t, r, !0, i, n));
              } else (t.tag = 0), Ds(null, t, o, n), (t = t.child);
              return t;
            case 16:
              o = t.elementType;
              e: {
                switch (
                  (null !== e &&
                    ((e.alternate = null),
                    (t.alternate = null),
                    (t.flags |= 2)),
                  (e = t.pendingProps),
                  (o = (i = o._init)(o._payload)),
                  (t.type = o),
                  (i = t.tag =
                    (function (e) {
                      if ("function" == typeof e) return kc(e) ? 1 : 0;
                      if (null != e) {
                        if ((e = e.$$typeof) === P) return 11;
                        if (e === b) return 14;
                      }
                      return 2;
                    })(o)),
                  (e = Wo(o, e)),
                  i)
                ) {
                  case 0:
                    t = Fs(null, t, o, e, n);
                    break e;
                  case 1:
                    t = Bs(null, t, o, e, n);
                    break e;
                  case 11:
                    t = Us(null, t, o, e, n);
                    break e;
                  case 14:
                    t = xs(null, t, o, Wo(o.type, e), r, n);
                    break e;
                }
                throw Error(s(306, o, ""));
              }
              return t;
            case 0:
              return (
                (r = t.type),
                (o = t.pendingProps),
                Fs(e, t, r, (o = t.elementType === r ? o : Wo(r, o)), n)
              );
            case 1:
              return (
                (r = t.type),
                (o = t.pendingProps),
                Bs(e, t, r, (o = t.elementType === r ? o : Wo(r, o)), n)
              );
            case 3:
              if ((Hs(t), (r = t.updateQueue), null === e || null === r))
                throw Error(s(282));
              if (
                ((r = t.pendingProps),
                (o = null !== (o = t.memoizedState) ? o.element : null),
                si(e, t),
                li(t, r, null, n),
                (r = t.memoizedState.element) === o)
              )
                Vi(), (t = Zs(e, t, n));
              else {
                if (
                  ((i = (o = t.stateNode).hydrate) &&
                    ((Yi = Vr(t.stateNode.containerInfo.firstChild)),
                    (xi = t),
                    (i = Gi = !0)),
                  i)
                ) {
                  if (null != (e = o.mutableSourceEagerHydrationData))
                    for (o = 0; o < e.length; o += 2)
                      ((i = e[o])._workInProgressVersionPrimary = e[o + 1]),
                        ji.push(i);
                  for (n = Ii(t, null, r, n), t.child = n; n; )
                    (n.flags = (-3 & n.flags) | 1024), (n = n.sibling);
                } else Ds(e, t, r, n), Vi();
                t = t.child;
              }
              return t;
            case 5:
              return (
                bi(t),
                null === e && Bi(t),
                (r = t.type),
                (o = t.pendingProps),
                (i = null !== e ? e.memoizedProps : null),
                (a = o.children),
                Fr(r, o)
                  ? (a = null)
                  : null !== i && Fr(r, i) && (t.flags |= 16),
                ks(e, t),
                Ds(e, t, a, n),
                t.child
              );
            case 6:
              return null === e && Bi(t), null;
            case 13:
              return Ws(e, t, n);
            case 4:
              return (
                Mi(t, t.stateNode.containerInfo),
                (r = t.pendingProps),
                null === e ? (t.child = Ai(t, null, r, n)) : Ds(e, t, r, n),
                t.child
              );
            case 11:
              return (
                (r = t.type),
                (o = t.pendingProps),
                Us(e, t, r, (o = t.elementType === r ? o : Wo(r, o)), n)
              );
            case 7:
              return Ds(e, t, t.pendingProps, n), t.child;
            case 8:
            case 12:
              return Ds(e, t, t.pendingProps.children, n), t.child;
            case 10:
              e: {
                (r = t.type._context),
                  (o = t.pendingProps),
                  (a = t.memoizedProps),
                  (i = o.value);
                var c = t.type._context;
                if (
                  (ao(qo, c._currentValue), (c._currentValue = i), null !== a)
                )
                  if (
                    ((c = a.value),
                    0 ==
                      (i = sr(c, i)
                        ? 0
                        : 0 |
                          ("function" == typeof r._calculateChangedBits
                            ? r._calculateChangedBits(c, i)
                            : 1073741823)))
                  ) {
                    if (a.children === o.children && !lo.current) {
                      t = Zs(e, t, n);
                      break e;
                    }
                  } else
                    for (
                      null !== (c = t.child) && (c.return = t);
                      null !== c;

                    ) {
                      var u = c.dependencies;
                      if (null !== u) {
                        a = c.child;
                        for (var l = u.firstContext; null !== l; ) {
                          if (l.context === r && 0 != (l.observedBits & i)) {
                            1 === c.tag &&
                              (((l = ai(-1, n & -n)).tag = 2), ci(c, l)),
                              (c.lanes |= n),
                              null !== (l = c.alternate) && (l.lanes |= n),
                              ti(c.return, n),
                              (u.lanes |= n);
                            break;
                          }
                          l = l.next;
                        }
                      } else
                        a = 10 === c.tag && c.type === t.type ? null : c.child;
                      if (null !== a) a.return = c;
                      else
                        for (a = c; null !== a; ) {
                          if (a === t) {
                            a = null;
                            break;
                          }
                          if (null !== (c = a.sibling)) {
                            (c.return = a.return), (a = c);
                            break;
                          }
                          a = a.return;
                        }
                      c = a;
                    }
                Ds(e, t, o.children, n), (t = t.child);
              }
              return t;
            case 9:
              return (
                (o = t.type),
                (r = (i = t.pendingProps).children),
                ni(t, n),
                (r = r((o = ri(o, i.unstable_observedBits)))),
                (t.flags |= 1),
                Ds(e, t, r, n),
                t.child
              );
            case 14:
              return (
                (i = Wo((o = t.type), t.pendingProps)),
                xs(e, t, o, (i = Wo(o.type, i)), r, n)
              );
            case 15:
              return Ys(e, t, t.type, t.pendingProps, r, n);
            case 17:
              return (
                (r = t.type),
                (o = t.pendingProps),
                (o = t.elementType === r ? o : Wo(r, o)),
                null !== e &&
                  ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                (t.tag = 1),
                ho(r) ? ((e = !0), Co(t)) : (e = !1),
                ni(t, n),
                gi(t, r, o),
                Ci(t, r, o, n),
                Ks(null, t, r, !0, e, n)
              );
            case 19:
              return $s(e, t, n);
            case 23:
            case 24:
              return Gs(e, t, n);
          }
          throw Error(s(156, t.tag));
        }),
          ($c.prototype.render = function (e) {
            Wc(e, this._internalRoot, null, null);
          }),
          ($c.prototype.unmount = function () {
            var e = this._internalRoot,
              t = e.containerInfo;
            Wc(null, e, null, function () {
              t[zr] = null;
            });
          }),
          (et = function (e) {
            13 === e.tag && (cc(e, 4, sc()), Qc(e, 4));
          }),
          (tt = function (e) {
            13 === e.tag && (cc(e, 67108864, sc()), Qc(e, 67108864));
          }),
          (nt = function (e) {
            if (13 === e.tag) {
              var t = sc(),
                n = ac(e);
              cc(e, n, t), Qc(e, n);
            }
          }),
          (rt = function (e, t) {
            return t();
          }),
          (Ne = function (e, t, n) {
            switch (t) {
              case "input":
                if ((ne(e, n), (t = n.name), "radio" === n.type && null != t)) {
                  for (n = e; n.parentNode; ) n = n.parentNode;
                  for (
                    n = n.querySelectorAll(
                      "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
                    ),
                      t = 0;
                    t < n.length;
                    t++
                  ) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                      var o = to(r);
                      if (!o) throw Error(s(90));
                      Q(r), ne(r, o);
                    }
                  }
                }
                break;
              case "textarea":
                ue(e, n);
                break;
              case "select":
                null != (t = n.value) && se(e, !!n.multiple, t, !1);
            }
          }),
          (be = hc),
          (we = function (e, t, n, r, o) {
            var i = Na;
            Na |= 4;
            try {
              return Ho(98, e.bind(null, t, n, r, o));
            } finally {
              0 === (Na = i) && (Ba(), jo());
            }
          }),
          (De = function () {
            0 == (49 & Na) &&
              ((function () {
                if (null !== $a) {
                  var e = $a;
                  ($a = null),
                    e.forEach(function (e) {
                      (e.expiredLanes |= 24 & e.pendingLanes), lc(e, Fo());
                    });
                }
                jo();
              })(),
              Pc());
          }),
          (Ue = function (e, t) {
            var n = Na;
            Na |= 2;
            try {
              return e(t);
            } finally {
              0 === (Na = n) && (Ba(), jo());
            }
          });
        var nu = { Events: [Zr, eo, to, Me, Le, Pc, { current: !1 }] },
          ru = {
            findFiberByHostInstance: $r,
            bundleType: 0,
            version: "17.0.2",
            rendererPackageName: "react-dom",
          },
          ou = {
            bundleType: ru.bundleType,
            version: ru.version,
            rendererPackageName: ru.rendererPackageName,
            rendererConfig: ru.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: T.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = $e(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance:
              ru.findFiberByHostInstance ||
              function () {
                return null;
              },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
          };
        if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
          var iu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!iu.isDisabled && iu.supportsFiber)
            try {
              (mo = iu.inject(ou)), (To = iu);
            } catch (Ee) {}
        }
        (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = nu),
          (t.createPortal = tu),
          (t.findDOMNode = function (e) {
            if (null == e) return null;
            if (1 === e.nodeType) return e;
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" == typeof e.render) throw Error(s(188));
              throw Error(s(268, Object.keys(e)));
            }
            return null === (e = $e(t)) ? null : e.stateNode;
          }),
          (t.flushSync = function (e, t) {
            var n = Na;
            if (0 != (48 & n)) return e(t);
            Na |= 1;
            try {
              if (e) return Ho(99, e.bind(null, t));
            } finally {
              (Na = n), jo();
            }
          }),
          (t.hydrate = function (e, t, n) {
            if (!Zc(t)) throw Error(s(200));
            return eu(null, e, t, !0, n);
          }),
          (t.render = function (e, t, n) {
            if (!Zc(t)) throw Error(s(200));
            return eu(null, e, t, !1, n);
          }),
          (t.unmountComponentAtNode = function (e) {
            if (!Zc(e)) throw Error(s(40));
            return (
              !!e._reactRootContainer &&
              (Ec(function () {
                eu(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[zr] = null);
                });
              }),
              !0)
            );
          }),
          (t.unstable_batchedUpdates = hc),
          (t.unstable_createPortal = function (e, t) {
            return tu(
              e,
              t,
              2 < arguments.length && void 0 !== arguments[2]
                ? arguments[2]
                : null
            );
          }),
          (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
            if (!Zc(n)) throw Error(s(200));
            if (null == e || void 0 === e._reactInternals) throw Error(s(38));
            return eu(e, t, n, !1, r);
          }),
          (t.version = "17.0.2");
      },
      3935: (e, t, n) => {
        "use strict";
        !(function e() {
          if (
            "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
          )
            try {
              __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (e) {
              console.error(e);
            }
        })(),
          (e.exports = n(4448));
      },
      2408: (e, t, n) => {
        "use strict";
        var r = n(7418),
          o = 60103,
          i = 60106;
        (t.Fragment = 60107), (t.StrictMode = 60108), (t.Profiler = 60114);
        var s = 60109,
          a = 60110,
          c = 60112;
        t.Suspense = 60113;
        var u = 60115,
          l = 60116;
        if ("function" == typeof Symbol && Symbol.for) {
          var d = Symbol.for;
          (o = d("react.element")),
            (i = d("react.portal")),
            (t.Fragment = d("react.fragment")),
            (t.StrictMode = d("react.strict_mode")),
            (t.Profiler = d("react.profiler")),
            (s = d("react.provider")),
            (a = d("react.context")),
            (c = d("react.forward_ref")),
            (t.Suspense = d("react.suspense")),
            (u = d("react.memo")),
            (l = d("react.lazy"));
        }
        var p = "function" == typeof Symbol && Symbol.iterator;
        function f(e) {
          for (
            var t =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
              n = 1;
            n < arguments.length;
            n++
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        var h = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          E = {};
        function g(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = E),
            (this.updater = n || h);
        }
        function S() {}
        function C(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = E),
            (this.updater = n || h);
        }
        (g.prototype.isReactComponent = {}),
          (g.prototype.setState = function (e, t) {
            if ("object" != typeof e && "function" != typeof e && null != e)
              throw Error(f(85));
            this.updater.enqueueSetState(this, e, t, "setState");
          }),
          (g.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, "forceUpdate");
          }),
          (S.prototype = g.prototype);
        var _ = (C.prototype = new S());
        (_.constructor = C), r(_, g.prototype), (_.isPureReactComponent = !0);
        var m = { current: null },
          T = Object.prototype.hasOwnProperty,
          y = { key: !0, ref: !0, __self: !0, __source: !0 };
        function A(e, t, n) {
          var r,
            i = {},
            s = null,
            a = null;
          if (null != t)
            for (r in (void 0 !== t.ref && (a = t.ref),
            void 0 !== t.key && (s = "" + t.key),
            t))
              T.call(t, r) && !y.hasOwnProperty(r) && (i[r] = t[r]);
          var c = arguments.length - 2;
          if (1 === c) i.children = n;
          else if (1 < c) {
            for (var u = Array(c), l = 0; l < c; l++) u[l] = arguments[l + 2];
            i.children = u;
          }
          if (e && e.defaultProps)
            for (r in (c = e.defaultProps)) void 0 === i[r] && (i[r] = c[r]);
          return {
            $$typeof: o,
            type: e,
            key: s,
            ref: a,
            props: i,
            _owner: m.current,
          };
        }
        function I(e) {
          return "object" == typeof e && null !== e && e.$$typeof === o;
        }
        var v = /\/+/g;
        function N(e, t) {
          return "object" == typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { "=": "=0", ":": "=2" };
                return (
                  "$" +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })("" + e.key)
            : t.toString(36);
        }
        function R(e, t, n, r, s) {
          var a = typeof e;
          ("undefined" !== a && "boolean" !== a) || (e = null);
          var c = !1;
          if (null === e) c = !0;
          else
            switch (a) {
              case "string":
              case "number":
                c = !0;
                break;
              case "object":
                switch (e.$$typeof) {
                  case o:
                  case i:
                    c = !0;
                }
            }
          if (c)
            return (
              (s = s((c = e))),
              (e = "" === r ? "." + N(c, 0) : r),
              Array.isArray(s)
                ? ((n = ""),
                  null != e && (n = e.replace(v, "$&/") + "/"),
                  R(s, t, n, "", function (e) {
                    return e;
                  }))
                : null != s &&
                  (I(s) &&
                    (s = (function (e, t) {
                      return {
                        $$typeof: o,
                        type: e.type,
                        key: t,
                        ref: e.ref,
                        props: e.props,
                        _owner: e._owner,
                      };
                    })(
                      s,
                      n +
                        (!s.key || (c && c.key === s.key)
                          ? ""
                          : ("" + s.key).replace(v, "$&/") + "/") +
                        e
                    )),
                  t.push(s)),
              1
            );
          if (((c = 0), (r = "" === r ? "." : r + ":"), Array.isArray(e)))
            for (var u = 0; u < e.length; u++) {
              var l = r + N((a = e[u]), u);
              c += R(a, t, n, l, s);
            }
          else if (
            "function" ==
            typeof (l = (function (e) {
              return null === e || "object" != typeof e
                ? null
                : "function" == typeof (e = (p && e[p]) || e["@@iterator"])
                ? e
                : null;
            })(e))
          )
            for (e = l.call(e), u = 0; !(a = e.next()).done; )
              c += R((a = a.value), t, n, (l = r + N(a, u++)), s);
          else if ("object" === a)
            throw (
              ((t = "" + e),
              Error(
                f(
                  31,
                  "[object Object]" === t
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : t
                )
              ))
            );
          return c;
        }
        function O(e, t, n) {
          if (null == e) return e;
          var r = [],
            o = 0;
          return (
            R(e, r, "", "", function (e) {
              return t.call(n, e, o++);
            }),
            r
          );
        }
        function P(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()),
              (e._status = 0),
              (e._result = t),
              t.then(
                function (t) {
                  0 === e._status &&
                    ((t = t.default), (e._status = 1), (e._result = t));
                },
                function (t) {
                  0 === e._status && ((e._status = 2), (e._result = t));
                }
              );
          }
          if (1 === e._status) return e._result;
          throw e._result;
        }
        var M = { current: null };
        function L() {
          var e = M.current;
          if (null === e) throw Error(f(321));
          return e;
        }
        var b = {
          ReactCurrentDispatcher: M,
          ReactCurrentBatchConfig: { transition: 0 },
          ReactCurrentOwner: m,
          IsSomeRendererActing: { current: !1 },
          assign: r,
        };
        (t.Children = {
          map: O,
          forEach: function (e, t, n) {
            O(
              e,
              function () {
                t.apply(this, arguments);
              },
              n
            );
          },
          count: function (e) {
            var t = 0;
            return (
              O(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              O(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!I(e)) throw Error(f(143));
            return e;
          },
        }),
          (t.Component = g),
          (t.PureComponent = C),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = b),
          (t.cloneElement = function (e, t, n) {
            if (null == e) throw Error(f(267, e));
            var i = r({}, e.props),
              s = e.key,
              a = e.ref,
              c = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((a = t.ref), (c = m.current)),
                void 0 !== t.key && (s = "" + t.key),
                e.type && e.type.defaultProps)
              )
                var u = e.type.defaultProps;
              for (l in t)
                T.call(t, l) &&
                  !y.hasOwnProperty(l) &&
                  (i[l] = void 0 === t[l] && void 0 !== u ? u[l] : t[l]);
            }
            var l = arguments.length - 2;
            if (1 === l) i.children = n;
            else if (1 < l) {
              u = Array(l);
              for (var d = 0; d < l; d++) u[d] = arguments[d + 2];
              i.children = u;
            }
            return {
              $$typeof: o,
              type: e.type,
              key: s,
              ref: a,
              props: i,
              _owner: c,
            };
          }),
          (t.createContext = function (e, t) {
            return (
              void 0 === t && (t = null),
              ((e = {
                $$typeof: a,
                _calculateChangedBits: t,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
              }).Provider = { $$typeof: s, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = A),
          (t.createFactory = function (e) {
            var t = A.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: c, render: e };
          }),
          (t.isValidElement = I),
          (t.lazy = function (e) {
            return {
              $$typeof: l,
              _payload: { _status: -1, _result: e },
              _init: P,
            };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: u, type: e, compare: void 0 === t ? null : t };
          }),
          (t.useCallback = function (e, t) {
            return L().useCallback(e, t);
          }),
          (t.useContext = function (e, t) {
            return L().useContext(e, t);
          }),
          (t.useDebugValue = function () {}),
          (t.useEffect = function (e, t) {
            return L().useEffect(e, t);
          }),
          (t.useImperativeHandle = function (e, t, n) {
            return L().useImperativeHandle(e, t, n);
          }),
          (t.useLayoutEffect = function (e, t) {
            return L().useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return L().useMemo(e, t);
          }),
          (t.useReducer = function (e, t, n) {
            return L().useReducer(e, t, n);
          }),
          (t.useRef = function (e) {
            return L().useRef(e);
          }),
          (t.useState = function (e) {
            return L().useState(e);
          }),
          (t.version = "17.0.2");
      },
      7294: (e, t, n) => {
        "use strict";
        e.exports = n(2408);
      },
      53: (e, t) => {
        "use strict";
        var n, r, o, i;
        if (
          "object" == typeof performance &&
          "function" == typeof performance.now
        ) {
          var s = performance;
          t.unstable_now = function () {
            return s.now();
          };
        } else {
          var a = Date,
            c = a.now();
          t.unstable_now = function () {
            return a.now() - c;
          };
        }
        if (
          "undefined" == typeof window ||
          "function" != typeof MessageChannel
        ) {
          var u = null,
            l = null,
            d = function () {
              if (null !== u)
                try {
                  var e = t.unstable_now();
                  u(!0, e), (u = null);
                } catch (e) {
                  throw (setTimeout(d, 0), e);
                }
            };
          (n = function (e) {
            null !== u ? setTimeout(n, 0, e) : ((u = e), setTimeout(d, 0));
          }),
            (r = function (e, t) {
              l = setTimeout(e, t);
            }),
            (o = function () {
              clearTimeout(l);
            }),
            (t.unstable_shouldYield = function () {
              return !1;
            }),
            (i = t.unstable_forceFrameRate = function () {});
        } else {
          var p = window.setTimeout,
            f = window.clearTimeout;
          if ("undefined" != typeof console) {
            var h = window.cancelAnimationFrame;
            "function" != typeof window.requestAnimationFrame &&
              console.error(
                "This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"
              ),
              "function" != typeof h &&
                console.error(
                  "This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"
                );
          }
          var E = !1,
            g = null,
            S = -1,
            C = 5,
            _ = 0;
          (t.unstable_shouldYield = function () {
            return t.unstable_now() >= _;
          }),
            (i = function () {}),
            (t.unstable_forceFrameRate = function (e) {
              0 > e || 125 < e
                ? console.error(
                    "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                  )
                : (C = 0 < e ? Math.floor(1e3 / e) : 5);
            });
          var m = new MessageChannel(),
            T = m.port2;
          (m.port1.onmessage = function () {
            if (null !== g) {
              var e = t.unstable_now();
              _ = e + C;
              try {
                g(!0, e) ? T.postMessage(null) : ((E = !1), (g = null));
              } catch (e) {
                throw (T.postMessage(null), e);
              }
            } else E = !1;
          }),
            (n = function (e) {
              (g = e), E || ((E = !0), T.postMessage(null));
            }),
            (r = function (e, n) {
              S = p(function () {
                e(t.unstable_now());
              }, n);
            }),
            (o = function () {
              f(S), (S = -1);
            });
        }
        function y(e, t) {
          var n = e.length;
          e.push(t);
          e: for (;;) {
            var r = (n - 1) >>> 1,
              o = e[r];
            if (!(void 0 !== o && 0 < v(o, t))) break e;
            (e[r] = t), (e[n] = o), (n = r);
          }
        }
        function A(e) {
          return void 0 === (e = e[0]) ? null : e;
        }
        function I(e) {
          var t = e[0];
          if (void 0 !== t) {
            var n = e.pop();
            if (n !== t) {
              e[0] = n;
              e: for (var r = 0, o = e.length; r < o; ) {
                var i = 2 * (r + 1) - 1,
                  s = e[i],
                  a = i + 1,
                  c = e[a];
                if (void 0 !== s && 0 > v(s, n))
                  void 0 !== c && 0 > v(c, s)
                    ? ((e[r] = c), (e[a] = n), (r = a))
                    : ((e[r] = s), (e[i] = n), (r = i));
                else {
                  if (!(void 0 !== c && 0 > v(c, n))) break e;
                  (e[r] = c), (e[a] = n), (r = a);
                }
              }
            }
            return t;
          }
          return null;
        }
        function v(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        var N = [],
          R = [],
          O = 1,
          P = null,
          M = 3,
          L = !1,
          b = !1,
          w = !1;
        function D(e) {
          for (var t = A(R); null !== t; ) {
            if (null === t.callback) I(R);
            else {
              if (!(t.startTime <= e)) break;
              I(R), (t.sortIndex = t.expirationTime), y(N, t);
            }
            t = A(R);
          }
        }
        function U(e) {
          if (((w = !1), D(e), !b))
            if (null !== A(N)) (b = !0), n(x);
            else {
              var t = A(R);
              null !== t && r(U, t.startTime - e);
            }
        }
        function x(e, n) {
          (b = !1), w && ((w = !1), o()), (L = !0);
          var i = M;
          try {
            for (
              D(n), P = A(N);
              null !== P &&
              (!(P.expirationTime > n) || (e && !t.unstable_shouldYield()));

            ) {
              var s = P.callback;
              if ("function" == typeof s) {
                (P.callback = null), (M = P.priorityLevel);
                var a = s(P.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" == typeof a
                    ? (P.callback = a)
                    : P === A(N) && I(N),
                  D(n);
              } else I(N);
              P = A(N);
            }
            if (null !== P) var c = !0;
            else {
              var u = A(R);
              null !== u && r(U, u.startTime - n), (c = !1);
            }
            return c;
          } finally {
            (P = null), (M = i), (L = !1);
          }
        }
        var Y = i;
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            b || L || ((b = !0), n(x));
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return M;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return A(N);
          }),
          (t.unstable_next = function (e) {
            switch (M) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = M;
            }
            var n = M;
            M = t;
            try {
              return e();
            } finally {
              M = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = Y),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = M;
            M = e;
            try {
              return t();
            } finally {
              M = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, i, s) {
            var a = t.unstable_now();
            switch (
              ((s =
                "object" == typeof s &&
                null !== s &&
                "number" == typeof (s = s.delay) &&
                0 < s
                  ? a + s
                  : a),
              e)
            ) {
              case 1:
                var c = -1;
                break;
              case 2:
                c = 250;
                break;
              case 5:
                c = 1073741823;
                break;
              case 4:
                c = 1e4;
                break;
              default:
                c = 5e3;
            }
            return (
              (e = {
                id: O++,
                callback: i,
                priorityLevel: e,
                startTime: s,
                expirationTime: (c = s + c),
                sortIndex: -1,
              }),
              s > a
                ? ((e.sortIndex = s),
                  y(R, e),
                  null === A(N) &&
                    e === A(R) &&
                    (w ? o() : (w = !0), r(U, s - a)))
                : ((e.sortIndex = c), y(N, e), b || L || ((b = !0), n(x))),
              e
            );
          }),
          (t.unstable_wrapCallback = function (e) {
            var t = M;
            return function () {
              var n = M;
              M = t;
              try {
                return e.apply(this, arguments);
              } finally {
                M = n;
              }
            };
          });
      },
      3840: (e, t, n) => {
        "use strict";
        e.exports = n(53);
      },
    },
    i = {};
  function s(e) {
    var t = i[e];
    if (void 0 !== t) return t.exports;
    var n = (i[e] = { id: e, exports: {} });
    return o[e].call(n.exports, n, n.exports, s), n.exports;
  }
  (s.m = o),
    (s.n = (e) => {
      var t = e && e.__esModule ? () => e.default : () => e;
      return s.d(t, { a: t }), t;
    }),
    (t = Object.getPrototypeOf
      ? (e) => Object.getPrototypeOf(e)
      : (e) => e.__proto__),
    (s.t = function (n, r) {
      if ((1 & r && (n = this(n)), 8 & r)) return n;
      if ("object" == typeof n && n) {
        if (4 & r && n.__esModule) return n;
        if (16 & r && "function" == typeof n.then) return n;
      }
      var o = Object.create(null);
      s.r(o);
      var i = {};
      e = e || [null, t({}), t([]), t(t)];
      for (var a = 2 & r && n; "object" == typeof a && !~e.indexOf(a); a = t(a))
        Object.getOwnPropertyNames(a).forEach((e) => (i[e] = () => n[e]));
      return (i.default = () => n), s.d(o, i), o;
    }),
    (s.d = (e, t) => {
      for (var n in t)
        s.o(t, n) &&
          !s.o(e, n) &&
          Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
    }),
    (s.f = {}),
    (s.e = (e) =>
      Promise.all(Object.keys(s.f).reduce((t, n) => (s.f[n](e, t), t), []))),
    (s.u = (e) =>
      e +
      ".chunk." +
      {
        1: "f0c59484339d6e617b1b",
        2: "21df17dab38c74c1b5f0",
        3: "5521bb5fda589795053f",
        4: "12dd78290a5641eb9cfd",
        5: "6ecd975c298f21c7d498",
        6: "01ed9f5d4bdb50ab2fd7",
        7: "92a17801cd66fcf31f94",
        8: "fcdd43c88f248da0b43b",
        9: "0a063bf3d65fc3b85abc",
        10: "c8c0b293b5d3f07face1",
        11: "ac1823d631809271843e",
      }[e] +
      ".js"),
    (s.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
    (n = {}),
    (r = "CometChatWidget:"),
    (s.l = (e, t, o, i) => {
      if (n[e]) n[e].push(t);
      else {
        var a, c;
        if (void 0 !== o)
          for (
            var u = document.getElementsByTagName("script"), l = 0;
            l < u.length;
            l++
          ) {
            var d = u[l];
            if (
              d.getAttribute("src") == e ||
              d.getAttribute("data-webpack") == r + o
            ) {
              a = d;
              break;
            }
          }
        a ||
          ((c = !0),
          ((a = document.createElement("script")).charset = "utf-8"),
          (a.timeout = 120),
          s.nc && a.setAttribute("nonce", s.nc),
          a.setAttribute("data-webpack", r + o),
          (a.src = e)),
          (n[e] = [t]);
        var p = (t, r) => {
            (a.onerror = a.onload = null), clearTimeout(f);
            var o = n[e];
            if (
              (delete n[e],
              a.parentNode && a.parentNode.removeChild(a),
              o && o.forEach((e) => e(r)),
              t)
            )
              return t(r);
          },
          f = setTimeout(
            p.bind(null, void 0, { type: "timeout", target: a }),
            12e4
          );
        (a.onerror = p.bind(null, a.onerror)),
          (a.onload = p.bind(null, a.onload)),
          c && document.head.appendChild(a);
      }
    }),
    (s.r = (e) => {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (s.p = "https://widget-js.cometchat.io/v2/"),
    (() => {
      var e = { 0: 0 };
      s.f.j = (t, n) => {
        var r = s.o(e, t) ? e[t] : void 0;
        if (0 !== r)
          if (r) n.push(r[2]);
          else {
            var o = new Promise((n, o) => (r = e[t] = [n, o]));
            n.push((r[2] = o));
            var i = s.p + s.u(t),
              a = new Error();
            s.l(
              i,
              (n) => {
                if (s.o(e, t) && (0 !== (r = e[t]) && (e[t] = void 0), r)) {
                  var o = n && ("load" === n.type ? "missing" : n.type),
                    i = n && n.target && n.target.src;
                  (a.message =
                    "Loading chunk " + t + " failed.\n(" + o + ": " + i + ")"),
                    (a.name = "ChunkLoadError"),
                    (a.type = o),
                    (a.request = i),
                    r[1](a);
                }
              },
              "chunk-" + t,
              t
            );
          }
      };
      var t = (t, n) => {
          var r,
            o,
            [i, a, c] = n,
            u = 0;
          for (r in a) s.o(a, r) && (s.m[r] = a[r]);
          for (c && c(s), t && t(n); u < i.length; u++)
            (o = i[u]), s.o(e, o) && e[o] && e[o][0](), (e[i[u]] = 0);
        },
        n = (self.webpackChunkCometChatWidget =
          self.webpackChunkCometChatWidget || []);
      n.forEach(t.bind(null, 0)), (n.push = t.bind(null, n.push.bind(n)));
    })();
  var a = {};
  (() => {
    "use strict";
    s.d(a, { default: () => u }),
      s(6253),
      s(851),
      s(6059),
      s(7476),
      s(6108),
      s(5767),
      s(8837),
      s(4882),
      s(8351);
    var e = s(6418),
      t = s(6775),
      n = s(7607);
    function r(e, t) {
      var n = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t &&
          (r = r.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          n.push.apply(n, r);
      }
      return n;
    }
    function o(e) {
      for (var t = 1; t < arguments.length; t++) {
        var n = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? r(Object(n), !0).forEach(function (t) {
              c(e, t, n[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
          : r(Object(n)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(n, t)
              );
            });
      }
      return e;
    }
    function i(e, t) {
      for (var n = 0; n < t.length; n++) {
        var r = t[n];
        (r.enumerable = r.enumerable || !1),
          (r.configurable = !0),
          "value" in r && (r.writable = !0),
          Object.defineProperty(e, r.key, r);
      }
    }
    function c(e, t, n) {
      return (
        t in e
          ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (e[t] = n),
        e
      );
    }
    var u = (function () {
      function r() {
        !(function (e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        })(this, r);
      }
      var s, a;
      return (
        (s = r),
        (a = [
          {
            key: "init",
            value: function (t) {
              return new Promise(function (n, o) {
                if (e.CometChat.isInitialized()) {
                  var i = "CometChat Widget: CometChat already initialized";
                  return console.log(i), void n(i);
                }
                if (!t) {
                  var s =
                    "CometChat Widget Error: App ID and Region not available.";
                  return console.error(s), void o(s);
                }
                if (!t.appID) {
                  var a = "CometChat Widget Error: App ID not available.";
                  return console.error(a), void o(a);
                }
                if (!t.appRegion) {
                  var c = "CometChat Widget Error: Region not available.";
                  return console.error(c), void o(c);
                }
                (r.appID = t.appID),
                  (r.appRegion = t.appRegion),
                  t.authKey && (r.authKey = t.authKey);
                var u = new e.CometChat.AppSettingsBuilder()
                  .subscribePresenceForAllUsers()
                  .setRegion(r.appRegion)
                  .build();
                e.CometChat.init(r.appID, u)
                  .then(function (t) {
                    e.CometChat.setSource &&
                      e.CometChat.setSource("chat-widget", "web", "reactjs"),
                      console.log(
                        "CometChat Widget: CometChat initialised successfully"
                      ),
                      n(t);
                  })
                  .catch(function (e) {
                    console.error("CometChat Widget Error: ", e), o(e);
                  });
              });
            },
          },
          {
            key: "login",
            value: function (t) {
              return new Promise(function (n, o) {
                if (!e.CometChat.isInitialized()) {
                  var i = "CometChat Widget Error: CometChat not initialized.";
                  return console.error(i), void o(i);
                }
                if (!t || (!t.uid && !t.authToken)) {
                  var s =
                    "CometChat Widget Error: uid OR AuthToken is not available.";
                  return console.error(s), void o(s);
                }
                var a = [];
                if (t.authToken)
                  a.push(t.authToken), (r.authToken = t.authToken);
                else if (t.uid) {
                  if (!r.authKey) {
                    var c = "CometChat Widget Error: AuthKey is not available.";
                    return console.error(c), void o(c);
                  }
                  (r.UID = t.uid), a.push(r.UID, r.authKey);
                }
                e.CometChat.login
                  .apply(e.CometChat, a)
                  .then(function (e) {
                    if (e)
                      return (
                        console.log(
                          "CometChat Widget: User logged in successfully"
                        ),
                        void n(e)
                      );
                    var t = "CometChat Widget Error: Error in login.";
                    return console.error(t), void o(t);
                  })
                  .catch(function (e) {
                    console.error("CometChat Widget Error: ", e), o(e);
                  });
              });
            },
          },
          {
            key: "logout",
            value: function () {
              return new Promise(function (t, n) {
                e.CometChat.logout()
                  .then(function (e) {
                    console.log("CometChat Widget: Logged out successfully."),
                      t(e);
                  })
                  .catch(function (e) {
                    console.error("CometChat Widget Error: ", e), n(e);
                  });
              });
            },
          },
          {
            key: "createOrUpdateUser",
            value: function (e) {
              return this.updateUser(e);
            },
          },
          {
            key: "updateUser",
            value: function (t) {
              return new Promise(function (n, o) {
                if (!e.CometChat.isInitialized()) {
                  var i = "CometChat Widget Error: CometChat not initialized.";
                  return console.error(i), void o(i);
                }
                if (!t) {
                  var s = "CometChat Widget Error: User details not available.";
                  return console.error(s), void o(s);
                }
                if (!t.uid) {
                  var a = "CometChat Widget Error: uid is not available.";
                  return console.error(a), void o(a);
                }
                if (!t.name) {
                  var c = "CometChat Widget Error: name is not available.";
                  return console.error(c), void o(c);
                }
                if (!r.authKey) {
                  var u = "CometChat Widget Error: AuthKey is not available.";
                  return console.error(u), void o(u);
                }
                var l = new e.CometChat.User(t.uid);
                l.setName(t.name),
                  e.CometChat.updateUser(l, r.authKey)
                    .then(function (e) {
                      console.log(
                        "CometChat Widget: User updated successfully.",
                        e
                      ),
                        n(e);
                    })
                    .catch(function (t) {
                      if (!t.code || "ERR_UID_NOT_FOUND" !== t.code)
                        return (
                          console.error("CometChat Widget Error: ", t),
                          void o(t)
                        );
                      e.CometChat.createUser(l, r.authKey)
                        .then(function (e) {
                          console.log("CometChat Widget: User created.", e),
                            n(e);
                        })
                        .catch(function (e) {
                          console.error("CometChat Widget Error: ", e), o(e);
                        });
                    });
              });
            },
          },
          {
            key: "createOrUpdateGroup",
            value: function (e) {
              return this.updateGroup(e);
            },
          },
          {
            key: "updateGroup",
            value: function (t) {
              return new Promise(function (n, r) {
                if (!e.CometChat.isInitialized()) {
                  var o = "CometChat Widget Error: CometChat not initialized.";
                  return console.error(o), void r(o);
                }
                e.CometChat.getLoggedinUser()
                  .then(function (o) {
                    if (!o) {
                      var i = "CometChat Widget Error: User not logged in.";
                      return console.error(i), void r(i);
                    }
                    if (!t) {
                      var s =
                        "CometChat Widget Error: Group details not available.";
                      return console.error(s), void r(s);
                    }
                    if (!t.guid) {
                      var a = "CometChat Widget Error: guid is not available.";
                      return console.error(a), void r(a);
                    }
                    if (!t.groupName) {
                      var c =
                        "CometChat Widget Error: groupName is not available.";
                      return console.error(c), void r(c);
                    }
                    if (!t.groupType) {
                      var u =
                        "CometChat Widget Error: groupType is not available.";
                      return console.error(u), void r(u);
                    }
                    var l = "";
                    if (t.groupType === e.CometChat.GROUP_TYPE.PASSWORD) {
                      if (!t.password) {
                        var d =
                          "CometChat Widget Error: password is not available.";
                        return console.error(d), void r(d);
                      }
                      l = t.password;
                    }
                    var p = new e.CometChat.Group(
                      t.guid,
                      t.groupName,
                      t.groupType,
                      l
                    );
                    e.CometChat.updateGroup(p)
                      .then(function (e) {
                        console.log(
                          "CometChat Widget: Group details updated successfully.",
                          e
                        ),
                          n(e);
                      })
                      .catch(function (o) {
                        if (!o.code || "ERR_GUID_NOT_FOUND" !== o.code)
                          return (
                            console.error("CometChat Widget Error: ", o),
                            void r(o)
                          );
                        var i = new e.CometChat.Group(
                          t.guid,
                          t.groupName,
                          t.groupType
                        );
                        e.CometChat.createGroup(i)
                          .then(function (e) {
                            console.log("CometChat Widget: Group created.", e),
                              n(e);
                          })
                          .catch(function (e) {
                            console.error("CometChat Widget Error: ", e), r(e);
                          });
                      });
                  })
                  .catch(function (e) {
                    console.error("CometChat Widget Error: ", e), r(e);
                  });
              });
            },
          },
          {
            key: "launch",
            value: function (n) {
              return new Promise(function (i, s) {
                if (!e.CometChat.isInitialized()) {
                  var a = "CometChat Widget Error: CometChat not initialized";
                  return console.error(a), void s(a);
                }
                e.CometChat.getLoggedinUser()
                  .then(function (e) {
                    if (null === e || 0 === Object.keys(e).length) {
                      var a = "CometChat Widget Error: User not logged in.";
                      return console.error(a), void s(a);
                    }
                    if (!n.widgetID) {
                      var c =
                        "CometChat Widget Error: widgetID is not available.";
                      return console.error(c), void s(c);
                    }
                    var u = o(
                        o({}, n),
                        {},
                        {
                          appID: r.appID,
                          appRegion: r.appRegion,
                          loggedInUser: e,
                        }
                      ),
                      l = new t.Z(u);
                    l.checkForSettings()
                      .then(function (e) {
                        l.render()
                          .then(function (e) {
                            console.log("CometChat Widget: ", e), i(e);
                          })
                          .catch(function (e) {
                            console.error("CometChat Widget Error: ", e), s(e);
                          });
                      })
                      .catch(function (e) {
                        console.error("CometChat Widget Error: ", e), s(e);
                      });
                  })
                  .catch(function (e) {
                    console.error("CometChat Widget Error: ", e), s(e);
                  });
              });
            },
          },
          {
            key: "chatWithUser",
            value: function (e) {
              e
                ? ((e = e.toString()),
                  n.Z.triggerHandler("chatWithUser", { uid: e }))
                : console.error("CometChat Widget Error: uid not available");
            },
          },
          {
            key: "chatWithGroup",
            value: function (e) {
              e
                ? ((e = e.toString()),
                  n.Z.triggerHandler("chatWithGroup", { guid: e }))
                : console.error("CometChat Widget Error: guid not available");
            },
          },
          {
            key: "openOrCloseChat",
            value: function (e) {
              var t = e ? "onOpenChat" : "onCloseChat";
              n.Z.triggerHandler(t, { flag: e });
            },
          },
          {
            key: "localize",
            value: function (e) {
              e.trim().length
                ? n.Z.triggerHandler("localize", { lang: e })
                : console.error(
                    "CometChat Widget Error: language not available"
                  );
            },
          },
        ]),
        null && i(s.prototype, null),
        a && i(s, a),
        r
      );
    })();
    c(u, "appID", void 0),
      c(u, "appRegion", void 0),
      c(u, "authKey", void 0),
      c(u, "widgetID", void 0),
      c(u, "settings", {}),
      c(u, "on", n.Z.on);
  })(),
    (window.CometChatWidget = a.default);
  })();

let CometChatWidget = window.CometChatWidget;
export { CometChatWidget };
//# sourceMappingURL=cometchatwidget.js.map
